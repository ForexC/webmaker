(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = '<label for="block_{{$index}}">{{attributes.label.value}}</label>\n<div class="wrapper">\n    <button type="button" v-on="click: stepDown">-</button>\n    <div class="proxy">{{ proxyValue }}</div>\n    <button type="button" v-on="click: stepUp">+</button>\n\n    <!-- Input is hidden with .proxy showing value instead for more normalized CSS -->\n    <input\n        id="block_{{$index}}"\n        type="number"\n        value="{{attributes.current.value || attributes.min.value}}"\n        min="{{attributes.min.value}}"\n        max="{{attributes.max.value}}"\n        step="{{attributes.step.value}}">\n</div>\n';
},{}],2:[function(require,module,exports){
module.exports = {
  className: 'counter',
  template: require('./index.html'),
  data: {
    name: 'Counter',
    icon: 'images/blocks_counter.png',
    attributes: {
      label: {
        label: 'Title',
        type: 'string',
        value: '',
        placeholder: 'Your title goes here',
        skipAutoRender: true
      },
      color: {
        label: 'Title Text Color',
        type: 'color',
        value: '#638093'
      },
      min: {
        label: 'Minimum Number',
        type: 'number',
        value: '0',
        skipAutoRender: true
      },
      current: {
        label: 'Initial Number',
        type: 'number',
        value: '',
        placeholder: 'same as minimum number',
        skipAutoRender: true
      },
      max: {
        label: 'Maximum Number',
        type: 'number',
        value: '100',
        skipAutoRender: true
      },
      step: {
        label: 'Increment by',
        type: 'number',
        value: '1',
        skipAutoRender: true
      }
    }
  },
  ready: function () {
    var self = this;

    self.elInput = self.$el.querySelector('input[type="number"]');

    if (
      self.attributes.current.value === 'undefined' ||
      self.attributes.current.value === ''
    ) {
      self.attributes.current.value = self.attributes.min.value;
    }

    this.setProxy();
  },
  methods: {
    setProxy: function (value) {
      this.$data.proxyValue = this.elInput.value;
    },
    stepUp: function () {
      this.elInput.stepUp();
      this.setProxy();
    },
    stepDown: function () {
      this.elInput.stepDown();
      this.setProxy();
    }
  }
};

},{"./index.html":1}],3:[function(require,module,exports){
module.exports = '<label for="block_{{$index}}">{{attributes.label.value}}</label>\n\n<div v-component="dataRepresentation" v-with="dataSet: currentDataSets, initialDataLoaded: initialDataLoaded, isInteractive: isInteractive, sortOldest: sortOldest, label: label.label"></div>\n';
},{}],4:[function(require,module,exports){
var Data = require('../../lib/data');

module.exports = {
  className: 'data',
  template: require('./index.html'),
  data: {
    name: 'Data',
    icon: 'images/blocks_text.png',
    attributes: {
      label: {
        label: 'Header Text',
        type: 'string',
        value: '',
        placeholder: 'Responses',
        skipAutoRender: true
      },
      color: {
        label: 'Header and Title Text Color',
        type: 'color',
        value: '#36494A',
        skipAutoRender: true
      }
    },
    currentDataSets: [],
    initialDataLoaded: false,
    isInteractive: false,
    sortOldest: false
  },

  ready: function () {
    var self = this;

    if (!self.$data ||
      !self.$data.currentDataSets ||
      self.$data.currentDataSets.length === 0
    ) {
      self.$data.initialDataLoaded = false;
    }

    // Fetch collected Data
    self.currentDataSets = [];
    if (!self.isEditing) {
      var data = new Data(self.$parent.$parent.$data.app.id);

      data.getAllDataSets(function (currentDataSets) {
        self.$data.initialDataLoaded = true;
        self.currentDataSets = currentDataSets;
      });
    } else {
      self.$data.initialDataLoaded = true;
    }
  }
};

},{"../../lib/data":73,"./index.html":3}],5:[function(require,module,exports){
module.exports = '<label for="block_{{$index}}">{{attributes.label.value}}</label>\n\n<select id="block_{{$index}}" v-on="change: reportDataChange(this)">\n	<option selected disabled>Select from list</option>\n	<option v-repeat="attributes.elements.items" v-model="$value" value="{{$value}}"></option>\n</select>\n';
},{}],6:[function(require,module,exports){
module.exports = {
  className: 'dropdown',
  template: require('./index.html'),
  data: {
    name: 'Dropdown',
    icon: 'images/blocks_text.png',
    attributes: {
      label: {
        label: 'Title',
        type: 'string',
        value: '',
        placeholder: 'Your title goes here',
        skipAutoRender: true
      },
      color: {
        label: 'Title Text Color',
        type: 'color',
        value: '#638093'
      },
      elements: {
        label: 'Options',
        type: 'list',
        skipAutoRender: true,
        items: ['', '']
      }
    }
  },
  methods: {
    reportDataChange: function (self) {
      self.$dispatch('dataChange',
        this.$index,
        self.$el.querySelector('select').value
      );
    }
  },
  ready: function () {
    var self = this;

    // register block on data object
    self.$dispatch('dataChange',
      self.$index,
      '',
      self.$data.attributes.label.value
    );
  }
};

},{"./index.html":5}],7:[function(require,module,exports){
module.exports = '<img src="" width="100%" alt="" />';
},{}],8:[function(require,module,exports){
module.exports = {
  className: 'image',
  template: require('./index.html'),
  data: {
    name: 'Image',
    icon: 'images/blocks_image.png',
    attributes: {
      src: {
        label: 'Source',
        type: 'image',
        value: 'images/placeholder.png'
      }
    }
  }
};

},{"./index.html":7}],9:[function(require,module,exports){
module.exports = '<label for="block_{{$index}}">{{attributes.label.value}}</label>\n<input id="block_{{$index}}" type="text">\n';
},{}],10:[function(require,module,exports){
module.exports = {
  className: 'input-block',
  template: require('./index.html'),
  lazy: false,
  data: {
    name: 'Text Box',
    icon: 'images/blocks_input.png',
    attributes: {
      label: {
        label: 'Title',
        type: 'string',
        value: '',
        placeholder: 'Your title goes here',
        skipAutoRender: true
      },
      color: {
        label: 'Title Text Color',
        type: 'color',
        value: '#638093'
      }
    }
  }
};

},{"./index.html":9}],11:[function(require,module,exports){
module.exports = '<a v-on="click: openInBrowser" href="{{attributes.link.value}}">{{attributes.text.value}}</a>\n';
},{}],12:[function(require,module,exports){
var utils = require('../../lib/utils');

module.exports = {
  className: 'link',
  template: require('./index.html'),
  data: {
    name: 'Link',
    icon: 'images/blocks_link.svg',
    attributes: {
      link: {
        label: 'URL',
        type: 'input',
        value: 'https://mozilla.org'
      },
      text: {
        label: 'Link Text',
        type: 'input',
        value: 'Mozilla'
      }
    }
  },
  methods: {
    openInBrowser: utils.openInBrowser
  }
};

},{"../../lib/utils":86,"./index.html":11}],13:[function(require,module,exports){
module.exports = '<button class="btn" v-on="click: onClick">{{ attributes.innerHTML.value }}</button>\n';
},{}],14:[function(require,module,exports){
module.exports = {
  className: 'phone',
  template: require('./index.html'),
  data: {
    name: 'Phone',
    icon: 'images/blocks_phone.png',
    attributes: {
      number: {
        label: 'Phone #',
        type: 'string',
        value: '+18005555555'
      },
      innerHTML: {
        label: 'Label',
        type: 'string',
        value: 'Place call'
      },
      color: {
        label: 'Button Color',
        type: 'color',
        value: '#64A8EE',
        skipAutoRender: true
      }
    }
  },
  methods: {
    onClick: function (e) {
      e.preventDefault();
      window.location = 'tel:' + this.$data.attributes.number.value;
    }
  }
};

},{"./index.html":13}],15:[function(require,module,exports){
module.exports = '<hr style="border-bottom-color: {{attributes.color.value}}">\n';
},{}],16:[function(require,module,exports){
module.exports = {
  className: 'separator',
  template: require('./index.html'),
  data: {
    name: 'Separator',
    icon: 'images/blocks_separator.png',
    attributes: {
      color: {
        label: 'Color',
        type: 'color',
        value: '#333333'
      }
    }
  }
};

},{"./index.html":15}],17:[function(require,module,exports){
module.exports = '<button v-on="click: onClick" style="background-color: {{attributes.color.value}}"></button>\n';
},{}],18:[function(require,module,exports){
module.exports = {
  className: 'sms',
  template: require('./index.html'),
  data: {
    name: 'SMS',
    icon: 'images/blocks_sms.png',
    attributes: {
      value: {
        label: 'Phone #',
        type: 'string',
        value: '+18005555555'
      },
      messageBody: {
        label: 'Message',
        type: 'string',
        value: ''
      },
      innerHTML: {
        label: 'Label',
        type: 'string',
        value: 'Send SMS'
      },
      color: {
        label: 'Button Color',
        type: 'color',
        value: '#64A8EE',
        skipAutoRender: true
      }
    }
  },
  methods: {
    onClick: function (e) {
      e.preventDefault();
      var attr = this.$data.attributes;
      var number = attr.value.value;
      var body = attr.messageBody.value;
      window.location = 'sms:' + number + '?body=' + body;
    }
  }
};

},{"./index.html":17}],19:[function(require,module,exports){
module.exports = '<button class="btn btn-submit ion-checkmark-round" data-test="{{attributes.innerHTML.value}}" v-on="click: save">{{attributes.innerHTML.value}}\n</button>\n';
},{}],20:[function(require,module,exports){
module.exports = {
  className: 'submit',
  template: require('./index.html'),
  data: {
    name: 'Submit',
    icon: 'images/blocks_submit.png',
    attributes: {
      innerHTML: {
        label: 'Button Text',
        type: 'string',
        value: 'Submit',
        skipAutoRender: true
      },
      color: {
        label: 'Button Color',
        type: 'color',
        value: '#64A8EE',
        skipAutoRender: true
      }
    }
  },
  methods: {
    save: function (e) {
      var self = this;
      self.$dispatch('dataSave');
    }
  },
  created: function () {
    var self = this;

    self.$on('dataSaveSuccess', function () {
      self.$el.querySelector('button').disabled = 'disabled';
      self.$el.querySelector('button').style.pointerEvents = 'none';
      self.$el.querySelector('button').innerHTML = 'Data submitted!';
    });
  }
};

},{"./index.html":19}],21:[function(require,module,exports){
module.exports = '<p></p>';
},{}],22:[function(require,module,exports){
module.exports = {
  className: 'text',
  template: require('./index.html'),
  data: {
    name: 'Text',
    icon: 'images/blocks_text.png',
    attributes: {
      innerHTML: {
        label: 'Text',
        type: 'string',
        value: 'I am some text'
      },
      color: {
        label: 'Color',
        type: 'color',
        value: '#333444'
      },
      'font-size': {
        label: 'Font Size',
        type: 'font-size',
        value: '14'
      }
    }
  },
  // If we have multi-line text content, split it over several
  // paragraphs, preserving the user-intended line breaks.
  attached: function () {
    var data = this.$data.attributes.innerHTML.value;
    if (!!data) {
      data = data.trim();
      if (data.indexOf('\n') > -1) {
        var chunks = data.split('\n');
        this.$el.innerHTML = '';
        chunks.forEach(function (chunk) {
          var p = document.createElement('p');
          if (!!chunk) {
            p.textContent = chunk;
          } else {
            p.innerHTML = '&nbsp;';
          }
          this.$el.appendChild(p);
        }.bind(this));
      }
    }
  }
};

},{"./index.html":21}],23:[function(require,module,exports){
module.exports = '<div class="{{classes}}">\n    <div class="alert-icon">\n        <span class="fa {{icon}}"></span>\n    </div>\n    <div v-bind-i18n-html="message || \'errorDefault\'"></div>\n</div>\n';
},{}],24:[function(require,module,exports){
module.exports = {
  className: 'alert-container',
  template: require('./index.html'),
  paramAttributes: ['type', 'message', 'no-margin'],
  computed: {
    icon: function () {
      var check = 'ion-checkmark-circled';
      var x = 'ion-close-circled';
      return this.type === 'success' ? check : x;
    },
    classes: function () {
      var classes = 'alert alert-' + (this.$data.type || 'error');
      if (this.$data['no-margin'] || this.$data['no-margin'] === 0) {
        classes += ' no-margin';
      }
      return classes;
    }
  }
};

},{"./index.html":23}],25:[function(require,module,exports){
module.exports = '<a class="cell"\n    v-on="click: onClick"\n    data-id="{{id}}"\n    href="{{url}}">\n    <div class="left">\n        <span class="title">{{app.name}}</span>\n        <span v-if="view !== \'profile\'" class="description" v-bind-i18n-html="\'by _\'" v-with="{name: app.author.username || app.guestKey}"></span>\n    </div>\n    <div class="right">\n        <div class="app-icon" style="background:{{app.iconColor}};">\n          <div class="app-icon-image" style="background-image:url({{app.iconImage}});"></div>\n        </div>\n    </div>\n</a>\n';
},{}],26:[function(require,module,exports){
var i18n = require('../../lib/i18n');

module.exports = {
  className: 'app-cell',
  methods: {
    onClick: function () {
      this.$root.$data.enteredEditorFrom = '/profile';
    }
  },
  paramAttributes: ['appId', 'type'],
  template: require('./index.html'),
  computed: {
    guestKey: function () {
      return i18n.get('Guest');
    },
    url: function () {
      switch (this.type) {
        case 'profile': {
          return '/make/' + this.appId + '/detail/admin';
        }
        case 'discover': {
          return '/make/' + this.appId + '/detail';
        }
      }
    }
  },
  ready: function () {
    this.$data.view = this.$root.currentView;
  },
  data: {
    view: undefined
  }
};

},{"../../lib/i18n":74,"./index.html":25}],27:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<a class="input color-input" href="#" v-on="click: openColorPicker($event, value)">\n    <span class="input-swatch" style="background-color:{{value}};"></span> {{ value }}\n</a>\n\n<div v-component="colorPicker" v-class="active: showColorPicker" v-with="show: showColorPicker, selectedColor: value"></div>\n\n';
},{}],28:[function(require,module,exports){
module.exports = {
  id: 'color-picker-editor',
  template: require('./index.html'),
  components: {
    colorPicker: require('../../colorPicker')
  },
  data: {
    showColorPicker: false
  },
  methods: {
    onColorPickerDone: function () {
      this.$data.showColorPicker = false;
    },
    openColorPicker: function (e, color) {
      e.preventDefault();
      this.$broadcast('openCP', color);
    }
  }
};

},{"../../colorPicker":43,"./index.html":27}],29:[function(require,module,exports){
module.exports = '<div v-component="switch" v-with="value : sortOldest, options : options"></div>\n<div v-component="dataRepresentation" v-with="dataSet: currentDataSets, initialDataLoaded: initialDataLoaded, isInteractive: isInteractive, sortOldest: sortOldest"></div>\n';
},{}],30:[function(require,module,exports){
var Data = require('../../../lib/data');

module.exports = {
  id: 'data-editor',
  template: require('./index.html'),
  data: {
    options: ['Newest', 'Oldest'],
    currentDataSets: {},
    initialDataLoaded: false,
    isInteractive: true
  },
  ready: function () {
    var self = this;

    if (!self.$data ||
      !self.$data.currentDataSets ||
      self.$data.currentDataSets.length === 0
    ) {
      self.$data.initialDataLoaded = false;
    }

    // Fetch collected Data
    var data = new Data('foooobar');
    self.currentDataSets = data.getAllDataSets(function (currentDataSets) {
      self.$data.initialDataLoaded = true;
      self.$data.currentDataSets = currentDataSets;
    });
  }
};

},{"../../../lib/data":73,"./index.html":29}],31:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<select class="dropdownChoiceSelect" v-model="value">\n	<option v-repeat="options" value="{{$index}}" class="option-{{$index}}" v-attr="selected : $index == value">{{$value|i18n}}</option>\n</select>\n';
},{}],32:[function(require,module,exports){
module.exports = {
  id: 'dropdownChoice-editor',
  template: require('./index.html'),
  data: {
    options: [''],
    value: 0
  }
};

},{"./index.html":31}],33:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<div class="input-group">\n    <input name="{{id}}" type="number" v-model="value">\n    <span class="input-group-addon">px</span>\n</div>\n';
},{}],34:[function(require,module,exports){
module.exports = {
  id: 'font-size-editor',
  template: require('./index.html')
};

},{"./index.html":33}],35:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<input name="{{id}}" v-model="value" type="text" placeholder="{{ placeholder }}">\n';
},{}],36:[function(require,module,exports){
module.exports = {
  id: 'input-editor',
  template: require('./index.html'),
  data: {}
};

},{"./index.html":35}],37:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<input name="{{id}}" v-model="value" type="number" placeholder="{{ placeholder | i18n }}">\n\n<!-- Errors for max/min counter -->\n<div v-if="block.attributes.min.value > block.attributes.max.value && label == \'Maximum Number\'" class="form-error">\n{{ \'errorMaxMin\' | i18n }}</div>\n<div v-if="block.attributes.min.value > block.attributes.max.value && label == \'Minimum Number\'" class="form-error">\n{{ \'errorMinMax\' | i18n }}</div>\n';
},{}],38:[function(require,module,exports){
module.exports = {
  id: 'number-editor',
  template: require('./index.html'),
  data: {
    value: 0
  }
};

},{"./index.html":37}],39:[function(require,module,exports){
module.exports = '<label for="{{id}}">{{ label | i18n }}</label>\n<textarea name="{{id}}" type="text" v-model="value" placeholder="{{ \'Text\' | i18n }}"></textarea>\n<div v-show="!value" class="form-error">{{ \'errorNoText\' | i18n }}</div>\n';
},{}],40:[function(require,module,exports){
module.exports = {
  id: 'string-editor',
  template: require('./index.html'),
  data: {}
};

},{"./index.html":39}],41:[function(require,module,exports){
var transitionEndEventName = require('../../lib/transition-end-name')();

module.exports = {
  ready: function () {
    var self = this;

    if (!self.appid) {
      self.$watch('appid', function () {
        self.appReference = self.$root.storage.getApp(self.appid);
      });
    } else {
      self.appReference = self.$root.storage.getApp(self.appid);
    }

    self.$on('shiftBlock', function (event) {
      self.shiftBlock(event.index, event.steps);
    });

    self.$on('deleteBlock', function (event) {
      self.deleteBlock(event.index);
    });

    self.$on('cloneBlock', function (event) {
      self.cloneBlock(event.index);
    });
  },
  methods: {
    /**
     * Remove a block
     * @param  {Number} index Index of block to delete
     */
    deleteBlock: function (index) {
      var self = this;

      var elTarget =
        self.$el.querySelector(
          '.inline-editor:nth-child(' + (index + 1) + ')');

      elTarget.addEventListener(transitionEndEventName, function (event) {
        self.appReference.remove(index);
      });

      elTarget.classList.add('hidden');
    },
    /**
     * Clone a block
     * @param  {Number} index Index of block to delete
     */
    cloneBlock: function (index) {
      var self = this;

      var elTarget = self.$el.querySelector(
        '.inline-editor:nth-child(' + (index + 1) + ')');

      var elClone = elTarget.cloneNode(true);

      elClone.classList.add('hidden');

      elTarget.insertAdjacentHTML('afterend', elClone.outerHTML);

      setTimeout(function () {
        var elClone2 = self.$el.querySelector('.hidden');

        elClone2.addEventListener(transitionEndEventName, function () {
          self.appReference.duplicate(index);
          self.$el.removeChild(elClone2);
        });

        elClone2.classList.remove('hidden');
      }, 200);
    },
    /**
     * Move a block above or below a sibling
     * @param  {Number} index     Index of block to move
     * @param  {Number} steps Direction to move (-1 or 1)
     */
    shiftBlock: function (index, steps) {
      var self = this;

      // Error handling

      if (index < 0) {
        console.error('index can\'t be less than zero');
        return;
      } else if (index === 0 && steps === -1) {
        console.error('block is already at the top');
        return;
      } else if (index === self.$el.children.length - 1 && steps === 1) {
        console.error('block is already at the bottom');
        return;
      } else if (index >= self.$el.children.length) {
        console.error('index is out of bounds');
        return;
      }

      // Cache element references

      var elTarget = self.$el.querySelector(
        '.inline-editor:nth-child(' + (index + 1) + ')');
      var elSwapTarget;

      if (steps === 1) {
        elSwapTarget = self.$el.querySelector(
          '.inline-editor:nth-child(' + (index + 2) + ')');
      } else if (steps === -1) {
        elSwapTarget = self.$el.querySelector(
          '.inline-editor:nth-child(' + index + ')');
      }

      // Get element heights

      var elTargetHeight = getComputedStyle(elTarget).height;
      var elSwapTargetHeight = getComputedStyle(elSwapTarget).height;

      var transitionsCompleted = 0;

      function animationEnd() {
        if (transitionsCompleted === 2) {
          // Update model
          self.appReference.move(index, steps);
          elTarget.style.zIndex = 'inherit';
        }
      }

      elTarget.addEventListener(transitionEndEventName, function () {
        transitionsCompleted++;
        animationEnd();
      });

      elSwapTarget.addEventListener(transitionEndEventName, function () {
        transitionsCompleted++;
        animationEnd();
      });

      // Move elements

      function transform(element, value) {
        element.style.transform = value;
        element.style['-webkit-transform'] = value;
      }

      elTarget.style.zIndex = '9';

      if (steps === 1) {
        transform(elTarget, 'translateY(' + elSwapTargetHeight + ')');
        transform(elSwapTarget, 'translateY(-' + elTargetHeight + ')');
      } else if (steps === -1) {
        transform(elTarget, 'translateY(-' + elSwapTargetHeight + ')');
        transform(elSwapTarget, 'translateY(' + elTargetHeight + ')');
      }
    }
  }
};

},{"../../lib/transition-end-name":84}],42:[function(require,module,exports){
module.exports = '<nav class="navigationBar nav-default">\n    <div class="left"><button class="nav-btn" v-on="click: onCancel">{{ \'Cancel\' | i18n}}</button></div>\n    <h1>{{\'Select Color\' | i18n}}</h1>\n    <div class="right"><a class="save-btn" v-class="disabled: saveDisabled" v-on="click: onSave"><span class="ion ion-checkmark-round"></span></a></div>\n</nav>\n\n<div class="color-picker-inner">\n    <ul class="swatches primary">\n        <li v-repeat="color: colorGroups"\n            style="background-color:{{color}};"\n            v-class="selected: selectedColor === color"\n            v-on="click: selectColor(color)"></li>\n    </ul>\n\n    <ul class="swatches" v-repeat="colorSet: colors" v-show="$index === selectedGroup">\n        <li v-repeat="color: colorSet" style="background-color:{{color}};"\n            v-class="selected: selectedColor === color"\n            v-on="click: selectColor(color)"></li>\n    </ul>\n</div>\n';
},{}],43:[function(require,module,exports){
var utils = require('../../lib/utils');

var colorGroups = utils.baseColors;

module.exports = {
  className: 'color-picker',
  template: require('./index.html'),
  ready: function () {
    this.$on('openCP', function (color) {
      this.show = true;
      this.originalColor = color;
      this.cancelIntercept = this.onCancel.bind(this);
      document.addEventListener('backbutton',
        this.cancelIntercept, true);
    });
  },
  computed: {
    selectedGroup: function () {
      var groups = this.$data.colorGroups;
      var selected = this.$data.selectedColor;
      var index;
      this.$data.colors.forEach(function (group, groupIndex) {
        if (selected === groups[groupIndex]) {
          index = groupIndex;
          return;
        }
        group.forEach(function (color) {
          if (selected === color) {
            index = groupIndex;
          }
        });
      });
      return index || 0;
    }
  },
  methods: {
    selectColor: function (color) {
      this.selectedColor = color;
      this.enableSave();
    },
    enableSave: function () {
      this.$data.saveDisabled = false;
    },
    onSave: function (e) {
      e.preventDefault();
      this.show = false;
      this.$data.saveDisabled = true;
    },
    onCancel: function (e) {
      e.preventDefault();
      e.stopPropagation();
      document.removeEventListener('backbutton',
        this.cancelIntercept, true);
      this.selectedColor = this.originalColor;
      this.show = false;
    }
  },
  data: {
    colorGroups: colorGroups,
    colors: colorGroups.map(function (base) {
      var tints = [];
      for (var i = -5; i < 11; i++) {
        var colorString = utils.shadeColor(base, i * 6);
        colorString = colorString.toUpperCase();
        if (base !== colorString) {
          tints.push(colorString);
        }
      }
      return tints;
    }),
    saveDisabled: true
  }
};

},{"../../lib/utils":86,"./index.html":42}],44:[function(require,module,exports){
module.exports = '<nav class="navigationBar nav-default">\n    <div><button class="nav-btn" v-on="click: onCancel">{{ \'Cancel\' | i18n}}</button></div>\n    <h1>{{\'Choose Contacts\' | i18n}}</h1>\n    <div><button v-class="disabled: saveDisabled" class="nav-btn" v-on="click: onSave">{{ \'Done\' | i18n}}</button></div>\n</nav>\n\n<div class="inner">\n    <div class="contact-list">\n        <div v-repeat="modeledContacts">\n            <div class="letter-header">{{ $key }}</div>\n\n            <div v-repeat="person : $value" class="contact">\n                <label class="circle-toggle" v-on="click: person.selected = !person.selected" v-class="on: person.selected">\n                    <span class="ion ion-android-done"></span>\n                </label>\n                <span>{{ person.displayName }}</span>\n                <span class="phone-number">{{ person.phoneNumbers[0].value }}</span>\n            </div>\n        </div>\n    </div>\n</div>\n';
},{}],45:[function(require,module,exports){
var clone = require('clone');

module.exports = {
  className: 'contact-picker',
  template: require('./index.html'),
  ready: function () {
    var self = this;

    navigator.contacts.find(['*'], function (contacts) {
      self.$data.contacts = contacts;
      self.modelData();
    }, function (err) {
      console.log(err);
    });

    self.$on('openContactPicker', function (event) {
      self.open();
    });
  },
  methods: {
    open: function () {
      // Store a copy of intial contact data in case user doesn't save
      this.initialState = clone(this.modeledContacts);
      this.show = true;
    },
    close: function () {
      this.show = false;
    },
    onSave: function (e) {
      // TODO: Do something with selected contacts
      this.close();
    },
    onCancel: function (e) {
      this.modeledContacts = this.initialState;
      this.close();
    },
    modelData: function () {
      var modeled = {};

      // Sort contacts into alphabetical order
      this.contacts = this.contacts
        .filter(function (contact) {
          if (!contact ||
            !contact.displayName ||
            !contact.phoneNumbers ||
            !contact.phoneNumbers.length ||
            !contact.phoneNumbers[0].value) {
            return false;
          } else {
            return true;
          }
        })
        .sort(function (a, b) {
          return a.displayName > b.displayName;
        });

      // Create an object with alpha-keys to group by first name
      this.contacts.forEach(function (contact, i) {
        var firstLetter = contact.displayName[0].toUpperCase();

        if (!modeled[firstLetter]) {
          modeled[firstLetter] = [];
        }

        contact.$add('selected', false);

        modeled[firstLetter].push(contact);
      });

      this.modeledContacts = modeled;
    }
  }
};

},{"./index.html":44,"clone":99}],46:[function(require,module,exports){
module.exports = '<div v-repeat="data: dataSet | orderBy sortKey !sortOldest" class="dataRepresentationDataSet" v-class="unread: !data.isRead && isInteractive, interactive: isInteractive">\n    <div class="header" v-if="isInteractive">\n        <div class="date">{{formatTime(data.submitted)}}</div>\n        <!--\n            TODO : Wire this bad boy up:\n            <button><span class="ion ion-android-delete"></span></button>\n        -->\n    </div>\n    <div class="content">\n        <div v-repeat="dataBlock: data.dataBlocks">\n            <div class="label">{{dataBlock.label}}</div>\n            <div class="value">{{dataBlock.value}}</div>\n        </div>\n    </div>\n</div>\n\n<div class="noDataInfo" v-if="!dataSet.length">\n    <p class="head">{{ \'No data has been stored yet!\' | i18n }}</p>\n    <div class="glyphs">\n        <img src="images/counter-grey.svg">\n        <img src="images/submit-grey.svg">\n    </div>\n    <p class="sub">{{ \'noDataInfoSub\' | i18n }}</p>\n</div>\n\n<button v-if="isInteractive && countSelected >= 1" type="button" class="dataRepresentationActionButton btn" v-class="btn-share: countSelected === 0, btn-remove: countSelected >= 1, " v-on="click: actionButton()"></button>\n';
},{}],47:[function(require,module,exports){
var moment = require('moment');

var dataRepresentation = module.exports = {
  id: 'dataRepresentation',
  template: require('./index.html'),
  data: {
    isInteractive: true,
    sortOldest: false,
    sortKey: 'submitted',
    sortOptions: ['Newest', 'Oldest']
  },
  methods: Object.create(null)
};

dataRepresentation.methods.formatTime = function (unix) {
  return moment(unix).format('MMMM D, YYYY [at] H:mma');
};

dataRepresentation.methods.actionButton = function (e) {
  var self = this;

  // Delete
  if (this.countSelected > 0) {
    for (var i = 0; i < self.$data.dataSet.length; i++) {
      if (self.$data.dataSet[i].isSelected) {
        self.$dispatch('dataDelete', self.$data.dataSet[i].firebaseId);
      }
    }
  }
};

dataRepresentation.computed = {
  countSelected: function () {
    if (!this.$data) {
      return false;
    }
    var dataSet = this.$data.dataSet;
    var count = 0;
    for (var i = 0; i < dataSet.length; i++) {
      if (dataSet[i] && dataSet[i].isSelected) {
        count++;
      }
    }
    return count;
  },
  allSelected: {
    $get: function () {
      if (!this.$data) {
        return false;
      }
      var exists = this.$data.dataSet.length !== 0;
      var inRange = this.countSelected === this.$data.dataSet.length;
      return exists && inRange;
    },
    $set: function (toValue) {
      var dataSet = this.$data.dataSet;
      for (var i = 0; i < dataSet.length; i++) {
        if (dataSet[i]) {
          dataSet[i].isSelected = toValue;
        }
      }
    }
  }
};

},{"./index.html":46,"moment":117}],48:[function(require,module,exports){
module.exports = '<div class="image-picker-frame" v-show="showEditor">\n    <div class="image-picker-btns" v-show="!inProgress">\n        <button v-on="click: getImage($event, \'CAMERA\')">\n            <span class="ion ion-android-camera"></span>\n        </button>\n        <button v-on="click: getImage($event, \'PHOTOLIBRARY\')">\n            <span class="ion ion-images"></span>\n        </button>\n    </div>\n    <div class="in-progress" v-if="inProgress">\n        <div class="loading-spinner">\n          <div class="cube1"></div>\n          <div class="cube2"></div>\n        </div>\n    </div>\n</div>\n';
},{}],49:[function(require,module,exports){
var ua = require('../../lib/ua');

module.exports = {
  className: 'image-editor',
  template: require('./index.html'),
  methods: {
    getImage: function (e, sourceType) {
      var self = this;
      if (e) {
        e.preventDefault();
        e.stopPropagation();
      }
      this.$data.inProgress = true;

      function onSuccess(imageData) {
        var prefix = 'data:image/jpeg;base64,';
        var test = 'data:image';
        // Android implementation doesn't add prefix
        if (imageData.indexOf(test) === -1) {
          imageData = prefix + imageData;
        }
        self.$data.inProgress = false;
        self.$dispatch('imagePicked', imageData);
      }

      function onFail(message) {
        console.log('Failed because: ' + message);
        self.$data.inProgress = false;
      }
      navigator.camera.getPicture(onSuccess, onFail, {
        quality: 50,
        targetWidth: 640,
        destinationType: window.Camera.DestinationType.DATA_URL,
        sourceType: window.Camera.PictureSourceType[sourceType]
      });
    }
  },
  data: {
    showEditor: false,
    inProgress: false
  },
  ready: function () {
    var self = this;
    this.$on('openImagePicker', function () {
      if (ua.isFirefoxOS) {
        self.getImage(null, 0);
      } else {
        self.$data.showEditor = true;
      }
    });
    this.$on('closeImagePicker', function () {
      self.$data.showEditor = false;
    });
  }
};

},{"../../lib/ua":85,"./index.html":48}],50:[function(require,module,exports){
module.exports = '<div class="wrapper" v-class="editing: isEditMode">\n    <div class="button-wrapper">\n        <button v-on="click: startEditing" class="btn-edit">\n            <img src="content/icons/editor-pencil.svg">\n        </button>\n    </div>\n\n    <div class="editor-wrapper">\n        <div class="block-wrapper">\n            <content select=":first-child"></content>\n            <div v-show="isEditMode && app.blocks[$index].type === \'image\'" v-component="imagePicker"></div>\n        </div>\n\n        <div class="control-panel">\n\n            <button class="btn btn-flat" v-on="click: trash">\n               <img src="content/icons/delete.svg">\n            </button>\n\n            <button class="btn btn-flat" v-on="click: duplicate">\n               <img src="content/icons/duplicate.svg">\n            </button>\n\n            <a v-on="click: onEditClick" class="btn btn-flat" href="/make/{{ app.id }}/block/{{ index }}/edit">\n                <img src="content/icons/edit.svg">\n            </a>\n\n            <button class="btn btn-flat inline-up" v-on="click: move(-1)">\n                <img src="content/icons/up.svg">\n            </button>\n\n            <button class="btn btn-flat inline-down" v-on="click: move(1)">\n                <img src="content/icons/down.svg">\n            </button>\n\n        </div>\n    </div>\n</div>\n';
},{}],51:[function(require,module,exports){
var analytics = require('../../lib/analytics');

module.exports = {
  className: 'inline-editor',
  ready: function () {
    var self = this;

    self.$on('inlineEditorStarted', function (event) {
      if (event.index !== self.$index) {
        self.stopEditing();
      }
    });

    if (this.$data.app.blocks[this.$index].type === 'image') {
      var url = self.app.id + '/blocks/' +
        this.$index + '/attributes/src';
      var ref = self.$root.storage._firebase.child(url);
      self.$on('imagePicked', function (uri) {
        ref.update({
          value: uri
        });
        self.stopEditing();
      });
    }

    self.$on('onShimClick', function (event) {
      self.stopEditing();
    });
  },
  methods: {
    startEditing: function () {
      if (this.index === 0) {
        this.$el.getElementsByClassName('inline-up')[0].classList.add('disabled');
      }

      if (this.index === this.app.blocks.length - 1) {
        this.$el.getElementsByClassName('inline-down')[0].classList.add('disabled');
      }

      this.isEditMode = true;
      this.$dispatch('inlineEditorStarted', {
        index: this.$index
      });
      this.$el.classList.add('active');
      this.centerEditor();
      analytics.event({
        category: 'Inline Editor',
        action: 'Start Editing'
      });
    },
    centerEditor: function () {
      // Elements
      var elEditor = this.$el;
      var elContainer = elEditor.offsetParent;
      var elControlPanel = elEditor.querySelector('.control-panel');
      var elNavBar = document.querySelector('#navigationBar');

      // Dimensions:
      var containerHeight = elContainer.offsetHeight;

      function doScroll(direction) {
        if (direction === 'down') {
          elContainer.scrollTop =
            elEditor.offsetTop - elNavBar.offsetHeight - 10;
        } else if (direction === 'up') {
          var overflow =
            elEditor.offsetTop +
            elEditor.offsetHeight;

          overflow -=
            elContainer.scrollTop +
            containerHeight;

          elContainer.scrollTop += (overflow + 10);
        }
      }

      // Ensure control panel is rendered before measuring
      var heightCheck = setInterval(function () {
        if (elControlPanel.offsetHeight) {
          clearInterval(heightCheck);

          if (elContainer.scrollTop + elNavBar.offsetHeight > elEditor.offsetTop) {
            doScroll('down');
          } else if (elEditor.offsetHeight + elEditor.offsetTop > elContainer.scrollTop + containerHeight) {
            doScroll('up');
          }
        }
      }, 1);
    },
    onEditClick: function (e) {
      var type = this.$data.app.blocks[this.$index].type;
      if (type === 'image') {
        e.preventDefault();
        this.$broadcast('openImagePicker');
      } else {
        this.stopEditing();
      }
    },
    stopEditing: function (e) {
      this.isEditMode = false;
      this.$dispatch('inlineEditorStopping', {
        index: this.$index
      });
      this.$el.classList.remove('active');
      this.$broadcast('closeImagePicker');
    },
    trash: function () {
      var self = this;
      self.stopEditing();
      analytics.event({
        category: 'Inline Editor',
        action: 'Trash'
      });

      setTimeout(function () {
        self.$dispatch('deleteBlock', {
          index: self.index
        });
      }, 50);
    },
    duplicate: function () {
      var self = this;

      this.stopEditing();
      analytics.event({
        category: 'Inline Editor',
        action: 'Duplicate'
      });

      setTimeout(function () {
        self.$dispatch('cloneBlock', {
          index: self.index
        });
      }, 50);
    },
    move: function (steps) {
      var self = this;

      self.stopEditing();
      analytics.event({
        category: 'Inline Editor',
        action: 'Move'
      });

      // Delay about half the time the shim takes to fade out
      // Delay is also necessary for blockList to measure heights properly
      setTimeout(function () {
        self.$dispatch('shiftBlock', {
          index: self.index,
          steps: steps
        });
      }, 50);
    }
  },
  data: {
    mode: undefined,
    isEditMode: false,
    app: undefined
  },
  paramAttributes: ['mode', 'app', 'index'],
  template: require('./index.html')
};

},{"../../lib/analytics":69,"./index.html":50}],52:[function(require,module,exports){
module.exports = '<div class="loadingIndicator"><div></div><div></div></div>\n';
},{}],53:[function(require,module,exports){
module.exports = {
  id: 'loadingIndicator',
  template: require('./index.html')
};

},{"./index.html":52}],54:[function(require,module,exports){
module.exports = '<header>\n    <div class="icon">\n        <i class="ion ion-android-delete"></i>\n    </div>\n    <div class="question">\n        <p>{{\'Are you sure you want to delete this magnificent creation\' | i18n}}</p>\n\n        <div class="buttons">\n            <button v-on="click: onConfirmClick" class="btn btn-delete">{{\'Delete\' | i18n}}</button>\n            <button v-on="click: close" class="btn btn-cancel">{{\'Cancel\'| i18n}}</button>\n        </div>\n    </div>\n    <!-- Duplicate of first child to create equal spacing -->\n    <div class="icon invisible">\n        <i class="ion ion-android-delete"></i>\n    </div>\n</header>\n<footer>\n    <p class="warning">{{\'This action cannot be undone\' | i18n}}</p>\n</footer>\n';
},{}],55:[function(require,module,exports){
module.exports = '<div class="prompt" v-if="type" v-partial="{{type}}"></div>\n';
},{}],56:[function(require,module,exports){
module.exports = {
  id: 'modal-prompt',
  ready: function () {
    var self = this;

    self.$on('openModalPrompt', function (event) {
      self.open(event.type);
    });

    self.$on('closeModalPrompt', function (event) {
      self.close();
    });
  },
  partials: {
    delete: require('./delete.html')
  },
  methods: {
    open: function (type) {
      this.$data.type = type;
      this.isOpen = true;
      this.$el.classList.add('active');
    },
    close: function (event) {
      this.isOpen = false;
      this.$el.classList.remove('active');
      this.$dispatch('modalPromptClosed');
    },
    onConfirmClick: function (event) {
      this.$dispatch('onConfirmClick');
      this.close();
    }
  },
  data: {
    isOpen: false
  },
  template: require('./index.html')
};

},{"./delete.html":54,"./index.html":55}],57:[function(require,module,exports){
module.exports = '<div class="left">\n    <button v-if="back === true" class="back nav-btn" v-on="click: goBack"><span class="icon ion-android-arrow-back"></span></button>\n    <a v-if="typeof back === \'string\'" class="back nav-btn" v-on="click: goBack"><span class="icon ion-android-arrow-back"></span></a>\n\n    <button v-if="cancel === true" v-on="click: goBack" class="nav-btn">{{\'Cancel\' | i18n}}</button>\n    <a v-if="typeof cancel === \'string\'" v-on="click: goBack" class="nav-btn">{{\'Cancel\' | i18n}}</a>\n</div>\n\n<h1 v-class="flex-grow-1: typeof back !== \'string\' && back !== true">{{title | i18n}}</h1>\n\n<div class="right">\n    <button v-if="typeof onDone === \'function\'" v-on="click: onDone" v-class="disabled: doneDisabled" class="nav-btn">{{doneLabel || \'Done\' | i18n}}</button>\n    <a v-show="!offlineUser" v-if="typeof onDone === \'string\'" href="{{onDone}}" v-class="disabled: doneDisabled" class="nav-btn">{{doneLabel || \'Done\' | i18n}}</a>\n</div>\n<div v-component="publishingStatus"></div>\n';
},{}],58:[function(require,module,exports){
(function (global){
var page = require('page');

module.exports = {
  id: 'navigationBar',
  template: require('./index.html'),
  data: {
    goBack: function (e) {
      if (this.$data.app) {
        var enteredFrom = this.$root.$data.enteredEditorFrom || '';
        if (enteredFrom) {
          page(enteredFrom);
          return;
        }
      }
      e.preventDefault();
      global.history.back();
    }
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./index.html":57,"page":118}],59:[function(require,module,exports){
module.exports = '<p v-class="on: isPublishing, error: isError">\n    <span v-if="!isError && isOnline">{{ \'Publishing...\' | i18n }}</span>\n    <span v-if="isError && isOnline">{{isError}}</span>\n    <span v-if="!isOnline">{{\'You need to connect to the Internet.\' | i18n}}</span>\n</p>\n';
},{}],60:[function(require,module,exports){
var isPublishing = false;
var isError = false;
var analytics = require('../../lib/analytics');

module.exports = {
  className: 'publishing-status',
  template: require('./index.html'),
  data: {
    isOnline: true
  },
  ready: function () {
    var self = this;
    self.$data.isPublishing = isPublishing;
    self.$data.isError = isError;
    this.$on('publishingStarted', function () {
      self.$data.isPublishing = isPublishing = true;
      self.$data.isError = isError = false;
      analytics.event({
        category: 'Publishing',
        action: 'Started'
      });
    });
    this.$on('publishingDone', function () {
      self.$data.isError = isError = false;
      self.$data.isPublishing = isPublishing = false;
      analytics.event({
        category: 'Publishing',
        action: 'Done'
      });
    });
    this.$on('publishingError', function (err) {
      console.log('PublishingError', err);
      var message = err && err.message || 'There was a publishing error';
      self.$data.isError = isError = message;
      analytics.error({
        description: 'Publishing Error'
      });
      setTimeout(function () {
        self.$data.isPublishing = isPublishing = false;
      }, 5000);
    });
    this.$on('publishOffline', function () {
      self.$data.isOnline = false;
      self.$data.isPublishing = true;
      setTimeout(function () {
        self.$data.isPublishing = isPublishing = false;
      }, 5000);
    });
  }
};

},{"../../lib/analytics":69,"./index.html":59}],61:[function(require,module,exports){
module.exports = {
  id: 'shim',
  ready: function () {
    var self = this;

    self.$on('openShim', function (event) {
      self.open();
    });

    self.$on('closeShim', function (event) {
      self.close();
    });
  },
  methods: {
    open: function () {
      this.isOpen = true;
      this.$el.classList.add('active');
    },
    close: function (event) {
      this.isOpen = false;
      this.$el.classList.remove('active');
    },
    onShimClick: function (event) {
      this.$dispatch('onShimClick', event);
    }
  },
  data: {
    isOpen: false
  }
};

},{}],62:[function(require,module,exports){
module.exports = '<input type="checkbox" v-model="value">\n<label v-on="click: onClick">\n  <span class="options">\n    <span class="before">{{ options[0] | i18n }}</span>\n    <span class="after">{{ options[1] | i18n }}</span>\n  </span>\n  <span class="indicator"></span>\n</label>\n';
},{}],63:[function(require,module,exports){
module.exports = {
  id: 'switch',
  template: require('./index.html'),
  ready: function () {
    this.$watch('value', function (newVal) {
      var chosenOption = 0 + newVal; // convert Boolean to Number
      chosenOption = this.options[chosenOption];
      this.$dispatch('switchValueChanged', chosenOption);
    });
  },
  data: {
    value: false,
    options: ['Off', 'On']
  },
  methods: {
    onClick: function (event) {
      if (this.options[(0 + this.value)] === event.target.textContent) {
        // is the current option the same as the option that was just
        // tapped on? if so, do nothing.
        return false;
      } else {
        this.value = !this.value;
      }
    }
  }
};

},{"./index.html":62}],64:[function(require,module,exports){
module.exports = '<a href="/discover" v-class="active:currentView === \'discover\'">\n    <svg width="18" height="18" viewBox="0 0 18 18" xmlns="http://www.w3.org/2000/svg">\n        <g fill="none" fill-rule="evenodd">\n            <g fill="#638093">\n                <path d="M12.635 4.118c-.26-.21-.662-.213-.924-.005L7.5 7.45c-.085.065-.152.148-.2.247L4.994 12.31c-.1.2-.097.43.003.636l.014.03c.128.252.377.408.654.408.108 0 .214-.024.312-.07.087-.042.144-.09.188-.135l4.12-3.2c.09-.07.16-.157.21-.256l2.336-4.702c.155-.312.074-.683-.197-.904zM8.395 8.03c.126-.06.26-.09.397-.09.352 0 .677.205.83.522.22.457.026 1.007-.43 1.226-.127.06-.26.09-.398.09-.352 0-.677-.204-.83-.52-.105-.222-.12-.472-.038-.703.082-.232.248-.418.47-.524z"/>\n                <path d="M8.935.046C4.01.046.003 4.053.003 8.978c0 4.925 4.007 8.932 8.932 8.932 4.925 0 8.932-4.007 8.932-8.932 0-4.925-4.007-8.932-8.932-8.932zm-.055 14.01h-.006c-.542 0-.984.44-.984.982v.723c-3.006-.46-5.37-2.88-5.76-5.897h.832c.542 0 .983-.44.983-.99 0-.54-.44-.983-.983-.983H2.16c.467-2.956 2.77-5.246 5.73-5.695v.767c0 .542.44.983.99.983.542 0 .983-.44.983-.983v-.784c2.974.405 5.374 2.748 5.847 5.712h-.672c-.542 0-.983.44-.983.99 0 .542.44.983.983.983h.702c-.395 3.072-2.81 5.5-5.877 5.915v-.74c0-.542-.44-.983-.983-.983z"/>\n            </g>\n        </g>\n    </svg>\n    <span>{{ \'Discover\' | i18n }}</span>\n</a>\n<a href="/templates" v-class="active:currentView === \'templates\'">\n    <svg width="15" height="16" viewBox="0 0 15 16" xmlns="http://www.w3.org/2000/svg">\n        <g fill="none" fill-rule="evenodd">\n            <g fill="#638093">\n                <path d="M12.658 14.738l-1.633-.466-.437-1.742 1.195-1.274 1.633.466.437 1.74-1.195 1.276zm1.55-3.862c-.735-.785-1.776-1.04-2.714-.775L6.4 4.668c.41-1.232.156-2.66-.77-3.645C4.707.035 3.37-.235 2.213.202L4.637 2.79v1.414l-.663.707H2.648L.223 2.325c-.41 1.233-.157 2.66.768 3.648.927.987 2.267 1.257 3.423.818l5.092 5.432c-.25 1-.01 2.112.727 2.896 1.098 1.172 2.88 1.172 3.977 0 1.097-1.17 1.097-3.07 0-4.242z"/>\n                <path d="M11.494 10.1L6.4 4.67c.41-1.233.156-2.66-.77-3.646C4.708.035 3.37-.235 2.213.202L4.637 2.79v1.414l-.318.34 6.878 7.336.585-.624 1.632.466.438 1.74-.585.626.953 1.017c1.087-1.173 1.083-3.062-.01-4.23-.737-.784-1.778-1.04-2.716-.774"/>\n                <path d="M7.25 11.27c.176-.19.246-.466.18-.724-.06-.25 0-.53.183-.725l.663-.706c.092-.098.092-.256 0-.354L6.95 7.346c-.09-.098-.24-.098-.33 0l-.664.707c-.184.196-.445.26-.68.194-.242-.07-.5.005-.68.195l-4.275 4.56c-.827.885 1.824 3.713 2.653 2.83L7.25 11.27z"/>\n                <path d="M14.14.385l-2.818 1.59-.166 1.238-4.04 4.31.994 1.06 4.04-4.31 1.144-.158 1.527-3.003-.68-.727z"/>\n                <path d="M14.14.385l-2.818 1.59-.166 1.238-4.04 4.31.55.586L14.522.793l-.384-.41z"/>\n                <path d="M6.95 7.346c-.09-.098-.24-.098-.33 0l-.664.707c-.184.196-.445.26-.68.194-.242-.07-.5.005-.68.195l-4.275 4.56c-.424.454.068 1.42.76 2.132l6.586-7.026-.716-.762z"/>\n            </g>\n        </g>\n    </svg>\n    <span>{{ \'Make\' | i18n }}</span>\n</a>\n<a href="/profile" v-class="active:currentView === \'profile\'">\n    <svg width="15" height="15" viewBox="0 0 15 15" xmlns="http://www.w3.org/2000/svg">\n        <g fill="none" fill-rule="evenodd">\n            <g fill="#638093">\n                <path d="M7.5 7.5c-1.042 0-1.927-.365-2.656-1.094-.73-.73-1.094-1.614-1.094-2.656s.365-1.927 1.094-2.656C5.574.364 6.458 0 7.5 0s1.927.365 2.656 1.094c.73.73 1.094 1.614 1.094 2.656s-.365 1.927-1.094 2.656C9.426 7.136 8.542 7.5 7.5 7.5zm0 1.875c1.563 0 3.203.345 4.922 1.035 1.72.69 2.578 1.595 2.578 2.715V15H0v-1.875c0-1.12.86-2.025 2.578-2.715 1.72-.69 3.36-1.035 4.922-1.035z"/>\n            </g>\n        </g>\n    </svg>\n    <span>{{ \'My Apps\' | i18n }}</span>\n</a>\n';
},{}],65:[function(require,module,exports){
module.exports = {
  id: 'tabBar',
  template: require('./index.html'),
  data: {}
};

},{"./index.html":64}],66:[function(require,module,exports){
module.exports = '<div class="wrapper" v-on="click: onClick">\n    <span class="ion {{ iconClass }}"></span>\n</div>\n';
},{}],67:[function(require,module,exports){
module.exports = {
  className: 'toggle',
  template: require('./index.html'),
  paramAttributes: ['disabled', 'checked', 'toggle-id'],
  methods: {
    onClick: function (e) {
      e.preventDefault();

      if (this.disabled) {
        return;
      }

      this.setState(!this.checked);
    },
    setState: function (state) {
      this.checked = state;

      this.$data.iconClass = this.checked ?
        'ion-android-checkbox-outline' :
        'ion-android-checkbox-outline-blank';

      this.$dispatch('toggleChange', {
        value: this.checked,
        source: this['toggle-id']
      });
    }
  },
  ready: function () {
    var self = this;
    // parse non booleans
    // eg: values passed in as a "disabled" param instead of v-with
    if (typeof this.disabled === 'string') {
      this.disabled = this.disabled === 'true';
    }

    this.setState(this.checked);

    self.$on('updateToggle', function (value) {
      this.checked = value;

      this.$data.iconClass = this.checked ?
        'ion-android-checkbox-outline' :
        'ion-android-checkbox-outline-blank';
    });
  },
  data: {
    iconClass: 'ion-android-checkbox-outline-blank'
  }
};

},{"./index.html":66}],68:[function(require,module,exports){
module.exports = {"NODE_ENV":"NPM","LOGIN_URL":"https://login.mofostaging.net","PUBLISH_ENDPOINT":"https://webmaker-publisher.mofostaging.net/publish/webmaker-app","FIREBASE_URL":"https://wm-app.firebaseio.com","FIREBASE_URL_DATA":"https://wm-app-form-data.firebaseio.com","PUBLISH_DEV_MODE":false,"OFFLINE":false,"APPCACHE":false,"REMOTE_DEBUGGING":false,"GA_TRACKING_ID":"UA-49796218-8","ANALYTICS_CONSOLE_LOGGING":false,"package":{"name":"webmaker","version":"0.1.8","repository":{"type":"git","url":"https://github.com/mozilla/webmaker-app"},"scripts":{"test":"gulp test","start":"gulp dev"},"main":"export.js","dependencies":{"clone":"0.1.18","event-emitter":"0.3.1","fastclick":"1.0.3","firebase":"2.0.4","langmap":"0.0.9","localforage":"1.1.1","lodash.throttle":"2.4.1","moment":"2.9.0","page":"1.5.0","sortable":"git://github.com/k88hudson/Sortable#webmaker-app","vue":"git://github.com/k88hudson/vue#csp-10.6","watchjs":"0.0.0","webmaker-app-icons":"git://github.com/k88hudson/ionicons#webmaker-app","xhr":"1.16.1"},"devDependencies":{"browserify":"6.3.2","bulk-require":"0.2.1","bulkify":"1.0.2","esprima":"^1.2.2","exorcist":"^0.1.6","fs-extra":"0.11.1","glob":"4.0.5","gulp":"^3.8.8","gulp-autoprefixer":"^2.0.0","gulp-exit":"0.0.2","gulp-jsbeautifier":"0.0.4","gulp-jscs":"1.3.1","gulp-jshint":"1.8.4","gulp-less":"3.0.1","gulp-minify-css":"0.3.11","gulp-mocha":"1.0.0","gulp-plumber":"0.6.6","gulp-run":"^1.6.4","gulp-sourcemaps":"1.2.4","gulp-svgmin":"1.1.1","gulp-template":"1.1.1","gulp-util":"3.0.1","gulp-webserver":"0.8.0","habitat":"3.0.0","merge-stream":"0.1.6","mockrequire":"0.0.3","mofo-style":"^1.0.1","node-appcache-generator":"k88hudson/node-appcache-generator","node-static":"0.7.4","partialify":"3.1.1","run-sequence":"^1.0.2","tv4":"^1.1.4","watchify":"^2.3.0","webmaker-download-locales":"0.2.5"}}};
},{}],69:[function(require,module,exports){
/**
 * Analytics tracker object.
 *
 * @package webmaker
 * @author  Adam Lofting <adam@mozillafoundation.org>
 */

var xhr = require('xhr');
var localForage = require('localforage');
var clone = require('clone');

var model = require('./model')();
var utils = require('./utils');
var network = require('./network');

var _config = require('../config');
var config = clone(_config);
var packageJSON = clone(config.package);
delete config.package;

var preQueue = [];
var localForageLocked = false;
var onHoldUntil = null;

// Declaring three functions that call each other recursively
// Otherwise JShint gets upset about impossible ordering
var processNext;
var processPreQueue;
var processNextInOfflineQueue;

/**
 * A note on offline mode and monitoring connectivity:
 *
 * If the app is 'installed', and wrapped with Cordova,
 * we use the network util to check for connectivity.
 *
 * But, if the app is being used in a browser, we use
 * failed calls to GA API to indicate the user is likely
 * offline (or less likely that GA API is down).
 *
 * In this case we 'hold' attempts to ping GA for a few
 * minutes after each fail, before checking again.
 *
 * In either case, if we can't ping GA, we store the hits
 * in a local queue to process when we have connectivity
 * later.
 */

/**
 * Utils for logging
 */

function _warn(message) {
  console.warn('[Error using analytics.js]', message);
}

function _log(message) {
  if (config.ANALYTICS_CONSOLE_LOGGING) {
    console.log('[analytics.js]', message);
  }
}

/**
 * Utils for putting analytics on hold for a fixed time
 */

function isAnalyticsOnHold() {
  if (!onHoldUntil) {
    return false;
  }

  // otherwise, we have set a holdUntil time
  var now = new Date();
  if (onHoldUntil > now) {
    // we are holding off sending updates
    return true;
  } else {
    // reset this
    onHoldUntil = null;
    return false;
  }
}

function setAnalyticsOnHold(mins) {
  mins = mins || 3;
  var onHoldAlready = isAnalyticsOnHold();
  if (onHoldAlready) {
    // we don't want to keep setting this, or we'll never
    // see when we have reconnected
    return;
  }

  var d = new Date();
  d.setUTCMinutes(d.getUTCMinutes() + mins);
  onHoldUntil = d;
  _log('Analytics on hold until ' + d);
}

function removeAnalyticsHold() {
  onHoldUntil = null;
}

/**
 * Check if this install has a cordova wrapper with
 * connectivity awareness. If it does, listen for
 * network events
 */
if (network.connection) {
  _log('Cordova app with network awareness');

  network.on('online', function () {
    removeAnalyticsHold();
    processNext();
  });

  network.on('offline', function () {
    setAnalyticsOnHold(30);
  });
}

/**
 * Functions for building the requests, and sending them to GA
 */

var commonAppValues = {};

function getCommonAppValues() {
  if (commonAppValues.v) {
    return commonAppValues;
  }

  commonAppValues = {
    // Required
    v: 1, // MP Version
    tid: config.GA_TRACKING_ID, // Tracking ID / Property ID.
    cid: model.data.session.guestId, // Anonymous Client ID.
    // Additional values we want to use for App Specific measurement
    an: packageJSON.name, // Application Name
    // aid: '',                         // Application ID
    av: packageJSON.version, // Application Version
    // aiid: '',                        // Application Installer ID
    ds: 'app', // Data Source
    ul: model.data.session.locale.toLowerCase(), // User Language
    ua: navigator.userAgent // User Agent
  };
  return commonAppValues;
}

function checkIfHitWasOffline(hit) {
  if (hit.originalRequestTime) {
    // we're retrying an earlier request that failed
    // The value Queue Time (qt) represents the time delta (in milliseconds)
    // between when the hit being reported occurred and the time the hit was
    // sent.
    var now = new Date();
    var qt = now.getTime() - hit.originalRequestTime.getTime();
    hit.qt = qt;
    // use a custom dimension to note this was recorded while offline
    hit.cd1 = 'offline';
    return true;
  } else {
    hit.cd1 = 'online';
    return false;
  }
}

function attemptSendToGA(hit, callback) {
  var wasOffline = checkIfHitWasOffline(hit);
  var gaObj = utils.simpleObjectMerge(getCommonAppValues(), hit);
  var connectionText = (wasOffline) ? 'Offline' : 'Live';

  if (wasOffline) {
    // this value doens't need to go to GA
    delete gaObj.originalRequestTime;
  }

  // Convert obj to a string for POST request
  var gaBody = utils.toParameterString(gaObj);

  // Make a POST request to GA
  xhr({
    body: gaBody,
    uri: 'https://ssl.google-analytics.com/collect',
    method: 'POST'
  }, function (err, resp, body) {
    if (resp.statusCode === 200) {
      // we're got as far as GA (and must be online)
      _log('sent hit to GA', connectionText);
      return callback(true);
    }
    // Otherwise, something went wrong or we're offline
    return callback(false);
  });
}

/**
 * Functions for queuing offline hits, and processing those
 * queues when connectivity is available
 *
 * A note on queues: The offline queue is stored using the localForage
 * library, but because of the read/write time required to access the file
 * system we also have an in memory temporary preQueue where we push events
 * and then process them into the offline queue to avoid conflicts.
 */

function logQueueLength() {
  localForage.getItem('gaQueue', function (err, queue) {
    queue = queue || [];
    _log('Queue length: ' + queue.length);
  });
}

function lockLocalForage() {
  localForageLocked = true;
}

function unlockLocalForage() {
  localForageLocked = false;
}

function processNext() {
  processPreQueue();
  processNextInOfflineQueue(function () {});
}

function processPreQueue() {
  if (preQueue.length > 0) {
    if (localForageLocked) {
      return;
    }

    var processNow = clone(preQueue);
    preQueue = []; // reset so new values can be logged while we're
    // processing this batch without causing a loop
    lockLocalForage();
    localForage.getItem('gaQueue', function (err, queue) {
      queue = queue || [];
      queue = queue.concat(processNow);

      localForage.setItem('gaQueue', queue, function (err, value) {
        unlockLocalForage();
        _log(processNow.length + ' hits saved for later processing');
        logQueueLength();
        processNext();
      });
    });
  }
}

function addToLocalQueue(hit) {
  // immediately push to an Array (preQueue) to avoid clashes if
  // localForage is reading and writing from/to the localQueue
  preQueue.push(hit);
  processPreQueue();
}

function processNextInOfflineQueue(callback) {
  var onHold = isAnalyticsOnHold();
  if (onHold) {
    // don't process yet
    return callback(false);
  }

  if (localForageLocked) {
    return callback(false);
  }

  lockLocalForage();
  localForage.getItem('gaQueue', function (err, queue) {
    queue = queue || [];
    if (queue.length === 0) {
      unlockLocalForage();
      return callback(true);
    }

    var hit = queue[0];
    attemptSendToGA(hit, function (success) {
      if (success) {
        // remove the item we've just sent to GA
        queue.splice(0, 1);
        // resave the queue (even if it's now empty)
        localForage.setItem('gaQueue', queue, function (err, value) {
          unlockLocalForage();
          logQueueLength();
          processNext();
        });
      } else {
        unlockLocalForage();
        processNext();
        return callback(false);
      }
    });
  });
}

function recordNewHit(hit) {
  // skip GA attempt if we're on hold
  var isOnHold = isAnalyticsOnHold();
  if (isOnHold) {
    hit.originalRequestTime = new Date();
    addToLocalQueue(hit);
    return;
  }

  attemptSendToGA(hit, function (success) {
    if (success) {
      // This worked, and we're online
      // So we should see if there is a backlog queue to process
      processNextInOfflineQueue(function () {
        return;
      });
    } else {
      // We weren't able to send to GA at this time
      _log('Failed sending hit to GA');
      setAnalyticsOnHold();
      // store to try later
      hit.originalRequestTime = new Date();
      addToLocalQueue(hit);
    }
  });
}

/*
 * Exposed Funcitons
 */
module.exports = {

  /**
   * screenView
   * obj.screenName = 'Awesome Page Title'
   */
  screenView: function (obj) {
    if (!obj || !obj.screenName) {
      _warn('screenName is required in analytics.screenView()');
      return;
    }
    // Build the GA version
    var hit = {
      t: 'screenview', // hit type
      cd: encodeURIComponent(obj.screenName) // screen name
    };
    recordNewHit(hit);
  },

  /**
   * event
   * obj.category = 'UX'
   * obj.action = e.g. 'Opened Side Menu'
   * obj.label = 'Using swipe gesture' (Optional)
   */
  event: function (obj) {
    if (!obj ||
      !obj.category ||
      !obj.action) {
      _warn('category and action are required in analytics.event()');
      return;
    }

    // Build the GA version
    var hit = {
      t: 'event', // hit type
      ec: encodeURIComponent(obj.category), // event category
      ea: encodeURIComponent(obj.action) // event action
    };

    if (obj.label) {
      hit.el = encodeURIComponent(obj.label); // event label
    }
    recordNewHit(hit);
  },

  newSession: function () {
    // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#sc

    // We need to attach a newSession action to a hit,
    // so we fire an arbitrary non-interaction event.
    var hit = {
      t: 'event', // hit type
      ni: 1, // Non-interaction event
      ec: 'Session Control', // event category
      ea: 'New Session', // event action
      sc: 'start' // Session Control
    };

    recordNewHit(hit);
  },

  changeLocale: function () {
    // TODO: https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#ul
  },

  /**
   * timing
   * obj.category = e.g. 'Pageload'
   * obj.name = e.g. 'Homescreen'
   * obj.time = {Int} Time in milliseconds
   */
  userTiming: function (obj) {
    // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#utc
    if (!obj ||
      !obj.category ||
      !obj.name ||
      !obj.time) {
      _warn('category, name and time are required in analytics.timing()');
      return;
    }

    // Build the GA version
    var hit = {
      t: 'timing', // hit type
      utc: encodeURIComponent(obj.category), // User Timing Category
      utv: encodeURIComponent(obj.name), // User Timing Variable Name
      utt: encodeURIComponent(obj.time) // User Timing Time
    };
    recordNewHit(hit);
  },

  /**
   * error
   * obj.description = e.g. 'Error Sharing App'
   * obj.fatal = {Boolean} true if exception was fatal to the app
   */
  error: function (obj) {
    // https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#exd
    if (!obj || !obj.description) {
      _warn('description is required in analytics.error()');
      return;
    }

    // Build the GA version
    var hit = {
      t: 'exception', // hit type
      exd: encodeURIComponent(obj.description) // Exception Description
    };

    if (obj.fatal) {
      hit.exf = 1; // exception was fatal to app
    }
    recordNewHit(hit);
  }
};

},{"../config":68,"./model":76,"./network":77,"./utils":86,"clone":99,"localforage":109,"xhr":155}],70:[function(require,module,exports){
var i18n;
var clone = require('clone');
var Blocks = require('./blocks');

// This is, without question, a hack for getting various bits into the App.
// That said, these work, and satisfy refactor criteria before optimization.
var App = function App(options) {
  if (!i18n) {
    i18n = options.i18n;
  }

  this.id = options.id;
  this.data = options.data || null;
  this.store = options.store;
  this.firebase = options.firebase || this.store._firebase.child(this.id);

  this.blocks = new Blocks();
  this.firebase.on('value', this.broadcast, this);
};

App.prototype = {
  broadcast: function (snapshot) {
    var process = this.store._processSnapshot;
    var data = process(snapshot);
    this.data = data;
    this.store._vm.$broadcast(snapshot.key(), this.data);
  },

  newBlock: function (blockId) {
    var block = this.blocks[blockId];
    if (!block) {
      return;
    }
    var clonedBlock = clone(block);
    if (['text', 'phone', 'sms', 'submit'].indexOf(block.type) !== -1) {
      clonedBlock.attributes.innerHTML.value =
        i18n.get(clonedBlock.attributes.innerHTML.value);
    }
    return clonedBlock;
  },

  update: function (properties, onUpdate) {
    var self = this;
    properties = JSON.parse(JSON.stringify(properties));
    self.firebase.update(properties, self.store._onSync);
    if (onUpdate) {
      onUpdate(properties);
    }
  },

  updateBlock: function (id, properties) {
    var self = this;
    properties = JSON.parse(JSON.stringify(properties));
    self.firebase.child('blocks/' + id).update(properties, self.store._onSync);
  },

  insert: function (type, onInsert) {
    var self = this;
    var block = this.newBlock(type);
    if (!block) {
      console.error('Block type ' + type + ' not found.');
      return;
    }
    var ref = self.firebase.child('blocks');
    ref.once('value', function (snapshot) {
      var blocks = snapshot.val() || [];
      blocks.unshift(block);
      ref.set(blocks);
      if (onInsert) {
        onInsert(blocks);
      }
    });
  },

  remove: function (blockIndex, onRemove) {
    var self = this;
    var ref = self.firebase.child('blocks');

    var msg = 'Block with index ' + blockIndex + ' does not exist.';
    ref.once('value', function (snapshot) {
      var blocks = snapshot.val();
      if (!blocks[blockIndex]) {
        console.error(msg);
        return;
      }
      blocks.splice(blockIndex, 1);
      ref.set(blocks, self.store._onSync);
      if (onRemove) {
        onRemove(blocks);
      }
    });
  },

  duplicate: function (blockIndex, onDuplicate) {
    var self = this;
    var ref = self.firebase.child('blocks');

    var msg = 'Block with index ' + blockIndex + ' does not exist.';
    ref.once('value', function (snapshot) {
      var blocks = snapshot.val();
      if (!blocks[blockIndex]) {
        console.error(msg);
        return;
      }

      blocks.splice(blockIndex, 0, clone(blocks[blockIndex]));
      ref.set(blocks, self.store._onSync);
      if (onDuplicate) {
        onDuplicate(blocks);
      }
    });
  },

  move: function (blockIndex, steps, onMoved) {
    var self = this;
    var ref = self.firebase.child('blocks');

    ref.once('value', function (snapshot) {
      var blocks = snapshot.val();
      if (blockIndex + steps < 0) {
        return console.error('Can\'t move block to negative position');
      }
      if (blockIndex + steps > blocks.length - 1) {
        return console.error('Block is already at the end of the list');
      }
      if (!blocks[blockIndex]) {
        return console.error('Block ' + blockIndex + ' doesn\'t exist.');
      }
      var blockToMove = blocks[blockIndex];
      // remove block from array
      blocks.splice(blockIndex, 1);
      // Put block in new array position
      blocks.splice(blockIndex + steps, 0, blockToMove);
      ref.set(blocks, self.store._onSync);
      if (onMoved) {
        onMoved(blocks);
      }
    });
  },

  removeApp: function () {
    var self = this;
    self.firebase.remove(self.store._onSync);
    this.store._removeAppRef(this.id);
  }
};

module.exports = App;

},{"./blocks":72,"clone":99}],71:[function(require,module,exports){
var Vue = require('vue');

module.exports = Vue.extend({
  computed: {
    isEditing: function () {
      return this.$root.isEditing;
    }
  },
  ready: function () {
    var self = this;

    var attrs = self.$data.attributes;
    var target = self.$el.firstChild;

    for (var id in attrs) {
      if (attrs.hasOwnProperty(id) && attrs[id].skipAutoRender !== true) {
        target.setAttribute(id, attrs[id].value);

        switch (id) {
          case 'innerHTML': {
            target.innerHTML = attrs[id].value;
            break;
          }
          case 'color': {
            target.style.color = attrs[id].value;
            break;
          }
          case 'font-size': {
            target.style.fontSize = attrs[id].value + 'px';
          }
        }
      }
    }
  }
});

},{"vue":147}],72:[function(require,module,exports){

var clone = require('clone');

var blockModels = ({"counter":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js");return f;})(),"data":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/data/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/data/index.js");return f;})(),"dropdown":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js");return f;})(),"image":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/image/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/image/index.js");return f;})(),"input":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/input/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/input/index.js");return f;})(),"link":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/link/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/link/index.js");return f;})(),"phone":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js");return f;})(),"separator":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js");return f;})(),"sms":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js");return f;})(),"submit":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js");return f;})(),"text":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/text/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/text/index.js");return f;})()});
module.exports = function Blocks() {
  var self = this;
  for (var type in blockModels) {
    if (blockModels.hasOwnProperty(type)) {
      self[type] = clone(blockModels[type].index.data);
      self[type].type = type;
    }
  }
};

},{"/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js":2,"/home/travis/build/mozilla/webmaker-app/blocks/data/index.js":4,"/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js":6,"/home/travis/build/mozilla/webmaker-app/blocks/image/index.js":8,"/home/travis/build/mozilla/webmaker-app/blocks/input/index.js":10,"/home/travis/build/mozilla/webmaker-app/blocks/link/index.js":12,"/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js":14,"/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js":16,"/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js":18,"/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js":20,"/home/travis/build/mozilla/webmaker-app/blocks/text/index.js":22,"clone":99}],73:[function(require,module,exports){
var Firebase = require('firebase');
var config = require('../config');

/**
 * Generic logger for Firebase events
 *
 * @param  {string} msg    Error / confirmation message
 *
 * @return {void}
 */
function log(msg) {
  if (msg) {
    console.log('[Firebase] ' + msg);
  }
}

/**
 * Constructor
 */
function Data(appId) {
  var self = this;

  // Create firebase instance
  self.db = new Firebase(config.FIREBASE_URL_DATA + '/' + appId);

  // Authorize
  if (self.db.getAuth() === null) {
    self.db.authAnonymously(function (err) {
      if (err) {
        return log(err);
      }
      log('Authorized');
    });
  }
}

/**
 * Returns all data "rows".
 *
 * @param  {Function} callback
 *      {string} Error
 *      {array}  An array of results from Firebase
 *
 * @return {void}
 */
Data.prototype.fetch = function (callback) {
  var self = this;

  self.db.once('value', function (snapshot) {
    var result = [];
    snapshot.forEach(function (child) {
      result.push(child.val());
    });

    callback(null, result);
  });
};

/**
 * Creates ("push") a new record with the specified object.
 *
 * @param  {object}   blob     Dataset to be persisted
 * @param  {Function} callback
 *      {string} Error
 */
Data.prototype.save = function (blob, callback) {
  var self = this;

  self.db.push({
    submitted: Date.now(),
    dataBlocks: blob
  }, callback);
};

/**
 * Removes record with the specified object id.
 *
 * @param  {string}   id
 * @param  {Function} callback
 *      {string} Error
 */
Data.prototype.delete = function (id, callback) {
  this.db.child(id).remove(callback);
};

Data.prototype.collect = function (el, callback) {
  var dataset = [];
  var blocks = el.querySelector('.blocks').children;

  // Iterate over blocks & build up data set
  for (var i = 0; i < blocks.length; i++) {
    var label = blocks[i].querySelector('label');
    var input = blocks[i].querySelector('input');

    if (label !== null && input !== null) {
      dataset.push({
        label: label.innerText || label.textContent,
        value: input.value
      });
    }
  }

  // Save dataset
  this.save(dataset, callback);
};

module.exports = Data;

},{"../config":68,"firebase":101}],74:[function(require,module,exports){
/**
 * Localization!
 *
 */
var model = require('./model')();
// locale that we want to alias
var localeAliases = {
  'bn': 'bn-BD',
  'bn-IN': 'bn-BD',
  'hi': 'hi-IN',
  'fr-FR': 'fr',
  'fr-CA': 'fr',
  'fr-BE': 'fr'
};

function aliasLocale(locale) {
  if (locale in localeAliases) {
    return localeAliases[locale];
  } else {
    return locale;
  }
}

function Localize() {
  var self = this;

  self.defaultLang = 'en-US';
  self.locale = navigator.language;
  self.locale = aliasLocale(self.locale);
  self.supportedLanguages = [];
  self.dictionary = {};
  self.dictionaries = {};
  self.url = '';

  self.bind = function (langs, vue) {
    self.dictionaries = langs;
    for (var locale in langs) {
      if (locale) {
        self.supportedLanguages.push(locale);
      }
    }

    // Bind directives/filters
    if (vue) {
      vue.filter('i18n', self.i18nFilter);
      vue.directive('bind-i18n-html', self.bindHtml);
    }
  };

  self.supportedLangs = function () {
    return this.supportedLanguages;
  };

  self.setLocale = function (locale, autodetect) {
    var html = window.document.querySelector('html');
    locale = aliasLocale(locale);
    // Try to autodetect locale
    if (autodetect) {
      var defaultLang = self.defaultLang;
      self.locale = locale || self.locale || defaultLang;
      model.data.session.locale = self.locale;
    }

    // Set dictionary
    var currentLangDict = self.dictionaries[model.data.session.locale];
    var defaultLangDict = self.dictionaries[self.defaultLang];
    self.dictionary = currentLangDict || defaultLangDict;

    if (html) {
      html.setAttribute('lang', model.data.session.locale);
    }
  };

  self.get = function (key) {
    var dict = self.dictionary[key];
    var defaultLang = self.dictionaries[self.defaultLang][key];
    if (self.dictionaries[model.data.session.locale] !== undefined) {
      var localized = self.dictionaries[model.data.session.locale][key];
      if (!!localized) {
        return localized;
      }
    }
    return dict || defaultLang || key;
  };

  self.i18nFilter = function (key) {
    return self.get(key);
  };

  self.bindHtml = function (key) {
    var raw = self.get(key);
    this.el.innerHTML = raw;
  };
}

module.exports = new Localize();

},{"./model":76}],75:[function(require,module,exports){
/**
 * An app that makes apps.
 *
 * @package webmaker
 * @author  Andrew Sliwinski <a@mozillafoundation.org>
 */
require('./shims');

var Vue = require('vue');

var i18n = require('./i18n');
var locale = require('../locale');
var router = require('./router');
var model = require('./model')();
var Store = require('./storage');
var restorePath = require('./restore-path');
var analytics = require('./analytics');

// Register views
Vue.component('healthcheck', require('../views/healthcheck'));
Vue.component('error', require('../views/error'));
Vue.component('sign-in', require('../views/sign-in'));

Vue.component('discover', require('../views/discover'));
Vue.component('templates', require('../views/templates'));
Vue.component('template-preview', require('../views/template-preview'));
Vue.component('profile', require('../views/profile'));

Vue.component('make', require('../views/make'));
Vue.component('play', require('../views/play'));
Vue.component('add', require('../views/add'));
Vue.component('block', require('../views/block'));
Vue.component('detail', require('../views/detail'));

var componentList = {
  appCell: require('../components/appCell'),
  navigationBar: require('../components/navigationBar'),
  tabBar: require('../components/tabBar'),
  alert: require('../components/alert'),
  dataRepresentation: require('../components/dataRepresentation'),
  switch: require('../components/switch'),
  loadingIndicator: require('../components/loadingIndicator'),
  contactPicker: require('../components/contactPicker'),
  toggle: require('../components/toggle'),
  modalPrompt: require('../components/modalPrompt'),
  shim: require('../components/shim'),
  inlineEditor: require('../components/inlineEditor'),
  blockList: require('../components/blockList/'),
  imagePicker: require('../components/imagePicker'),
  publishingStatus: require('../components/publishingStatus')
};

// Register localization
i18n.bind(locale, Vue);

// Create "app"
var app = new Vue({
  el: '#app',
  components: componentList,
  data: {
    currentView: null,
    params: null,
    isReady: false,
    alertOn: false
  },
  methods: {
    showAlert: function (message) {
      var self = this;
      self.$data.alertMessage = message;
      self.$data.alertOn = true;
      setTimeout(function () {
        self.$data.alertOn = false;
      }, 2000);
    }
  },
  created: function () {
    var self = this;

    var UA = navigator.userAgent;
    self.$data.isFirefoxOS = UA.indexOf('Mobile') >= 0 &&
      UA.indexOf('Firefox') >= 0 &&
      UA.indexOf('Android') === -1;

    model.restore(function (user) {
      var userId = user && user.id || model.data.session.guestId;

      // i18n
      i18n.setLocale(model.data.session.locale, true);

      var storage = new Store(self);
      storage.setQuery(userId);

      self.storage = storage;

      // Todo: auth
      // if (user.firebaseToken) {
      //     storage._firebase.authWithCustomToken(
      //         user.firebaseToken, function (err, authData) {
      //             if (err) console.log('Fb auth error', err);
      //             router(app);
      //         }
      //     );
      // } else {
      //     storage._firebase.unauth();
      //     router(app);
      // }

      // Route
      router(app);
      restorePath({
        history: model.data.session && model.data.session.path,
        offline: model.data.session.offline
      });

      analytics.newSession();
    });
  },
  ready: function () {
    // Mediate events between sibling components
    // eg: Menu -> Root -> Modal

    this.$on('openModalPrompt', function (event) {
      this.$broadcast('openModalPrompt', event);
    });

    this.$on('showShim', function (event) {
      this.$broadcast('openShim', event);
    });

    this.$on('onConfirmClick', function (event) {
      this.$broadcast('onConfirmClick', event);
    });

    this.$on('modalPromptClosed', function (event) {
      this.$broadcast('closeShim', event);
    });

    this.$on('inlineEditorStarted', function (event) {
      this.$broadcast('openShim', event);
    });

    this.$on('inlineEditorStopping', function (event) {
      this.$broadcast('closeShim', event);
    });

    this.$on('onShimClick', function (event) {
      this.$broadcast('onShimClick', event);
    });
  }
});

},{"../components/alert":24,"../components/appCell":26,"../components/blockList/":41,"../components/contactPicker":45,"../components/dataRepresentation":47,"../components/imagePicker":49,"../components/inlineEditor":51,"../components/loadingIndicator":53,"../components/modalPrompt":56,"../components/navigationBar":58,"../components/publishingStatus":60,"../components/shim":61,"../components/switch":63,"../components/tabBar":65,"../components/toggle":67,"../locale":89,"../views/add":164,"../views/block":166,"../views/detail":168,"../views/discover":170,"../views/error":172,"../views/healthcheck":174,"../views/make":176,"../views/play":180,"../views/profile":182,"../views/sign-in":184,"../views/template-preview":186,"../views/templates":188,"./analytics":69,"./i18n":74,"./model":76,"./restore-path":79,"./router":80,"./shims":81,"./storage":82,"vue":147}],76:[function(require,module,exports){
/**
 * Data model provider.
 *
 * @package webmaker
 * @author  Andrew Sliwinski <a@mozillafoundation.org>
 */

var watch = require('watchjs').watch;
var localForage = require('localforage');
var uuid = require('./uuid');

/**
 * Constructor
 */
function Model(options) {
  var self = this;

  if (!(self instanceof Model)) {
    return new Model();
  }

  // Options
  // memory: (false) Use memory provider for Makedrive
  // noConnect: () if true, will not connect to remote server
  self.options = options || {};

  // Internal
  self._sessionKey = 'webmaker.app.session';
  self._ready = false;
  self._logger = function (prefix, msg) {
    if (typeof msg === 'undefined') {
      msg = prefix;
      prefix = 'Model';
    }

    if (msg) {
      console.log('[' + prefix + '] ', msg);
    }
  };

  // Public
  self.data = {};
  self.data.session = {
    ftu: true,
    path: '/sign-in',
    locale: null,
    offline: false,
    guestId: uuid(),
    user: {}
  };
}

Model.prototype.restoreSession = function restoreSession(callback) {
  var self = this;
  localForage.getItem(self._sessionKey, function (err, val) {
    if (err) {
      callback(err);
    }
    try {
      val = JSON.parse(val);
      for (var key in self.data.session) {
        if (typeof val[key] !== 'undefined') {
          self.data.session[key] = val[key];
          self._logger('restore session: ' + key, val[key]);
        }
      }
      callback(null);
    } catch (e) {
      callback(e);
    }
  });
};

Model.prototype.restore = function (callback) {
  var self = this;

  self.anonymousConnect = function () {
    self._logger('Starting in offline mode');
    self.data.session.offline = true;
    self.data.session.user = {
      id: self.data.session.guestId
    };
    callback();
  };

  self.restoreSession(function onRestore(err) {
    self._logger('session restore', err || 'successful');
    self.observe();
    self.ftu = false;
    self._ready = true;

    self.anonymousConnect();
  });
};

/**
 * Saves the current model state to localforage.
 *
 * @param  {Function} callback
 *
 * @return {void}
 */
Model.prototype.save = function (callback) {
  var self = this;
  callback = callback || function () {};

  var putItem = JSON.stringify(self.data.session);
  localForage.setItem(self._sessionKey, putItem, callback);
};

/**
 * Starts observing ("watch"-ing) for object changes.
 *
 * @return {void}
 */
Model.prototype.observe = function () {
  var self = this;

  // Only run this once
  if (self.observing) {
    return;
  }
  self.observing = true;

  watch(self.data, function () {
    self._dirty = true;
    self.save(function onSave(err) {
      self._logger('observe.onSave', err || 'successful');
    });
  }, 10);
};

var model;

function instantiateModel(options) {
  model = model || new Model(options);
  return model;
}

module.exports = instantiateModel;

},{"./uuid":87,"localforage":109,"watchjs":154}],77:[function(require,module,exports){
var util = require('util');
var events = require('events');

function Network() {
  var self = this;

  self.isOnline = true;
  self.connection = null;

  // Bypass if cordova API is not available
  if (typeof navigator === 'undefined') {
    return;
  }

  if (typeof navigator.connection === 'undefined') {
    return;
  }

  // Event handlers
  function onOffline() {
    self.isOnline = false;
    self.emit('offline');
    console.log('[Network] offline');
  }

  function onOnline() {
    self.isOnline = true;
    self.emit('online');
    console.log('[Network] online');
  }

  // Avoid race condition in Android & iOS
  document.addEventListener('deviceready', function () {
    // Set initial state
    self.connection = navigator.connection.type;
    self.isOnline = (self.connection !== 'none');

    // Bind event listeners
    document.addEventListener('offline', onOffline, false);
    document.addEventListener('online', onOnline, false);
  }, false);
}

util.inherits(Network, events.EventEmitter);

module.exports = new Network();

},{"events":94,"util":98}],78:[function(require,module,exports){
var config = require('../config');
var xhr = require('xhr');

module.exports = function (id, user, cb) {
  var body = {
    id: id,
    user: user
  };
  var cbSent = false;
  var timeout = setTimeout(function () {
    cbSent = true;
    cb({
      message: 'Sorry, we could not reach the publishing server!'
    });
  }, 10000);

  xhr({
    body: JSON.stringify(body),
    uri: config.PUBLISH_ENDPOINT,
    method: 'POST',
    withCredentials: true,
    headers: {
      'Content-Type': 'application/json'
    }
  }, function (err, resp, body) {
    if (cbSent) {
      return;
    }
    clearTimeout(timeout);
    if (err) {
      return cb({
        status: resp.statusCode,
        message: body
      });
    }
    if (!body) {
      return cb({
        message: 'There was a problem publishing your app'
      });
    }
    cb(null, JSON.parse(body));
  });
};

},{"../config":68,"xhr":155}],79:[function(require,module,exports){
(function (global){
var page = require('page');

module.exports = function (options) {
  options = options || {};

  var history = options.history;
  var offline = options.offline;
  var pathname = options.pathname || global.location.pathname;

  var defaultPath = '/templates';
  var coldStart = ['/', '/index.html'];
  var noRestore = offline ? coldStart : coldStart.concat(['/sign-in']);

  function isAllowed(path) {
    return noRestore.indexOf(path) === -1;
  }

  // Don't restore if pathname is allowed.
  if (isAllowed(pathname)) {
    return;
  }

  // Restore from history... but not if history is in noRestore
  var message;
  if (history && isAllowed(history)) {
    message = '[Loader] You visited ' +
      pathname +
      '; redirecting to your history, ' +
      history;
    console.log(message);
    page(history);
  } else {
    message = '[Loader] You visited ' +
      pathname +
      '; redirecting to ' +
      defaultPath;
    console.log(message);
    page(defaultPath);
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"page":118}],80:[function(require,module,exports){
var page = require('page');
var model = require('./model')();
var attachFastClick = require('fastclick');
var UA = require('./ua');
var analytics = require('./analytics');
var fastclick;

window.urlHistory = [];

module.exports = function (app) {
  // Track history for session restoration
  page(function (ctx, next) {
    window.urlHistory.push(ctx.path);
    if (!model._ready) {
      return next();
    }
    model.data.session.path = ctx.path;
    if (!UA.isFirefoxOS) {
      if (fastclick) {
        fastclick.destroy();
      }
      fastclick = attachFastClick(document.body);
    }
    analytics.screenView({
      screenName: ctx.canonicalPath
    });
    document.querySelector('#app').scrollTop = 0;
    app.$broadcast('closeShim');
    app.$broadcast('closeModalPrompt');
    next();
  });

  page('/healthcheck', function () {
    app.$data.isReady = true;
    app.currentView = 'healthcheck';
  });

  page('/', function () {
    app.$data.isReady = true;
    app.currentView = 'templates';
  });

  page('/discover', function () {
    app.$data.isReady = true;
    app.currentView = 'discover';
  });

  page('/templates', function () {
    app.$data.isReady = true;
    app.currentView = 'templates';
  });

  page('/profile', function () {
    app.currentView = 'profile';
  });

  // Interior
  page('/make/:id', function (e) {
    app.currentView = 'make';
    app.params = e.params;
  });

  page('/play/:id', function (e) {
    app.currentView = 'play';
    app.params = e.params;
  });

  page('/template/:id/detail', function (e) {
    app.currentView = 'template-preview';
    app.params = e.params;
    app.$broadcast('closeShim');
  });

  page('/make/:id/block/:index/:mode?', function (e) {
    app.currentView = 'block';
    app.params = e.params;
  });

  page('/make/:id/:mode/:role?', function (e) {
    if (['add', 'detail'].indexOf(e.params.mode) === -1) {
      app.currentView = 'error';
      app.params = {
        code: 404
      };
      return;
    }
    app.currentView = e.params.mode;
    app.params = e.params;
  });

  page('/sign-in', '/');

  // // Cordova
  page.redirect('/:platform/www/index.html', '/');

  // Configuration
  page('*', function () {
    app.currentView = 'error';
    app.params = {
      code: 404
    };
  });

  // Init
  page({
    click: true
  });
};

},{"./analytics":69,"./model":76,"./ua":85,"fastclick":100,"page":118}],81:[function(require,module,exports){
// This is for phantomjs
// Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill
if (!Function.prototype.bind) {
  Function.prototype.bind = function (oThis) {
    var errMsg = 'Function.prototype.bind - ' +
      'what is trying to be bound is not callable';
    if (typeof this !== 'function') {
      // closest thing possible to the ECMAScript 5
      // internal IsCallable function
      throw new window.TypeError(errMsg);
    }

    var aArgs = Array.prototype.slice.call(arguments, 1);
    var self = this;
    var FNOP = function () {};
    var fBound = function () {
      return self.apply(this instanceof FNOP && oThis ? this : oThis,
        aArgs.concat(Array.prototype.slice.call(arguments)));
    };

    FNOP.prototype = this.prototype;
    fBound.prototype = new FNOP();

    return fBound;
  };
}

},{}],82:[function(require,module,exports){
var Firebase = require('firebase');
var clone = require('clone');

var config = require('../config');
var utils = require('./utils');
var i18n = require('./i18n');
var templates = require('./templates.json');
var model = require('./model')();
var App = require('./app');

var _firebase = new Firebase(config.FIREBASE_URL + '/apps');
var _appRefs = {};
var _queryRef = null;

var version = require('../package.json').version;

function Store(vm) {
  this._vm = vm;
  this._firebase = _firebase;
}

Store.prototype._log = function (text) {
  console.log('[Store] ', text);
};

Store.prototype._onSync = function _onSync(err) {
  if (!err) {
    return;
  }
  console.error('[Store] ', err);
  this._vm.showAlert('Oops! We\'re having trouble syncing your data');
};

Store.prototype._processSnapshot = function _processSnapshot(snapshot) {
  var res = snapshot.val();
  if (!res) {
    return null;
  }
  res.id = snapshot.key();
  return res;
};

Store.prototype._createAppRef = function (id, fbRef, data) {
  if (_appRefs[id]) {
    this._removeAppRef(id);
  }
  var app = new App({
    store: this,
    id: id,
    data: data,
    firebase: fbRef,
    i18n: i18n
  });
  _appRefs[id] = app;
  return app;
};

Store.prototype._removeAppRef = function _removeAppRef(id) {
  if (!_appRefs[id]) {
    return; // todo: throw? this shouldn't happen
  }
  _appRefs[id].firebase.off('value');
  delete _appRefs[id];
};

// setQuery(userId)
// set up a query for all apps by a certain userId
Store.prototype.setQuery = function setQuery(userId) {
  if (!userId) {
    return; // todo: throw? this shouldn't happen
  }

  if (_queryRef) {
    this.unsetQuery();
  }

  var query = this._firebase
    .orderByChild('userId')
    .equalTo(userId);

  this._log('Query changed');
  this._vm.$broadcast('query_changed', userId);

  query.on('child_added', this.onAdded, this);
  query.on('child_changed', this.onChanged, this);
  query.on('child_removed', this.onRemoved, this);

  _queryRef = query;
};

Store.prototype.onAdded = function (snapshot) {
  var id = snapshot.key();
  if (!_appRefs[id]) {
    this.getApp(id);
  }
  this._log('App added');
  this._vm.$broadcast('app_added', this._processSnapshot(snapshot));
};

Store.prototype.onChanged = function (snapshot) {
  this._log('App changed');
  this._vm.$broadcast('app_changed', this._processSnapshot(snapshot));
};

Store.prototype.onRemoved = function(snapshot) {
  var id = snapshot.key();
  if (_appRefs[id]) {
    this._removeAppRef(id);
  }
  this._log('App removed');
  this._vm.$broadcast('app_removed', this._processSnapshot(snapshot));
};

// unsetQuery
// Removes all event listeners for a query
Store.prototype.unsetQuery = function unsetQuery() {
  if (!_queryRef) {
    return; // todo: throw? this shouldn't happen
  }
  _queryRef.off('child_added');
  _queryRef.off('child_changed');
  _queryRef.off('child_removed');
  _queryRef = null;
  _appRefs = {};
  this._log('Query removed');
  this._vm.$broadcast('query_changed', null);
};

// getApps()
// Returns an array of all apps
Store.prototype.getApps = function getApps() {
  var res = Object.keys(_appRefs).map(function (key) {
    return clone(_appRefs[key].data);
  }).filter(function (item) {
    return !!item && item.author.id === model.data.session.user.id;
  });
  return res;
};

// getApp(id)
// Get an app reference given an ID
Store.prototype.getApp = function getApp(id) {
  if (_appRefs[id]) {
    return _appRefs[id];
  }
  return this._createAppRef(id);
};

Store.prototype.remix = function remix(id, callback) {
  var self = this;
  self._firebase.child(id).once('value', function (snapshot) {
    callback(self.createApp({
      data: snapshot.val()
    }));
  });
};

// createApp(options)
//  - template: id of a template. Will overwrite options.data
//  - data: a set of app data to clone
//  - name: a name for the clone.
Store.prototype.createApp = function createApp(options) {
  var templateId;
  options = options || {};

  var app = {};

  // Get the source of the app template
  if (options.template) {
    templateId = utils.findInArray(templates, 'id', options.template);
    options.data = templates[templateId];
  }
  if (!options.data) {
    return;
  }
  var appTemplate = clone(options.data);

  // Get current user info
  var user = model.data.session.user;
  var guestId = model.data.session.guestId;

  // Name, userId, author, icon
  app.name = options.name || i18n.get('My {{template}} App');
  app.name = app.name.replace('{{template}}', appTemplate.name);
  app.userId = user.id || guestId;
  app.author = {
    id: user.id || guestId,
    username: user.username || i18n.get('Guest'),
    locale: i18n.locale
  };
  app.iconImage = appTemplate.iconImage || 'images/icons/blogger.svg';
  app.iconColor = appTemplate.iconColor || '#1F9CDF';

  // Record which version of webmaker-app was used to generate this app.
  // as well as which save iteration (latter not implemented yet).
  app.version = {
    'webmaker-app': version,
    app: '0.0.0' // not implemented yet
  };

  // Blocks
  app.blocks = appTemplate.blocks.map(function (blockTemplate) {
    var block = {};
    // .id is deprecated
    block.type = blockTemplate.type || blockTemplate.id;
    block.attributes = blockTemplate.attributes;
    return block;
  });

  var ref = _firebase.push(app, this._onSync);
  var key = ref.key();
  return this._createAppRef(key, ref);
};

module.exports = Store;

},{"../config":68,"../package.json":162,"./app":70,"./i18n":74,"./model":76,"./templates.json":83,"./utils":86,"clone":99,"firebase":101}],83:[function(require,module,exports){
module.exports=[
    {
        "id": "blank",
        "templateTitle": "Start from Scratch",
        "name": "From Scratch",
        "description": "Choosing this option will allow you to create your own app without a preset template.",
        "iconImage": "images/icons/scratch.svg",
        "iconColor" : "#8D8FED",
        "author": {
            "username": "",
            "location": "",
            "avatar": ""
        },
        "blocks": []
    },
    {
        "id": "b9483c11-077e-4396-84e2-c0454c36a741",
        "name": "Blogger",
        "templateTitle": "Create a Blog",
        "description": "Have something to share with the world? Start a blog, customize to make it yours and start writing!",
        "iconImage": "images/icons/blog.svg",
        "iconColor" : "#8594ED",
        "author": {
            "username": "",
            "location": "",
            "avatar": ""
        },
        "blocks": [
            {
                "attributes": {
                    "src": {
                        "label": "Source",
                        "type": "string",
                        "value": "content/blog_illustration.svg"
                    }
                },
                "icon": "images/blocks_image.png",
                "name": "Image",
                "type": "image"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#545E66"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "18"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "How To Create a Successful Blog"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Ask yourself what you love, care about or wish to share with others. "
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Make blogging part of your day. You can add reminders to your calendar so that you are prompted to write on a regular basis."
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Get blogging!"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            }
        ]
    },
    {
        "id": "d5c3ee43-5bbf-483c-8e70-0ac035c5f990",
        "name": "Journalist",
        "templateTitle": "Share Community News",
        "description": "Share photos and write articles and about your local community",
        "iconImage": "images/icons/journalist.svg",
        "iconColor" : "#7D99ED",
        "author": {
            "username": "",
            "location": "",
            "avatar": ""
        },
        "blocks": [
    {
        "attributes": {
            "src": {
                "editorOpen": false,
                "imageUrl": "content/news_illustration.svg",
                "label": "Source",
                "showUrlInput": true,
                "type": "image",
                "value": "content/news_illustration.svg"
            }
        },
        "type": "image"
    },
    {
        "attributes": {
            "color": {
                "label": "Color",
                "showColorPicker": false,
                "type": "color",
                "value": "#638093"
            },
            "font-size": {
                "label": "Font Size",
                "type": "font-size",
                "value": "18"
            },
            "innerHTML": {
                "label": "Text",
                "type": "string",
                "value": "Open Call To All Musicians"
            }
        },
        "type": "text"
    },
    {
        "attributes": {
            "color": {
                "label": "Color",
                "showColorPicker": false,
                "type": "color",
                "value": "#638093"
            },
            "font-size": {
                "label": "Font Size",
                "type": "font-size",
                "value": "14"
            },
            "innerHTML": {
                "label": "Text",
                "type": "string",
                "value": "Do you want to work with artists that share your passion for creating and sharing music with others? Join us as we embark on creating our community’s first music band! We are looking for the following musicians:"
            }
        },
        "type": "text"
    },
    {
        "attributes": {
            "color": {
                "label": "Color",
                "showColorPicker": false,
                "type": "color",
                "value": "#638093"
            },
            "font-size": {
                "label": "Font Size",
                "type": "font-size",
                "value": "14"
            },
            "innerHTML": {
                "label": "Text",
                "type": "string",
                "value": "• Piano/keyboard players\n• Guitar players\n• Bass players\n• Drummers"
            }
        },
        "type": "text"
    },
    {
        "attributes": {
            "color": {
                "label": "Color",
                "showColorPicker": false,
                "type": "color",
                "value": "#638093"
            },
            "font-size": {
                "label": "Font Size",
                "type": "font-size",
                "value": "14"
            },
            "innerHTML": {
                "label": "Text",
                "type": "string",
                "value": "If you have any questions, don’t hesitate to reach out to Amelina, our band manager."
            }
        },
        "type": "text"
    },
    {
        "attributes": {
            "innerHTML": {
                "label": "Label",
                "type": "string",
                "value": "Call Band Manager"
            },
            "number": {
                "label": "Phone #",
                "type": "string",
                "value": "+18005555555"
            },
            "color": {
                "label": "Button Color",
                "type": "color",
                "value": "#64A8EE",
                "skipAutoRender": true
            }
        },
        "type": "phone"
    }
]
    },
    {
        "id": "a7ac2775-bd9d-40b5-a26c-43e847777777",
        "templateTitle": "Create a How To Guide",
        "description": "If you've got unique skills you'd like to share with others, try making a How To guide.",
        "name": "How To",
        "iconImage": "images/icons/howto.svg",
        "iconColor" : "#749EED",
        "author": {
            "username": "",
            "location": "",
            "avatar": ""
        },
        "blocks": [
            {
                "attributes": {
                    "src": {
                        "label": "Source",
                        "type": "string",
                        "value": "content/howto_illustration.svg"
                    }
                },
                "icon": "images/blocks_image.png",
                "name": "Image",
                "type": "image"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#545E66"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "18"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Drawing & Painting: Introduction"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#AAAEB1"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Students will be taught the fundamental steps of learning to draw while exploring different mediums and techniques."
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "16"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Step 1: Gather materials"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "- Watercolour and oil-based paints\n- Flats, angular, rake, and round brushes"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "16"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Step 2: Demonstrate tools and techniques"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "- Describe the advantages of using different brush weights\n- Describe the different types of paint available for use"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "16"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "Step 3: Facilitate exercise"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            },
            {
                "attributes": {
                    "color": {
                        "label": "Color",
                        "showColorPicker": false,
                        "type": "color",
                        "value": "#638093"
                    },
                    "font-size": {
                        "label": "Font Size",
                        "type": "font-size",
                        "value": "14"
                    },
                    "innerHTML": {
                        "label": "Text",
                        "type": "string",
                        "value": "- Hand each student a piece of canvas\n- Invite students to freely explore the different types of paints and how they are affected by the weight of brushes"
                    }
                },
                "icon": "images/blocks_text.png",
                "name": "Text",
                "type": "text"
            }
        ]
    },
    {
        "id": "41e8be7e-4381-4afd-82ac-861171cd1111",
        "name": "Safety",
        "templateTitle": "Create a Safety App",
        "description": "Add a map, a emergency call button, and other tips to keep safe in your community",
        "iconImage": "images/icons/safety.svg",
        "iconColor" : "#6CA3ED",
        "author": {
            "username": "",
            "location": "",
            "avatar": ""
        },
        "blocks": [
            {
                "type": "phone",
                "attributes": {
                    "number": {
                        "label": "Phone #",
                        "type": "string",
                        "value": "+18005555555"
                    },
                    "innerHTML": {
                        "label": "Label",
                        "type": "string",
                        "value": "Call Campus Safety"
                    },
                    "color": {
                        "label": "Button Color",
                        "type": "color",
                        "value": "#64A8EE",
                        "skipAutoRender": true
                    }
                }
            },
            {
                "type": "image",
                "attributes": {
                    "src": {
                        "id": "src",
                        "label": "Image URL",
                        "type": "string",
                        "value": "content/campus_safety.gif"
                    }
                }
            }
        ]
    }
]

},{}],84:[function(require,module,exports){
// Return the name of the current browser's transition end event
module.exports = function () {
  var i;
  var el = document.createElement('div');

  var transitions = {
    transition: 'transitionend',
    OTransition: 'otransitionend', // oTransitionEnd in very old Opera
    MozTransition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd'
  };

  for (i in transitions) {
    if (transitions.hasOwnProperty(i) && el.style[i] !== undefined) {
      return transitions[i];
    }
  }
};

},{}],85:[function(require,module,exports){
var UA = navigator.userAgent;

module.exports = {
  isFirefoxOS: UA.indexOf('Mobile') >= 0 &&
    UA.indexOf('Firefox') >= 0 &&
    UA.indexOf('Android') === -1
};

},{}],86:[function(require,module,exports){
module.exports = {
  // Converts object to array
  // If the values are objects, idKey (default _key) is the key

  // Base color set for colorpicker and icon app background
  baseColors: [
    '#3188D9',
    '#32ABDF',
    '#8C8DE8',
    '#A6BECD',
    '#FC5D5E',
    '#98CA47',
    '#3CE0B1',
    '#F5913E',
    '#F1C143',
    '#FEE444'
  ],

  toArray: function (obj, idKey) {
    if (idKey !== false) {
      idKey = idKey || '__key';
    }
    return Object.keys(obj).map(function (key) {
      var val = obj[key];
      if (val && idKey && typeof val === 'object') {
        val[idKey] = key;
      }
      return val;
    });
  },

  // Returns index of an object in arr containing key and val
  findInArray: function (arr, key, val) {
    var i, l = arr.length;
    for (i = 0; i < l; i++) {
      if (arr[i][key] === val) {
        return i;
      }
    }
  },
  // Note: all colors are outputted as lowercase hex.
  shadeColor: function (color, percent) {
    /* jshint ignore:start */
    // jscs:disable
    var num = parseInt(color.slice(1), 16);
    var amt = Math.round(2.55 * percent);
    var R = (num >> 16) + amt;
    var G = (num >> 8 & 0x00FF) + amt;
    var B = (num & 0x0000FF) + amt;

    return ('#' + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1)).toLowerCase();
    /* jshint ignore:end */
    // jscs:enable
  },

  simpleObjectMerge: function (obj1, obj2) {
    var finalobj = {};
    for (var i = 0; i < obj1.length; i++) {
      obj1[i];
    }
    Object.keys(obj1).forEach(function (key) {
      finalobj[key] = obj1[key];
    });

    Object.keys(obj2).forEach(function (key) {
      finalobj[key] = obj2[key];
    });
    return finalobj;
  },

  toParameterString: function (obj) {
    var s = '';
    var keys = Object.keys(obj);
    for (var i = 0; i < keys.length; i++) {
      s += keys[i];
      s += '=';
      s += obj[keys[i]];
      if (i !== keys.length - 1) {
        s += '&';
      }
    }
    return s;
  },
  openInBrowser: function (e) {
    // forces app to open a link in native browser.
    // el syntax: <a href="[desired url]" v-on="click: openInBrowser">
    e.preventDefault();
    window.open(e.target.href, '_system');
    return false;
  }
};

},{}],87:[function(require,module,exports){
/**
 * Mad science micro-sized UUID (v4) module.
 *
 * Adapted from: https://gist.github.com/jed/982883
 *
 * @package webmaker
 * @author  Andrew Sliwinski <a@mozillafoundation.org>
 */

/* jshint ignore:start */
// jscs:disable
function b(
  a // placeholder
) {
  return a // if the placeholder was passed, return
    ? ( // a random number from 0 to 15
      a ^ // unless b is 8,
      Math.random() // in which case
      * 16 // a random number from
      >> a / 4 // 8 to 11
    ).toString(16) // in hexadecimal
    : ( // or otherwise a concatenated string:
      [1e7] + // 10000000 +
      -1e3 + // -1000 +
      -4e3 + // -4000 +
      -8e3 + // -80000000 +
      -1e11 // -100000000000,
    ).replace( // replacing
      /[018]/g, // zeroes, ones, and eights with
      b // random hex digits
    )
}

module.exports = b;
/* jshint ignore:end */
// jscs:enable

},{}],88:[function(require,module,exports){
var Vue = require('vue');
var clone = require('clone');


var block = require('./block');

// Add all blocks
var blocks = clone(({"counter":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js");return f;})(),"data":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/data/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/data/index.js");return f;})(),"dropdown":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js");return f;})(),"image":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/image/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/image/index.js");return f;})(),"input":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/input/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/input/index.js");return f;})(),"link":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/link/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/link/index.js");return f;})(),"phone":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js");return f;})(),"separator":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js");return f;})(),"sms":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js");return f;})(),"submit":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js");return f;})(),"text":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/blocks/text/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/blocks/text/index.js");return f;})()}));

var componentList = [];

for (var id in blocks) {
  if (blocks.hasOwnProperty(id)) {
    componentList[id] = block.extend(blocks[id]);
  }
}

module.exports = Vue.extend({
  components: componentList,
  data: {},
  methods: {
    model: require('./model')(),
    page: require('page'),
    disableBlocks: function (e) {
      e.stopPropagation();
      e.preventDefault();
      return false;
    },
    createAppFromTemplate: function (templateId) {
      var self = this;
      self.$root.isReady = false;
      var app = self.$root.storage.createApp({
        template: templateId
      });
      setTimeout(function () {
        self.$root.isReady = true;
        self.page('/make/' + app.id);
      }, 100);
    }
  }
});

},{"./block":71,"./model":76,"/home/travis/build/mozilla/webmaker-app/blocks/counter/index.js":2,"/home/travis/build/mozilla/webmaker-app/blocks/data/index.js":4,"/home/travis/build/mozilla/webmaker-app/blocks/dropdown/index.js":6,"/home/travis/build/mozilla/webmaker-app/blocks/image/index.js":8,"/home/travis/build/mozilla/webmaker-app/blocks/input/index.js":10,"/home/travis/build/mozilla/webmaker-app/blocks/link/index.js":12,"/home/travis/build/mozilla/webmaker-app/blocks/phone/index.js":14,"/home/travis/build/mozilla/webmaker-app/blocks/separator/index.js":16,"/home/travis/build/mozilla/webmaker-app/blocks/sms/index.js":18,"/home/travis/build/mozilla/webmaker-app/blocks/submit/index.js":20,"/home/travis/build/mozilla/webmaker-app/blocks/text/index.js":22,"clone":99,"page":118,"vue":147}],89:[function(require,module,exports){
module.exports = {"bn-BD":{"Show this app in the Discover Gallery":"আবিষ্কার গ্যালারীতে এই অ্যাপটিকে দেখান","Single Line Text":"এক লাইনের টেক্সট","Newest":"সবচেয়ে নতুন","No data has been stored yet!":"এখন পর্যন্ত কোন ডাটা সংরক্ষন হয় নি!","Add a Brick":"একটি অংশ যুক্ত করুন","Featured":"আলোচিত","My App":"আমার অ্যাপ","Separator":"বিভক্তি","You haven't created any apps yet.":"আপনি এখনও কোন অ্যাপ তৈরী করেন নি।","Guest Explanation":"অতিথি পরিচয়ে অ্যাপ বানাতে পারবেন, কিন্তু অ্যাপগুলো প্রকাশ করতে পারবেন না।","Send SMS":"এসএমএস পাঠান","Publishing...":"প্রকাশ করা হচ্ছে...","Open":"খুলুন","Create":"তৈরী করুন","My Profile":"আমার প্রোফাইল","An active connection is needed to display the Discover Gallery":"আবিষ্কার গ্যালারী দেখাতে সক্রিয় ইন্টারনেট সংযোগ প্রয়োজন","Start Building":"তৈরি করা শুরু করুন","No Data available":"কোন ডাটা পাওয়া যাচ্ছে না","Business":"ব্যবসা","Get Started":"আসুন শুরু করি","Delete App":"অ্যাপটি মুছে ফেলুন","Share Community News":"কমিউনিটির খবর শেয়ার করুন","Choose Contacts":"পরিচিতি পছন্দ করুন","Back to My Apps":"আমার অ্যাপসে ফেরত যান","Join Webmaker":"ওয়েবমেকারে যোগ দিন","Preview":"প্রিভিউ দেখুন","URL":"ইউআরএল","Text Color":"টেক্সটের রঙ","Minimum Number":"সর্বনিম্ন নম্বর","Increment by":"দ্বারা বর্ধিত","Head over to Make to start creating your very own app.":"আপনার নিজের অ্যাপ তৈরী করতে <strong>\"তৈরি করুন\"</strong> এ যান।","Maximum Number":"সর্বোচ্চ নম্বর","Image":"ছবি","Sign In":"সাইন ইন","Safety":"সুরক্ষা","Discover":"আবিষ্কার","errorAppNotFound":"দুক্ষিত, এই অ্যাপসটি খুজে পাওয়া যাচ্ছে না। আপনার <a href='/profile'>প্রোফাইলে</a> ফিরে যান?","Name":"নাম","Are you sure you want to delete this magnificent creation":"আপনি কি নিশ্চিত, এই সুন্দর জিনিসটি মুছে ফেলতে চান?","The Internet fell asleep!":"ইন্টারনেট সম্ভবত ঘুমিয়ে আছে!","noDataInfoSub":"ব্যবহারকারীকে আপনার সাথে ডাটা শেয়ার করার সুযোগ দিতে চাইলে, আপনার অ্যাপে একটা কাউন্টার ও একটি সাবমিট বাটন যোগ করার চেস্টা করুন।","Title":"শিরোনাম","Choosing this option will allow you to create your own app without a preset template.":"এই অপশন পছন্দ করলে আপনি পূর্বনির্ধারিত কোন টেমপ্লেট ছাড়াই নিজের অ্যাপ তৈরী করতে পারবেন","Share App":"অ্যাপ শেয়ার করুন","Done":"সম্পন্ন হয়েছে","You need to connect to the Internet.":"আপনাকে ইন্টারনেটে সংযুক্ত হতে হবে","This action cannot be undone":"এই অ্যাকশনটি আর পরিবর্তন করা যাবে না।","Delete":"মুছুন","Phone":"ফোন","Initial Number":"প্রাথমিক নম্বর","Share Via":"শেয়ার","SMS":"এসএমএস","Gather information from your users by creating a survey.":"একটি জরীপ তৈরীর মাধ্যমে আপনার ব্যবহারকারীদের নিকট হতে তথ্য সংগ্রহ করুন।","Create a Blog":"একটি ব্লগ তৈরি করুন","App Data":"অ্যাপের ডাটা","Source":"উৎস","Long Text":"লম্বা টেক্স","I am some text":"আমি কিছু টেক্সট","share_message":"আমি মজিলা ওয়েবেকার দিয়ে যে অ্যাপ তৈরী করেছি, তা চালিয়ে দেখুন।","Make and share the web":"তৈরি করুন  এবং ওয়েবে শেয়ার করুন","Blogger":"ব্লগার","My {{template}} App":"আমার {{template}} অ্যাপ","Counter":"কাউন্টার","Create a Survey":"একটি জরীপ তৈরী করুন","Add to Homescreen":"প্রধান স্ক্রিনে যোগ করুন","Button Color":"বাটনের রঙ","name from location":" <strong>{{name}}</strong><span v-if=\"অবস্থান\"><br/> হইতে <br/></span><strong>{{localtion}}</strong>","Select all":"সব নির্বাচন করুন","Tap the plus sign to begin adding content.":"কনটেন্ট যোগ করা আরম্ভ করতে যোগ চিহ্নে স্পর্শ করুন","Add contacts":"পরিচিতি যোগ করুন","Teacher":"শিক্ষক","Start from Scratch":"প্রথম থেকে শুরু করুন","Remix App":"অ্যাপটি রিমিক্স করুন","Offline Mode Explanation":"এই ডিভাইটি ইন্টারনেটের সাথে সংযুক্ত নয়, তাই আপনি কোনো অ্যাপস প্রকাশ করতে পারবেন না।","Message":"ম্যাসেজ","Share photos and write articles and about your local community":"আপনার স্থানীয় কমিউনিটির ছবি শেয়ার করুন এবং তাদের নিয়ে লিখুন","noContactsError":"এসএমএস পাঠাতে চাইলে অনুগ্রহ করে একটি বা একের বেশী পরিচিতি নির্বাচন করুন।","Open App":"অ্যাপটি ওপেন করুন","by _":"{{name}} থেকে","Make an App":"একটি অ্যাপ তৈরি করুন","Sign Out":"সাইন আউট","Delete my Apps":"আমার অ্যাপগুলো মুছে দিন","App Name":"অ্যাপের নাম","Journalist":"সাংবাদিক","Show in Discover Gallery":"আবিস্কার গ্যালারীতে দেখান","Text Value":"টেক্সটের মান","My Apps":"আমার অ্যাপস","Tap the plus sign to add more content.":"আরও কনটেন্ট যোগ করতে যোগ চিহ্নে স্পর্শ করুন","Cancel":"বাতিল করুন","Try in Offline Mode":"অফলাইন মুডে চেষ্টা করুন","Guest":"অতিথি","Try as Guest":"অতিথি পরিচয়ে চেস্টা করুন","Text Box Type":"টেক্সট বক্সের মত","No Apps Message":"আপনার এখনও কোনো অ্যাপস নেই।","Data":"ডাটা","errorNoText":"আপনাকে অবশ্যই টেক্সটের একটা মান দিতে হবে","Select Color":"রং পছন্দ করুন","Edit":"সম্পাদনা","Phone #":"ফোন #","Link Text":"লিংক টেক্সট","Save":"সংরক্ষণ","Create a Safety App":"একটি সুরক্ষা অ্যাপ তৈরি করুন","Publish":"প্রকাশ করুন","errorDefault":"ওহো! একটি সমস্যা হয়েছিলো। আপনার <a href='/profile'>প্রোফাইলে</a> ফিরে যান?","Button Text":"বাটনের টেক্সট","Label":"লেবেল","Create a How To Guide":"একটি \"কিভাবে করবো\" গাইড তৈরি করুন","Submit":"জমা দিন","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"দুনিয়ার সাথে কিছু শেয়ার করতে চান? একটি ব্লগ শুরু করুন, নিজের মত করে নিতে এটিকে কাস্টোমাইজ করুন এবং লেখা শুরু করে দিন!","Edit my Profile":"আপনার প্রোফাইল সম্পাদনা করুন","Font Size":"বর্ণের আকার","Make":"তৈরী করুন","Open my app":"আমার অ্যাপ ওপেন করুন","Place call":"কল করুন","If you've got unique skills you'd like to share with others, try making a How To guide.":"যদি আপনার এমন কোন ইউনিক স্কিল থাকে যা আপনি অন্যের সাথে শেয়ার করতে চাচ্ছেন, তাহলে একটি \"কিভাবে করবো\" গাইড বানাতে চেষ্টা করুন।","Add a map, a emergency call button, and other tips to keep safe in your community":"একটি মানচিত্র, একটি জরুরী কল বাটন এবং কিছু উপদেশ যুক্ত করুন যা আপনার কমিউনিটিকে নিরাপদ থাকতে সাহায্য করবে","App":"অ্যাপ","Make Your Own App":"আপনার নিজের অ্যাপ তৈরি করুন","Text Box":"টেক্সটের বক্স","App Name & Icon":"অ্যাপের নাম ও আইকন","Make your own app at":"তে নিজের অ্যাপ তৈরি করুন","Share":"শেয়ার করুন","Promote your Business":"আপনার কাজের প্রচার করুন","Show off your products and give customers an easy way to reach you.":"আপনার পণ্য দেখান এবং ক্রেতাদের সহজে আপনার কাছে পৌঁছানোর উপায় করে দিন।","same as minimum number":"সর্বনিম্ন নম্বরের সমান","Text":"টেক্সট","Link":"লিংক","From Scratch":"প্রথম থেকে শুরু করুন","error404":"দুক্ষিত, আমরা এই পেজটি খুজে পাচ্ছি না। আপনি কি <a href='/sign-in'>একেবারে শুরুতে ফিরে যেতে চান</a>?","toucanspeak":"চলুন কিছু টেক্সট যুক্ত করার মাধ্যমে শুরু করি।","Made with Mozilla Webmaker":"মজিলা ওয়েবমেকার দিয়ে তৈরী","Menu":"মেন্যু","Color":"রং","How To":"কিভাবে করে","Title Text Color":"শিরোনামের টেক্সটের রং"},"cs":{"Show this app in the Discover Gallery":"Show this app in the Discover Gallery","Single Line Text":"Single Line Text","Newest":"Newest","No data has been stored yet!":"No data has been stored yet!","Add a Brick":"Add a Brick","Featured":"Featured","My App":"My App","Separator":"Separator","You haven't created any apps yet.":"You haven't created any apps...yet.","Guest Explanation":"Guests can build, but not publish apps.","Send SMS":"Send SMS","Publishing...":"Publikování...","Open":"Open","Create":"Create","My Profile":"Můj profil","An active connection is needed to display the Discover Gallery":"An active connection is needed to display the Discover Gallery","Start Building":"Start Building","No Data available":"No Data available","Business":"Business","Get Started":"Začínáme","Delete App":"Delete App","Share Community News":"Share Community News","Choose Contacts":"Choose Contacts","Back to My Apps":"Back to My Apps","Join Webmaker":"Join Webmaker","Preview":"Náhled","URL":"URL","Text Color":"Barva textu","Minimum Number":"Minimum Number","Increment by":"Increment by","Head over to Make to start creating your very own app.":"Head over to <strong>Make</strong> to start creating your very own app.","Maximum Number":"Maximum Number","Image":"Obrázek","Sign In":"Přihlásit se","Safety":"Safety","Discover":"Objevit","errorAppNotFound":"Sorry, this app was not found. Go back to your <a href='/profile'>profile</a>?","Name":"Název","Are you sure you want to delete this magnificent creation":"Are you sure you want to delete this magnificent creation?","The Internet fell asleep!":"The Internet fell asleep!","noDataInfoSub":"If you'd like to let users share data with you, try adding a Counter and a Submit button to your app.","Title":"Title","Choosing this option will allow you to create your own app without a preset template.":"Choosing this option will allow you to create your own app without a preset template.","Share App":"Share App","Done":"Hotovo","You need to connect to the Internet.":"You need to connect to the Internet.","This action cannot be undone":"This action cannot be undone.","Delete":"Smazat","Phone":"Phone","Initial Number":"Initial Number","Share Via":"Share Via","SMS":"SMS","Gather information from your users by creating a survey.":"Gather information from your users by creating a survey.","Create a Blog":"Create a Blog","App Data":"App Data","Source":"Source","Long Text":"Long Text","I am some text":"I am some text","share_message":"Check out the app I made with Mozilla Webmaker","Make and share the web":"Make &amp; share the web","Blogger":"Blogger","My {{template}} App":"My {{template}} App","Counter":"Counter","Create a Survey":"Create a Survey","Add to Homescreen":"Add to Homescreen","Button Color":"Button Color","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> from <br/></span><strong>{{location}}</strong>","Select all":"Select all","Tap the plus sign to begin adding content.":"Tap the plus sign to begin adding content.","Add contacts":"Add contacts","Teacher":"Teacher","Start from Scratch":"Start from Scratch","Remix App":"Remix App","Offline Mode Explanation":"This device isn't connected to the internet, so you won't be able to publish any apps.","Message":"Message","Share photos and write articles and about your local community":"Share photos and write articles and about your local community","noContactsError":"To send an SMS, please choose one or more contact.","Open App":"Open App","by _":"by {{name}}","Make an App":"Make an App","Sign Out":"Sign Out","Delete my Apps":"Delete my Apps","App Name":"App Name","Journalist":"Žurnalista","Show in Discover Gallery":"Show in Discover Gallery","Text Value":"Text Value","My Apps":"My Apps","Tap the plus sign to add more content.":"Tap the plus sign to add more content.","Cancel":"Zrušit","Try in Offline Mode":"Try in Offline Mode","Guest":"Guest","Try as Guest":"Try as Guest","Text Box Type":"Text Box Type","No Apps Message":"You don't have any apps yet.","Data":"Data","errorNoText":"You must include a text value","Select Color":"Vybrat barvu","Edit":"Upravit","Phone #":"Phone #","Link Text":"Link Text","Save":"Uložit","Create a Safety App":"Create a Safety App","Publish":"Publikování","errorDefault":"Oops! There was an error. Go back to your <a href='/profile'>profile</a>?","Button Text":"Button Text","Label":"Label","Create a How To Guide":"Create a How To Guide","Submit":"Submit","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Have something to share with the world? Start a blog, customize to make it yours and start writing!","Edit my Profile":"Edit my Profile","Font Size":"Font Size","Make":"Vytvořit","Open my app":"Open my app","Place call":"Place call","If you've got unique skills you'd like to share with others, try making a How To guide.":"If you've got unique skills you'd like to share with others, try making a How To guide.","Add a map, a emergency call button, and other tips to keep safe in your community":"Add a map, a emergency call button, and other tips to keep safe in your community","App":"App","Make Your Own App":"Make Your Own App","Text Box":"Text Box","App Name & Icon":"App Name & Icon","Make your own app at":"Make your own app at","Share":"Sdílet","Promote your Business":"Promote your Business","Show off your products and give customers an easy way to reach you.":"Show off your products and give customers an easy way to reach you.","same as minimum number":"same as minimum number","Text":"Text","Link":"Link","From Scratch":"From Scratch","error404":"Sorry, we couldn't find this page. Would you like to <a href='/sign-in'>go back to the start</a>?","toucanspeak":"Let's start by adding some text.","Made with Mozilla Webmaker":"Made with Mozilla Webmaker","Menu":"Menu","Color":"Color","How To":"How To","Title Text Color":"Title Text Color"},"da-DK":{"Show this app in the Discover Gallery":"Vis denne app i Udforsk-galleriet","Single Line Text":"Enkel-linje tekst","Newest":"Nyeste","No data has been stored yet!":"Der er endnu ikke gemt nogen data!","Add a Brick":"Tilføj en klods","Featured":"Udvalgte","My App":"Min app","Separator":"Separator","You haven't created any apps yet.":"Du har ikke lavet nogen apps... endnu.","Guest Explanation":"Gæster kan bygge, men ikke udgive apps.","Send SMS":"Send SMS","Publishing...":"Udgiver...","Open":"Åbn","Create":"Lav","My Profile":"Min profil","An active connection is needed to display the Discover Gallery":"Det kræver en aktiv forbindelse at vise Udforsk-galleriet","Start Building":"Kom i gang","No Data available":"Ingen tilgængelige data","Business":"Forretning","Get Started":"Kom i gang","Delete App":"Slet app","Share Community News":"Del fællesskabsnyheder","Choose Contacts":"Vælg kontakter","Back to My Apps":"Tilbage til Mine apps","Join Webmaker":"Meld dig til Webmaker","Preview":"Forhåndsvisning","URL":"URL","Text Color":"Tekstfarve","Minimum Number":"Mindste tal","Increment by":"Forøg med","Head over to Make to start creating your very own app.":"Gå over til <strong>Skab</strong> for at lave på din egen app.","Maximum Number":"Højeste tal","Image":"Billede","Sign In":"Log ind","Safety":"Sikkerhed","Discover":"Udforsk","errorAppNotFound":"Appen blev desværre ikke fundet. Vil du gå tilbage til din <a href='/profile'>profil</a>?","Name":"Navn","Are you sure you want to delete this magnificent creation":"Er du sikker på at du vil slette dette pragtfulde værk?","The Internet fell asleep!":"Internettet gik i dvale!","noDataInfoSub":"Hvis du vil give brugerne mulighed for at dele data med dig, så prøv at tilføj en Tæller og en Send-knap til din app.","Title":"Titel","Choosing this option will allow you to create your own app without a preset template.":"Ved at vælge denne mulighed kan du lave dine egne apps uden at tage udgangspunkt i en skabelon.","Share App":"Del app","Done":"Færdig","You need to connect to the Internet.":"Der skal være forbindelse til internettet.","This action cannot be undone":"Denne handling kan ikke fortrydes.","Delete":"Slet","Phone":"Opkald","Initial Number":"Start-tal","Share Via":"Del via","SMS":"SMS","Gather information from your users by creating a survey.":"Indsaml information fra dine brugere ved at oprette en brugerundersøgelse.","Create a Blog":"Lav en blog","App Data":"App-data","Source":"Kilde","Long Text":"Lang tekst","I am some text":"Jeg er en tekst","share_message":"Se denne app, jeg har lavet med Mozilla Webmaker","Make and share the web":"Skab og del webbet","Blogger":"Blogger","My {{template}} App":"Min {{template}}-app","Counter":"Tæller","Create a Survey":"Lav en brugerundersøgelse","Add to Homescreen":"Føj til startskærmen","Button Color":"Knapfarve","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> fra <br/></span><strong>{{location}}</strong>","Select all":"Vælg alle","Tap the plus sign to begin adding content.":"Tryk på plus-tegnet for at tilføje indhold.","Add contacts":"Tilføj kontakter","Teacher":"Lærer","Start from Scratch":"Start fra bunden","Remix App":"Remix app","Offline Mode Explanation":"Denne enhed er ikke forbundet til internettet, så du vil ikke være i stand til at udgive apps.","Message":"Meddelelse","Share photos and write articles and about your local community":"Del billeder og skriv artikler om dit lokale fællesskab","noContactsError":"Vælg en eller flere kontakter for at sende en SMS.","Open App":"Åbn app","by _":"lavet af {{name}}","Make an App":"Lav en app","Sign Out":"Log ud","Delete my Apps":"Slet mine apps","App Name":"App-navn","Journalist":"Journalist","Show in Discover Gallery":"Vis i Udforsk-galleriet","Text Value":"Tekst-værdi","My Apps":"Mine apps","Tap the plus sign to add more content.":"Tryk på plus-tegnet for at tilføje mere indhold.","Cancel":"Annuller","Try in Offline Mode":"Prøv i offline-tilstand","Guest":"Gæst","Try as Guest":"Prøv som gæst","Text Box Type":"Type af tekstboks","No Apps Message":"Du har ingen apps endnu.","Data":"Data","errorNoText":"Du skal skrive en tekstværdi","Select Color":"Vælg farve","Edit":"Rediger","Phone #":"Telefonnummer","Link Text":"Linktekst","Save":"Gem","Create a Safety App":"Lav en sikkerheds-app","Publish":"Udgiv","errorDefault":"Hovsa! Der opstod en fejl. Vil du gå tilbage til din <a href='/profile'>profil</a>?","Button Text":"Tekst på knap","Label":"Etiket","Create a How To Guide":"Lav en vejledning","Submit":"Send","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Er der noget, du gerne vil dele med resten af verden? Start en blog, tilpas den for at gøre den personlig og begynd at skriv!","Edit my Profile":"Rediger min profil","Font Size":"Skriftstørrelse","Make":"Skab","Open my app":"Åbn min app","Place call":"Ring op","If you've got unique skills you'd like to share with others, try making a How To guide.":"Hvis du har særlige evner du vil dele med andre, så prøv at lav en vejledning.","Add a map, a emergency call button, and other tips to keep safe in your community":"Tilføj et kort, en knap til nødopkald, og andre tips til at holde sig sikker","App":"App","Make Your Own App":"Lav din egen app","Text Box":"Tekstboks","App Name & Icon":"App-navn og -ikon","Make your own app at":"Lav din egen app hos","Share":"Del","Promote your Business":"Promover din forretning","Show off your products and give customers an easy way to reach you.":"Fremvis dine produkter og gør det nemt for kunderne at komme i kontakt med dig.","same as minimum number":"samme som mindste tal","Text":"Tekst","Link":"Link","From Scratch":"Fra bunden","error404":"Vi fandt desværre ikke siden. Vil du <a href='/sign-in'>gå tilbage til begyndelsen</a>?","toucanspeak":"Lad os starte med at tilføje noget tekst.","Made with Mozilla Webmaker":"Lavet med Mozilla Webmaker","Menu":"Menu","Color":"Farve","How To":"Sådan gør du","Title Text Color":"Tekstfarve på titel"},"el":{"Show this app in the Discover Gallery":"Πόβαλε αυτη την εφαρμογή στη συλλογή Discover Gallery","Single Line Text":"Κείμενο Μιας Γραμμής","Newest":"Πιο πρόσφατο","No data has been stored yet!":"Δεν έχουν αποθηκευτεί δεδομένα ακόμη!","Add a Brick":"Προσθέστε ένα επίπεδο","Featured":"Προβεβλημένες","My App":"Η Εφαρμογή μου","Separator":"Διαχωριστής","You haven't created any apps yet.":"Δεν έχετε δημιουργήσει καμία εφαρμογή... ακόμα.","Guest Explanation":"Οι επισκέπτες μπορούν να δημιουργήσουν, αλλά δεν μπορούν να δημοσιεύσουν εφαρμογές","Send SMS":"Αποστολή SMS","Publishing...":"Δημοσίευση...","Open":"Άνοιγμα","Create":"Δημιουργία","My Profile":"Το προφίλ μου","An active connection is needed to display the Discover Gallery":"Απαιτείται μία ενεργή σύνδεση για να εμφανιστεί στη  Discover Gallery","Start Building":"Δημιουργία","No Data available":"Δεν υπάρχουν δεδομένα","Business":"Επιχείριση","Get Started":"Ξεκινήστε","Delete App":"Διαγραφή εφαρμογής","Share Community News":"Μοιραστείτε Νέα της Κοινότητας","Choose Contacts":"Επιλογή Επαφών","Back to My Apps":"Επιστροφή στις Εφαρμογές Μου","Join Webmaker":"Δημιουργία λογαριασμού","Preview":"Προ-επισκόπηση ","URL":"URL","Text Color":"Χρώμα Κειμένου","Minimum Number":"Ελάχιστος Αριθμός","Increment by":"Βήμα αύξησης","Head over to Make to start creating your very own app.":"Πάνω από το  <strong> Βεβαιωθείτε </ strong> για να αρχίσετε να δημιουργείτε τη δική σας εφαρμογή.","Maximum Number":"Μέγιστος Αριθμός","Image":"Εικόνα","Sign In":"Είσοδος","Safety":"Ασφάλεια","Discover":"Ανακαλύψτε","errorAppNotFound":"Συγνώμη, αλλά δεν βρέθηκε αυτήν η εφαρμογή. Επιστροφή στο <a href='/profile'>προφίλ</a> σας?","Name":"Όνομα","Are you sure you want to delete this magnificent creation":"Είσαι σίγουρος/η ότι θέλεις να διαγράψεις αυτή την υπέροχη δημιουργία;","The Internet fell asleep!":"Το Ίντερνετ αποκοιμήθηκε!","noDataInfoSub":"Αν θα θέλατε να επιτρέπετε στους χρήστες να μοιράζονται δεδομένα μαζί σας, προσπαθήστε να προσθέσετε ένα Μετρητή και ένα κουμπί Υποβολής στην εφαρμογή σας.","Title":"Τίτλος","Choosing this option will allow you to create your own app without a preset template.":"Με αυτήν η επιλογή θα δημιουργήσεις μια εφαρμογή χωρίς την χρήση κάποιου προτύπου.","Share App":"Διαμοιρασμός Εφαρμογής","Done":"Ολοκληρώθηκε","You need to connect to the Internet.":"Χρειάζεται να συνδεθείς στο Διαδίκτυο","This action cannot be undone":"Αυτή η ενέργεια δεν μπορεί να αναιρεθεί.","Delete":"Διαγραφή","Phone":"Τηλέφωνο","Initial Number":"Αρχικός Αριθμός","Share Via":"Διαμοιρασμός Μέσω","SMS":"SMS","Gather information from your users by creating a survey.":"Συγκεντρώστε πληροφορίες από τους χρήστες σας δημιουργώντας μια δημοσκόπηση.","Create a Blog":"Δημιουργία ενός Ιστολογίου","App Data":"Δεδομένα Εφαρμογής","Source":"Πηγή","Long Text":"Μεγάλο Κείμενο","I am some text":"Δοκιμαστικό κείμενο","share_message":"Δες την εφαρμογή που δημιούργησα με το Mozilla Webmaker","Make and share the web":"Δημιουργήστε &amp; μοιραστείτε τον ιστό","Blogger":"Συγγραφέας ιστολογίου","My {{template}} App":"Η {{template}} Εφαρμογή μου","Counter":"Μετρητής","Create a Survey":"Δημιουργία μιας Δημοσκόπησης","Add to Homescreen":"Προσθήκη στην Αρχική οθόνη","Button Color":"Χρώμα Κουμπιού","name from location":"<strong>{{name}}</strong><span v-if=\"location\"><br/> από <br/></span><strong>{{location}}</strong>","Select all":"Επιλογή όλων","Tap the plus sign to begin adding content.":"Πατήστε το σύμβολο πρόσθεσης για να αρχίσετε να προσθέτετε περιεχόμενο.","Add contacts":"Προσθήκη επαφών","Teacher":"Δάσκαλος","Start from Scratch":"Ξεκίνα από το μηδέν","Remix App":"Διασκευή Εφαρμογής","Offline Mode Explanation":"Η συσκευή δεν είναι συνδεδεμένη με το διαδίκτυο. Έτσι δεν θα μπορείτε να δημοσιεύσετε την εφαρμογή σας.","Message":"Μήνυμα","Share photos and write articles and about your local community":"Μοιραστείτε φωτογραφίες και γράψτε άρθρα και για την τοπική σας κοινότητα","noContactsError":"Για την αποστολή ενός SMS, παρακαλώ επίλεξε μια ή περισσότερες επαφές.","Open App":"Άνοιγμα Εφαρμογής ","by _":"κατά {{name}}","Make an App":"Δημιουργίας μιας εφαρμογής","Sign Out":"Έξοδος","Delete my Apps":"Διαγραφή των εφαρμογών μου","App Name":"Όνομα Εφαρμογής","Journalist":"Δημοσιογράφος","Show in Discover Gallery":"Παρουσίαση στη Discover Gallery","Text Value":"Κείμενο","My Apps":"Οι εφαρμογές μου","Tap the plus sign to add more content.":"Πατήστε το σύμβολο πρόσθεσης για να προσθέτετε επιπλέον περιεχόμενο.","Cancel":"Άκυρο","Try in Offline Mode":"Δοκιμή Εκτός Σύνδεσης","Guest":"Επισκέπτης","Try as Guest":"Δοκιμή σαν επισκέπτης","Text Box Type":"Τύπος Πεδίου Κειμένου","No Apps Message":"Δεν έχετε καμία εφαρμογή ακόμα.","Data":"Δεδομένα","errorNoText":"Πρέπει να γράψεις κάτι","Select Color":"Επιλογή χρώματος","Edit":"Επεξεργασία","Phone #":"Αριθμός τηλεφώνου","Link Text":"Κείμενο Συνδέσμου","Save":"Αποθήκευση","Create a Safety App":"Δημιουργήστε μια Εφαρμογή Ασφάλειας","Publish":"Δημοσίευση","errorDefault":"Ουπς!! Προέκυψε ένα σφάλμα. Επιστροφή στο <a href='/profile'>προφίλ</a> σας?","Button Text":"Κείμενο Κουμπιού","Label":"Ετικέτα","Create a How To Guide":"Δημιουργήστε έναν οδηγό Πως Να","Submit":"Αποστολή","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Θέλεις να μοιραστείς κάτι με τον κόσμο; Ξεκίνα ένα ιστολόγιο, μορφοποίησε το σύμφωνα με το γούστο σου και ξεκίνα να γράφεις!","Edit my Profile":"Επεξεργασία του προφίλ μου","Font Size":"Μέγεθος Γραμματοσειράς","Make":"Δημιούργησε ","Open my app":"Άνοιγμα της εφαρμογής μου","Place call":"Πραγματοποίηση κλήσης","If you've got unique skills you'd like to share with others, try making a How To guide.":"Αν έχετε μοναδικές δεξιότητες που θα θέλατε να μοιραστείτε με άλλους, προσπαθήστε να δημιουργήσετε έναν οδηγό Πως Να.","Add a map, a emergency call button, and other tips to keep safe in your community":"Προσθέστε ένα χάρτη, ένα κουμπί επείγουσας κλήσης, και και άλλες συμβουλές για να παραμείνετε ασφαλής στην κοινότητά σας","App":"Εφαρμογή","Make Your Own App":"Δημιούργησε την δική σου Εφαρμογή","Text Box":"Πεδίο Κειμένου","App Name & Icon":"Όνομα εφαρμογής και Εικονίδιο","Make your own app at":"Δημιούργησε τη δική σου Εφαρμογή στο","Share":"Διαμοιρασμός","Promote your Business":"Προώθησε την Επιχείρισή σου","Show off your products and give customers an easy way to reach you.":"Επιδείξτε τα προϊόντα σας και δώστε στους αγοραστές έναν εύκολο τρόπο να επικοινωνήσουν μαζί σας.","same as minimum number":"ίδιος με τον μικρότερο αριθμό","Text":"Κείμενο","Link":"Σύνδεσμος","From Scratch":"Από την αρχή","error404":"Συγγνώμη, δεν μπορέσαμε να βρούμε αυτή τη σελίδα. Θα θέλατε να <a href='/sign-in'>επιστρέψετε στην αρχή</a>;","toucanspeak":"Ας αρχίσουμε προσθέτοντας κάποιο κείμενο.","Made with Mozilla Webmaker":"Δημιουργήθηκε με Mozilla Webmaker","Menu":"Μενού","Color":"Χρώμα","How To":"Πως να","Title Text Color":"Χρώμα Τίτλου"},"en-CA":{"Show this app in the Discover Gallery":"Show this app in the Discover Gallery","Single Line Text":"Single Line Text","Newest":"Newest","No data has been stored yet!":"No data has been stored yet!","Add a Brick":"Add a Brick","Featured":"Featured","My App":"My App","Separator":"Separator","You haven't created any apps yet.":"You haven't created any apps...yet.","Guest Explanation":"Guests can build, but not publish apps.","Send SMS":"Send SMS","Publishing...":"Publishing...","Open":"Open","Create":"Create","My Profile":"My Profile","An active connection is needed to display the Discover Gallery":"An active connection is needed to display the Discover Gallery","Start Building":"Start Building","No Data available":"No Data available","Business":"Business","Get Started":"Get Started","Delete App":"Delete App","Share Community News":"Share Community News","Choose Contacts":"Choose Contacts","Back to My Apps":"Back to My Apps","Join Webmaker":"Join Webmaker","Preview":"Preview","URL":"URL","Text Color":"Text Color","Minimum Number":"Minimum Number","Increment by":"Increment by","Head over to Make to start creating your very own app.":"Head over to <strong>Make</strong> to start creating your very own app.","Maximum Number":"Maximum Number","Image":"Image","Sign In":"Sign In","Safety":"Safety","Discover":"Discover","errorAppNotFound":"Sorry, this app was not found. Go back to your <a href='/profile'>profile</a>?","Name":"Name","Are you sure you want to delete this magnificent creation":"Are you sure you want to delete this magnificent creation?","The Internet fell asleep!":"The Internet fell asleep!","noDataInfoSub":"If you'd like to let users share data with you, try adding a Counter and a Submit button to your app.","Title":"Title","Choosing this option will allow you to create your own app without a preset template.":"Choosing this option will allow you to create your own app without a preset template.","Share App":"Share App","Done":"Done","You need to connect to the Internet.":"You need to connect to the Internet.","This action cannot be undone":"This action cannot be undone.","Delete":"Delete","Phone":"Phone","Initial Number":"Initial Number","Share Via":"Share Via","SMS":"SMS","Gather information from your users by creating a survey.":"Gather information from your users by creating a survey.","Create a Blog":"Create a Blog","App Data":"App Data","Source":"Source","Long Text":"Long Text","I am some text":"I am some text","share_message":"Check out the app I made with Mozilla Webmaker","Make and share the web":"Make &amp; share the web","Blogger":"Blogger","My {{template}} App":"My {{template}} App","Counter":"Counter","Create a Survey":"Create a Survey","Add to Homescreen":"Add to Homescreen","Button Color":"Button Color","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> from <br/></span><strong>{{location}}</strong>","Select all":"Select all","Tap the plus sign to begin adding content.":"Tap the plus sign to begin adding content.","Add contacts":"Add contacts","Teacher":"Teacher","Start from Scratch":"Start from Scratch","Remix App":"Remix App","Offline Mode Explanation":"This device isn't connected to the internet, so you won't be able to publish any apps.","Message":"Message","Share photos and write articles and about your local community":"Share photos and write articles and about your local community","noContactsError":"To send an SMS, please choose one or more contact.","Open App":"Open App","by _":"by {{name}}","Make an App":"Make an App","Sign Out":"Sign Out","Delete my Apps":"Delete my Apps","App Name":"App Name","Journalist":"Journalist","Show in Discover Gallery":"Show in Discover Gallery","Text Value":"Text Value","My Apps":"My Apps","Tap the plus sign to add more content.":"Tap the plus sign to add more content.","Cancel":"Cancel","Try in Offline Mode":"Try in Offline Mode","Guest":"Guest","Try as Guest":"Try as Guest","Text Box Type":"Text Box Type","No Apps Message":"You don't have any apps yet.","Data":"Data","errorNoText":"You must include a text value","Select Color":"Select Colour","Edit":"Edit","Phone #":"Phone #","Link Text":"Link Text","Save":"Save","Create a Safety App":"Create a Safety App","Publish":"Publish","errorDefault":"Oops! There was an error. Go back to your <a href='/profile'>profile</a>?","Button Text":"Button Text","Label":"Label","Create a How To Guide":"Create a How To Guide","Submit":"Submit","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Have something to share with the world? Start a blog, customize to make it yours and start writing!","Edit my Profile":"Edit my Profile","Font Size":"Font Size","Make":"Make","Open my app":"Open my app","Place call":"Place call","If you've got unique skills you'd like to share with others, try making a How To guide.":"If you've got unique skills you'd like to share with others, try making a How To guide.","Add a map, a emergency call button, and other tips to keep safe in your community":"Add a map, a emergency call button, and other tips to keep safe in your community","App":"App","Make Your Own App":"Make Your Own App","Text Box":"Text Box","App Name & Icon":"App Name & Icon","Make your own app at":"Make your own app at","Share":"Share","Promote your Business":"Promote your Business","Show off your products and give customers an easy way to reach you.":"Show off your products and give customers an easy way to reach you.","same as minimum number":"same as minimum number","Text":"Text","Link":"Link","From Scratch":"From Scratch","error404":"Sorry, we couldn't find this page. Would you like to <a href='/sign-in'>go back to the start</a>?","toucanspeak":"Let's start by adding some text.","Made with Mozilla Webmaker":"Made with Mozilla Webmaker","Menu":"Menu","Color":"Color","How To":"How To","Title Text Color":"Title Text Color"},"en-US":{"Add a Brick":"Add a Brick","errorNoText":"You must include a text value","Tap the plus sign to begin adding content.":"Tap the plus sign to begin adding content.","Tap the plus sign to add more content.":"Tap the plus sign to add more content.","My Profile":"My Profile","URL":"URL","Link":"Link","Add Content":"Add Content","Separator":"Separator","Link Text":"Link Text","Edit my Profile":"Edit my Profile","Get Started":"Get Started","My Apps":"My Apps","My App":"My App","by _":"by {{name}}","Image":"Image","Name":"Name","App Name & Icon":"App Name & Icon","App Name":"App Name","Make":"Make","Make Your Own App":"Make Your Own App","Featured":"Featured","Newest":"Newest","No Data available":"No Data available","Select all":"Select all","Make an App":"Make an App","SMS":"SMS","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> from <br/></span><strong>{{location}}</strong>","Delete":"Delete","Journalist":"Journalist","Business":"Business","From Scratch":"From Scratch","No data has been stored yet!":"No data has been stored yet!","noDataInfoSub":"If you'd like to let users share data with you, try adding a Counter and a Submit button to your app.","Publishing...":"Publishing...","You need to connect to the Internet.":"You need to connect to the Internet.","Survey":"Survey","How To":"How To","Blogger":"Blogger","Safety":"Safety","Button Color":"Button Color","Button Text":"Button Text","Initial Number":"Initial Number","same as minimum number":"same as minimum number","Maximum Number":"Maximum Number","Minimum Number":"Minimum Number","Increment by":"Increment by","Select Color":"Select Color","Edit":"Edit","Preview":"Preview","Text":"Text","Message":"Message","Place call":"Place call","Title Text Color":"Title Text Color","Title":"Title","Text Box Type":"Text Box Type","Single Line Text":"Single Line Text","Send SMS":"Send SMS","Long Text":"Long Text","Source":"Source","Sign In":"Sign In","Try as Guest":"Try as Guest","Guest":"Guest","Guest Explanation":"Guests can build, but not publish apps.","Try in Offline Mode":"Try in Offline Mode","Offline Mode Explanation":"This device isn't connected to the internet, so you won't be able to publish any apps.","Sign Out":"Sign Out","Delete App":"Delete App","Delete my Apps":"Delete my Apps","Text Value":"Text Value","Text Color":"Text Color","Phone":"Phone","Phone #":"Phone #","App Data":"App Data","Label":"Label","share_message":"Check out the app I made with Mozilla Webmaker","App":"App","Cancel":"Cancel","Done":"Done","No Apps Message":"You don't have any apps yet.","error404":"Sorry, we couldn't find this page. Would you like to <a href='/sign-in'>go back to the start</a>?","errorAppNotFound":"Sorry, this app was not found. Go back to your <a href='/profile'>profile</a>?","errorDefault":"Oops! There was an error. Go back to your <a href='/profile'>profile</a>?","Discover":"Discover","Make and share the web":"Make &amp; share the web","Start Building":"Start Building","toucanspeak":"Let's start by adding some text.","Share":"Share","Open":"Open","Create":"Create","Data":"Data","Publish":"Publish","Join Webmaker":"Join Webmaker","I am some text":"I am some text","Counter":"Counter","Color":"Color","Font Size":"Font Size","Submit":"Submit","My {{template}} App":"My {{template}} App","Save":"Save","Start from Scratch":"Start from Scratch","Choosing this option will allow you to create your own app without a preset template.":"Choosing this option will allow you to create your own app without a preset template.","Create a Blog":"Create a Blog","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Have something to share with the world? Start a blog, customize to make it yours and start writing!","Create a Survey":"Create a Survey","Gather information from your users by creating a survey.":"Gather information from your users by creating a survey.","Promote your Business":"Promote your Business","Show off your products and give customers an easy way to reach you.":"Show off your products and give customers an easy way to reach you.","Share Community News":"Share Community News","Share photos and write articles and about your local community":"Share photos and write articles and about your local community","Create a How To Guide":"Create a How To Guide","If you've got unique skills you'd like to share with others, try making a How To guide.":"If you've got unique skills you'd like to share with others, try making a How To guide.","Create a Safety App":"Create a Safety App","Add a map, a emergency call button, and other tips to keep safe in your community":"Add a map, a emergency call button, and other tips to keep safe in your community","Text Box":"Text Box","noContactsError":"To send an SMS, please choose one or more contact.","Are you sure you want to delete this magnificent creation":"Are you sure you want to delete this magnificent creation?","This action cannot be undone":"This action cannot be undone.","Made with Mozilla Webmaker":"Made with Mozilla Webmaker","Make your own app at":"Make your own app at","Add to Homescreen":"Add to Homescreen","Share App":"Share App","Menu":"Menu","Back to My Apps":"Back to My Apps","Show this app in the Discover Gallery":"Show this app in the Discover Gallery","Open my app":"Open my app","Remix App":"Remix App","Open App":"Open App","Choose Contacts":"Choose Contacts","The Internet fell asleep!":"The Internet fell asleep!","An active connection is needed to display the Discover Gallery":"An active connection is needed to display the Discover Gallery","Head over to Make to start creating your very own app.":"Head over to <strong>Make</strong> to start creating your very own app.","You haven't created any apps yet.":"You haven't created any apps...yet.","Share Via":"Share Via","Add contacts":"Add contacts","Show in Discover Gallery":"Show in Discover Gallery","Legal":"Legal","Privacy Policy":"Privacy Policy","errorMaxMin":"Max must be larger than or equal to min.","errorMinMax":"Min must be smaller than or equal to than max."},"es":{"Show this app in the Discover Gallery":"Mostrar esta aplicación en la Galería","Single Line Text":"Texto de una línea","Newest":"Reciente","No data has been stored yet!":"No data has been stored yet!","Add a Brick":"Añadir un bloque","Featured":"Destacado","My App":"Mi aplicación","Separator":"Separador","You haven't created any apps yet.":"You haven't created any apps...yet.","Guest Explanation":"Los invitados pueden crear, pero no publicar apps.","Send SMS":"Enviar SMS","Publishing...":"Publicando...","Open":"Abrir","Create":"Crear","My Profile":"Mi perfil","An active connection is needed to display the Discover Gallery":"An active connection is needed to display the Discover Gallery","Start Building":"Comenzar a construir","No Data available":"No hay datos disponibles","Business":"Negocio","Get Started":"Empecemos","Delete App":"Borrar app","Share Community News":"Compartir noticias de la comunidad","Choose Contacts":"Choose Contacts","Back to My Apps":"Volver a mis apps","Join Webmaker":"Unirse a Webmaker","Preview":"Vista preliminar","URL":"URL","Text Color":"Color del texto","Minimum Number":"Número mínimo","Increment by":"Incrementar en","Head over to Make to start creating your very own app.":"Head over to <strong>Make</strong> to start creating your very own app.","Maximum Number":"Número máximo","Image":"Imagen","Sign In":"Conectar","Safety":"Seguridad","Discover":"Descubre","errorAppNotFound":"Lo sentimos, pero no se ha encontrado esta app. ¿Volver a tu <a href='/profile'>perfil</a>?","Name":"Nombre","Are you sure you want to delete this magnificent creation":"¿Seguro que quieres borrar esta magnífica creación?","The Internet fell asleep!":"The Internet fell asleep!","noDataInfoSub":"If you'd like to let users share data with you, try adding a Counter and a Submit button to your app.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"Al seleccionar esta opción, podrás crear tu propia app sin necesidad de una plantilla.","Share App":"Compartir app","Done":"Hecho","You need to connect to the Internet.":"You need to connect to the Internet.","This action cannot be undone":"Esta acción no puede deshacerse.","Delete":"Borrar","Phone":"Teléfono","Initial Number":"Número inicial","Share Via":"Share Via","SMS":"SMS","Gather information from your users by creating a survey.":"Recolecta información de tus usuarios creando una encuesta.","Create a Blog":"Crear un blog","App Data":"App Data","Source":"Fuente","Long Text":"Texto largo","I am some text":"Soy un texto","share_message":"Mira la aplicación que hice con Mozilla Webmaker","Make and share the web":"Crea y comparte la Web","Blogger":"Blogger","My {{template}} App":"Mi app {{template}}","Counter":"Contador","Create a Survey":"Crear una encuesta","Add to Homescreen":"Añadir a pantalla de inicio","Button Color":"Color del botón","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Seleccionar todo","Tap the plus sign to begin adding content.":"Toca el signo positivo para comenzar a agregar contenido.","Add contacts":"Add contacts","Teacher":"Profesor","Start from Scratch":"Comenzar desde cero","Remix App":"Remezclar app","Offline Mode Explanation":"Este dispositivo no tiene conexión a internet, por lo que no podrás publicar ninguna app.","Message":"Mensaje","Share photos and write articles and about your local community":"Comparte fotos y escribe artículos sobre tu comunidad local","noContactsError":"Para enviar un SMS, selecciona uno o más contactos.","Open App":"Abrir app","by _":"por {{name}}","Make an App":"Crear una app","Sign Out":"Desconectar","Delete my Apps":"Borrar mi app","App Name":"App Name","Journalist":"Periodista","Show in Discover Gallery":"Show in Discover Gallery","Text Value":"Texto","My Apps":"Mis apps","Tap the plus sign to add more content.":"Toca el signo positivo para agregar más contenido.","Cancel":"Cancelar","Try in Offline Mode":"Probar en modo sin conexión","Guest":"Invitado","Try as Guest":"Probar como invitado","Text Box Type":"Tipo de caja de texto","No Apps Message":"Aún no tienes apps","Data":"Datos","errorNoText":"Debes incluir un valor de texto","Select Color":"Seleccionar color","Edit":"Editar","Phone #":"N.º teléfono","Link Text":"Texto del enlace","Save":"Guardar","Create a Safety App":"Crear una app de seguridad","Publish":"Publicar","errorDefault":"¡Vaya! Ha ocurrido un error. ¿Volver a tu <a href='/profile'>perfil</a>?","Button Text":"Texto del botón","Label":"Etiqueta","Create a How To Guide":"Crear una guía de instrucciones","Submit":"Enviar","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"¿Tienes algo que compartir con el mundo? ¡Empieza un blog, personalízalo y empieza a escribir!","Edit my Profile":"Editar mi perfil","Font Size":"Tamaño de fuente","Make":"Crear","Open my app":"Abrir mi app","Place call":"Hacer una llamada","If you've got unique skills you'd like to share with others, try making a How To guide.":"Si tienes destrezas que nadie más tiene y te gustaría compartirlas con los demás, prueba a crear una guía de instrucciones.","Add a map, a emergency call button, and other tips to keep safe in your community":"Agrega un mapa, un botón de llamada de emergencia y otros consejos para mantener la seguridad en tu comunidad","App":"App","Make Your Own App":"Crear tu propia app","Text Box":"Caja de texto","App Name & Icon":"Nombre e icono de la app","Make your own app at":"Crea tu propia app en","Share":"Compartir","Promote your Business":"Promocionar tu negocio","Show off your products and give customers an easy way to reach you.":"Muestra tus productos y ofrece a los clientes una manera fácil de contactar contigo.","same as minimum number":"igual al número mínimo","Text":"Texto","Link":"Enlace","From Scratch":"Desde cero","error404":"Lo sentimos, no pudimos encontrar esa página. ¿Quieres <a href='/sign-in'>volver al principio</a>?","toucanspeak":"Comencemos por agregar algo de texto.","Made with Mozilla Webmaker":"Hecha con Mozilla Webmaker","Menu":"Menú","Color":"Color","How To":"Cómo...","Title Text Color":"Color del texto del título"},"es-AR":{"Show this app in the Discover Gallery":"Muestrá ésta app en la Galeria Encuentra","Single Line Text":"Una sola línea de texto","Newest":"Más nuevo","No data has been stored yet!":"Ningún dato ha sido guardado aún","Add a Brick":"Agregá un ladrillo","Featured":"Destacado","My App":"My App","Separator":"Separador","You haven't created any apps yet.":"No creaste ninguna apps...todavía.","Guest Explanation":"Los Invitados puede construir pero no publicar apps.","Send SMS":"Enviá mensaje de texto","Publishing...":"Publicando","Open":"Abrir","Create":"Crear","My Profile":"Mi Perfil","An active connection is needed to display the Discover Gallery":"Una activa conección es necesaria para visualizar la Galeria Encuentra","Start Building":"Empezá a Construir","No Data available":"Sin datos disponibles","Business":"Negocios","Get Started":"Comienza","Delete App":"Borrar aplicación","Share Community News":"Compartí noticias de la Comunidad","Choose Contacts":"Elegí contactos","Back to My Apps":"Volver a mis Apps","Join Webmaker":"Unirse a Webmaker","Preview":"Vista previa","URL":"URL","Text Color":"Color de texto","Minimum Number":"Número Mínimo","Increment by":"Aumentado por","Head over to Make to start creating your very own app.":"Dirigíte a <strong> Hacé que </strong>empiece a crear tu propia app.","Maximum Number":"Número Máximo","Image":"Imagen","Sign In":"Conectarse","Safety":"Seguridad","Discover":"Encuentra","errorAppNotFound":"Disculpas, ésta app no fue encontrada. ¿Volver a tu <a href='/profile'>perfil</a>?","Name":"Nombre","Are you sure you want to delete this magnificent creation":"¿Estás seguro de querer borrar ésta magnífica creación?","The Internet fell asleep!":"Internet se cayó","noDataInfoSub":"Si querés dejar a usuarios compartir datos con vos, tratá agregando un contador y el botón de envio a tu app.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"Elegir ésta opción te permitirá crear tu propia app sin una plantilla preestablecida.","Share App":"Compartí App","Done":"Hecho","You need to connect to the Internet.":"Usted necesita estar conectado a Internet.","This action cannot be undone":"Ésta acción no puede ser deshecha.","Delete":"Borrar","Phone":"Teléfono","Initial Number":"Número inicial","Share Via":"Compartí via","SMS":"Mensaje de texto","Gather information from your users by creating a survey.":"Reunir información de tus usuarios creando una encuesta","Create a Blog":"Creá un Blog","App Data":"App Data","Source":"Fuente","Long Text":"Texto largo","I am some text":"Soy un poco de texto","share_message":"Mirá la app que hice con Mozilla Webmaker","Make and share the web":"Hacer &amp; compartir la web","Blogger":"Bloguero","My {{template}} App":"Mi {{template}} App","Counter":"Pieza","Create a Survey":"Crear una Encuesta","Add to Homescreen":"Agrega a la Pantalla de Inicio","Button Color":"Botón de color","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Selecciona todo","Tap the plus sign to begin adding content.":"Pulsá el signo más para empezar a añadir contenido.","Add contacts":"Agrega contactos","Teacher":"Profesor","Start from Scratch":"Comenzá desde el principio","Remix App":"Remezclar App","Offline Mode Explanation":"Éste dispositivo no esta conectado a internet, por ésto, no podrás publicas apps.","Message":"Mensaje","Share photos and write articles and about your local community":"Compartí fotos y escribí sobre tu comunidad local y noticias.","noContactsError":"Para mandar un mensaje de texto, por favor elegí uno o más contactos.","Open App":"Abrir App","by _":"por {{name}}","Make an App":"Realizá una App","Sign Out":"Desconectarse","Delete my Apps":"Borrar mis Apps","App Name":"Nombre de App","Journalist":"Periodista","Show in Discover Gallery":"Muesta en la Galeria Encuentra","Text Value":"Valor de texto","My Apps":"Mis Apps","Tap the plus sign to add more content.":"Pulsá el signo más para añadir más contenido.","Cancel":"Cancelar","Try in Offline Mode":"Entrá en modo fuera de línea","Guest":"Invitado","Try as Guest":"Entrá como invitado","Text Box Type":"Tipo de caja de texto","No Apps Message":"No tenés apps todavía.","Data":"Datos","errorNoText":"Debés incluir texto","Select Color":"Selecciona Color","Edit":"Editar","Phone #":"Teléfono #","Link Text":"Texto de link","Save":"Guardar","Create a Safety App":"Creá una App segura","Publish":"Publicar","errorDefault":"Uy! Hubo un error. ¿Volver a tu <a href='/profile'>perfil</a>?","Button Text":"Botón de texto","Label":"Etiqueta","Create a How To Guide":"Creá una guía de instrucciones","Submit":"Enviar","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"¿Tenés algo que compartir con el mundo? Empezá un blog, personalizalo para hacerlo tuyo y empezá a escribir!","Edit my Profile":"Editar mi Perfil","Font Size":"Tamaño de fuente","Make":"Hacer","Open my app":"Abrir mi app","Place call":"Realizar llamada","If you've got unique skills you'd like to share with others, try making a How To guide.":"Si tenés habilidades únicas querrás compartirlas con otros, trata de hacer una guía de instrucciones.","Add a map, a emergency call button, and other tips to keep safe in your community":"Agregá un mapa, un botón de llamada de emergencia, y otros consejos para mantenerte a salvo en tu comunidad.","App":"App","Make Your Own App":"Construye tu propia App","Text Box":"Caja de texto","App Name & Icon":"Nombre e Ícono de App ","Make your own app at":"Realiza tu propia app en","Share":"Compartir","Promote your Business":"Promueve tu negocio","Show off your products and give customers an easy way to reach you.":"Exponé tus productos y brindá a los clientes una manera fácil de llegar a vos.","same as minimum number":"como un número mínimo","Text":"Texto","Link":"Link","From Scratch":"Desde el principio","error404":"Disculpas, no pudimos encontrar ésta página. ¿Querés <a href='/sign-in'>regresar al principio</a>?","toucanspeak":"Empecemos añadiendo algo de texto.","Made with Mozilla Webmaker":"Hecho con Mozilla Webmaker","Menu":"Menú","Color":"Color","How To":"Instrucciones","Title Text Color":"Color de texto del Título"},"es-CL":{"Show this app in the Discover Gallery":"Mostre esta aplicación en la Discover Gallery","Single Line Text":"Texto de una sola línea","Newest":"Más reciente","No data has been stored yet!":"¡Todavía no se han almacenado datos!","Add a Brick":"Añadir un bloque","Featured":"Destacado","My App":"Mi App","Separator":"Separador","You haven't created any apps yet.":"Todavía no haz creado ninguna app.","Guest Explanation":"Los invitados pueden crear apps, pero no publicarlas.","Send SMS":"Enviar SMS","Publishing...":"Publicando...","Open":"Abrir","Create":"Crear","My Profile":"Mi perfil","An active connection is needed to display the Discover Gallery":"Una conexión activa es necesaria para mostrar la galería de descubrimiento","Start Building":"Empezar a construir","No Data available":"No hay datos disponibles","Business":"Negocios","Get Started":"Comenzar","Delete App":"Eliminar app","Share Community News":"Comparte noticias de la comunidad","Choose Contacts":"Elegir contactos","Back to My Apps":"Volver a mi aplicación","Join Webmaker":"Unirse a Webmaker","Preview":"Previsualización","URL":"URL","Text Color":"Color de texto","Minimum Number":"Número mínimo","Increment by":"Incrementar por","Head over to Make to start creating your very own app.":"Metete en <strong>Crear</strong> para empezar tu propia app.","Maximum Number":"Número máximo","Image":"Imagen","Sign In":"Conectarse","Safety":"Seguridad","Discover":"Descubrir","errorAppNotFound":"Lo sentimos, esta app no fue encontrada. ¿Regresar a tu <a href='/profile'>perfil</a>?","Name":"Nombre","Are you sure you want to delete this magnificent creation":"Estas seguro que quieres eliminar esta creación maravillosa?  ","The Internet fell asleep!":"¡El internet se durmió!","noDataInfoSub":"Si quieres que los usuarios compartan datos contigo, intenta añadir un contador y un botón de envío a tu app.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"Elegir esta opción te permitirá crear tu propia app sin hacer uso de una plantilla","Share App":"Comparte la Aplicación","Done":"Hecho","You need to connect to the Internet.":"Necesitas conectarte a Internet.","This action cannot be undone":"Esta acción no se puede deshacer","Delete":"Eliminar","Phone":"Teléfono","Initial Number":"Número inicial","Share Via":"Compartir mediante","SMS":"SMS","Gather information from your users by creating a survey.":"Recoger informaciones de sus usuarios por crear una encuesta.","Create a Blog":"Crear un Blog","App Data":"Datos de la app","Source":"Fuente","Long Text":"Texto largo","I am some text":"Soy un poco de texto","share_message":"Mira la aplicación que hice con Mozilla Webmaker","Make and share the web":"Crear y compartir la web","Blogger":"Bloguero","My {{template}} App":"Mi app de {{template}}","Counter":"Contador","Create a Survey":"Crear una Encuesta","Add to Homescreen":"Añadir a pantalla de inicio","Button Color":"Color del botón","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Seleccionar todo","Tap the plus sign to begin adding content.":"Presione en el signo de más para empezar a agregar contenido","Add contacts":"Añadir contactos","Teacher":"Profesor","Start from Scratch":"Empezar de cero","Remix App":"Remezcla la aplicación","Offline Mode Explanation":"Este dispositivo no está conectado a Internet, por lo que no podrás publicar aplicaciones.","Message":"Mensaje","Share photos and write articles and about your local community":"Comparte fotos y escribe artículos sobre tu comunidad local","noContactsError":"Para enviar un SMS, por favor escoge uno o más contactos.","Open App":"Abra a aplicación","by _":"por {{name}}","Make an App":"Crear una app","Sign Out":"Salir","Delete my Apps":"Borrar mis apps","App Name":"Nombre de la app","Journalist":"Periodista","Show in Discover Gallery":"Mostrar en la galería de descubrimiento","Text Value":"Valor del texto","My Apps":"Mis apps","Tap the plus sign to add more content.":"Presione en el signo de más para agregar más contenido","Cancel":"Cancelar","Try in Offline Mode":"Probar en modo sin conexión","Guest":"Invitado","Try as Guest":"Probar como invitado","Text Box Type":"Tipo de la caja de texto","No Apps Message":"En este momento no tienes ninguna app.","Data":"Datos","errorNoText":"Debes incluir un valor de texto","Select Color":"Seleccionar color","Edit":"Editar","Phone #":"Número de teléfono","Link Text":"Texto de enlace","Save":"Guardar","Create a Safety App":"Crear una app de seguridad","Publish":"Publicar","errorDefault":"¡Chuta! Ocurrio un error. ¿Regresar a tu <a href='/profile'>perfil</a>?","Button Text":"Texto del botón","Label":"Etiqueta","Create a How To Guide":"Crea una guía \"Hágalo usted mismo\"","Submit":"Enviar","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"¿Tienes algo para compartir con el mundo? Inicia un blog, personalizalo para hacerlo tuyo y ¡empieza a escribir!","Edit my Profile":"Editar mi perfil","Font Size":"Tamaño de la fuente","Make":"Crear","Open my app":"Abrir mi aplicación","Place call":"Realizar llamada","If you've got unique skills you'd like to share with others, try making a How To guide.":"Si tienes habilidades únicas que quieres compartir con otros, intenta hacer una guía Hágalo usted mismo.","Add a map, a emergency call button, and other tips to keep safe in your community":"Añade un mapa, un botón de llamada de emergencia y otros consejos para mantenerse seguro en tu comunidad","App":"App","Make Your Own App":"Crea tu propia App","Text Box":"Caja de texto","App Name & Icon":"Nombre de la app e ícono","Make your own app at":"Crear su propria aplicación em","Share":"Compartir","Promote your Business":"Promueve tu negocio","Show off your products and give customers an easy way to reach you.":"Muestra tus productos y dale a los consumidores una forma fácil de encontrarte.","same as minimum number":"igual al número mínimo","Text":"Texto","Link":"enlace","From Scratch":"De cero","error404":"Lo sentimos, no pudimos encontrar esta página. ¿Te gustaría <a href='/sign-in'>regresar al inicio</a>?","toucanspeak":"vamos empezar por añadir algún texto","Made with Mozilla Webmaker":"Hecho com Mozilla Webmaker","Menu":"Menú","Color":"Color","How To":"Tutorial","Title Text Color":"Color del texto del título"},"es-MX":{"Show this app in the Discover Gallery":"Mostrar esta aplicación en la Galería Discover","Single Line Text":"Texto de una sola línea","Newest":"El más nuevo","No data has been stored yet!":"No se han almacenado datos todavía.","Add a Brick":"Agregar un bloque","Featured":"Destacado","My App":"Mi aplicación","Separator":"Separador","You haven't created any apps yet.":"Todavía no creado ninguna aplicación.","Guest Explanation":"Los invitados pueden construir aplicaciones pero no las pueden publicar.","Send SMS":"Enviar un SMS","Publishing...":"Publicando...","Open":"Abrir","Create":"Crea","My Profile":"Mi perfil","An active connection is needed to display the Discover Gallery":"Se necesita una conexión activa para mostrar la galería Discover","Start Building":"Empezar a construir","No Data available":"No hay datos disponibles","Business":"Negocios","Get Started":"Comenzar","Delete App":"Eliminar App","Share Community News":"Compartir las noticias de la comunidad","Choose Contacts":"Elegir contactos","Back to My Apps":"Regresar a Mis Aplicaciones","Join Webmaker":"Únete a Webmaker","Preview":"Vista preliminar","URL":"URL","Text Color":"Color del texto","Minimum Number":"Número mínimo","Increment by":"Incremento de","Head over to Make to start creating your very own app.":"Ve a <strong>creación</ strong> para empezar a crear tu propia aplicación.","Maximum Number":"Número máximo","Image":"Imagen","Sign In":"Conectar","Safety":"Seguridad","Discover":"Descubre","errorAppNotFound":"Lo sentimos, pero no se pudo encontrar esa aplicación. ¿Quieres regresar a tu <a href='/profile'>perfil</a>?","Name":"Nombre","Are you sure you want to delete this magnificent creation":"¿Estás seguro de que quieres eliminar esta magnífica creación?","The Internet fell asleep!":"Internet se quedó dormido.","noDataInfoSub":"Si deseas permitir que los usuarios compartan datos contigo, añade un contador y un botón \"Enviar\" en tu aplicación.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"Esta opción te permitirá crear tu propia aplicación sin tener que utilizar una plantilla predeterminada.","Share App":"Compartir aplicación","Done":"Terminado","You need to connect to the Internet.":"Necesitas conectarte a internet.","This action cannot be undone":"Esta acción no se puede deshacer.","Delete":"Eliminar","Phone":"Teléfono","Initial Number":"Número inicial","Share Via":"Compartir Via","SMS":"SMS","Gather information from your users by creating a survey.":"Recopilar información de sus usuarios mediante la creación de una encuesta.","Create a Blog":"Crear un blog","App Data":"Datos de la aplicación","Source":"Fuente","Long Text":"Texto largo","I am some text":"Yo soy un poco de texto","share_message":"Echa un vistazo a la aplicación que hice con Mozilla Webmaker","Make and share the web":"Crear y compartir la web","Blogger":"Blogger","My {{template}} App":"Mi aplicación {{template}}","Counter":"Contador","Create a Survey":"Crear una encuesta","Add to Homescreen":"Añadir a pantalla de inicio","Button Color":"Color del botón","name from location":"<strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Seleccionar todo","Tap the plus sign to begin adding content.":"Pulsa en el signo más para empezar a añadir contenido.","Add contacts":"Agregar contactos","Teacher":"Maestro","Start from Scratch":"Empezar de cero","Remix App":"Mezclar aplicación","Offline Mode Explanation":"Este dispositivo no está conectado al Internet así que no podrás publicar ninguna aplicación.","Message":"Mensaje","Share photos and write articles and about your local community":"Comparte fotos y escribe artículos sobre tu comunidad","noContactsError":"Para enviar un SMS, por favor escoge uno o más contactos.","Open App":"Abrir aplicación","by _":"por {{name}}","Make an App":"Crear una aplicación","Sign Out":"Cerrar sesión","Delete my Apps":"Borrar mis aplicaciones","App Name":"Nombre de la aplicación","Journalist":"Periodista","Show in Discover Gallery":"Mostrar en la galería Discover","Text Value":"Valor del Texto","My Apps":"Mis aplicaciones","Tap the plus sign to add more content.":"Pulsa en el signo más para agregar más contenido.","Cancel":"Cancelar","Try in Offline Mode":"Probar en modo fuera de línea","Guest":"Invitado","Try as Guest":"Pruébalo como invitado","Text Box Type":"Tipo de caja del texto","No Apps Message":"No tienes ninguna aplicación todavía.","Data":"Datos","errorNoText":"Debes incluir un valor de texto","Select Color":"Seleccionar color","Edit":"Editar","Phone #":"# de Teléfono","Link Text":"Texto del enlace","Save":"Guardar","Create a Safety App":"Crear una aplicación para la prevención","Publish":"Publicar","errorDefault":"¡Ups! Hubo un error. ¿Quieres regresar a tu <a href='/profile'>profile</a>?","Button Text":"Texto del botón","Label":"Etiqueta","Create a How To Guide":"Crear una guía práctica","Submit":"Enviar","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"¿Tiene algo que quieres compartir con el mundo? Inicia un blog, personalízalo, y comienza a escribir.","Edit my Profile":"Editar mi perfil","Font Size":"Tamaño de la letra","Make":"Creación","Open my app":"Abrir mi aplicación","Place call":"Hacer una llamada","If you've got unique skills you'd like to share with others, try making a How To guide.":"Si tienes habilidades únicas y quieres compartirlas con los demás, intenta crear una guía práctica.","Add a map, a emergency call button, and other tips to keep safe in your community":"Agrega un mapa, un botón de emergencia y otros consejos que contribuyan a mantener segura tu comunidad.","App":"Aplicación","Make Your Own App":"Crear tu propia aplicación","Text Box":"Caja de texto","App Name & Icon":"El nombre de la aplicación y el ícono","Make your own app at":"Crea tu propia aplicación en","Share":"Compartir","Promote your Business":"Promociona tu negocio","Show off your products and give customers an easy way to reach you.":"Presume tus productos y permíteles a los clientes ponerse en contacto contigo de manera fácil.","same as minimum number":"el mismo que el número mínimo","Text":"Texto","Link":"Enlace","From Scratch":"Empezar de cero","error404":"Lo sentimos, pero no pudimos encontrar esa página. ¿Quieres <a href='/sign-in'>volver al inicio</a>?","toucanspeak":"Vamos a comenzar agregando algún texto.","Made with Mozilla Webmaker":"Hecho con Mozilla Webmaker","Menu":"Menú","Color":"Color","How To":"Cómo","Title Text Color":"Color del título del texto"},"fi":{"Show this app in the Discover Gallery":"Näytä tämä sovellus Discover-galleriassa","Single Line Text":"Yhden rivin teksti","Newest":"Uusin","No data has been stored yet!":"Mitään tietoja ei ole vielä tallennettu!","Add a Brick":"Lisää rakennusväline","Featured":"Suositellut","My App":"Sovellukseni","Separator":"Erotin","You haven't created any apps yet.":"Et ole luonut sovelluksia - vielä.","Guest Explanation":"Vieraat voivat luoda, mutta eivät julkaista sovelluksia.","Send SMS":"Lähetä tekstiviesti","Publishing...":"Julkaistaan...","Open":"Avaa","Create":"Luo","My Profile":"Profiilini","An active connection is needed to display the Discover Gallery":"Discover-gallerian näyttämiseksi tarvitaan yhteys internetiin","Start Building":"Aloita rakentaminen","No Data available":"Tietoja ei ole saatavilla","Business":"Liiketoiminta","Get Started":"Aloita","Delete App":"Poista sovellus","Share Community News":"Jaa yhteisön uutiset","Choose Contacts":"Valitse yhteystiedot","Back to My Apps":"Takaisin sovellukseeni","Join Webmaker":"Liity Webmakeriin","Preview":"Esikatselu","URL":"Verkko-osoite","Text Color":"Tekstiväri","Minimum Number":"Pienin numero","Increment by":"Askelmäärä","Head over to Make to start creating your very own app.":"Mene <strong>Luo</strong>-kohtaan aloittaaksesi oman sovelluksesi luomisen.","Maximum Number":"Suurin numero","Image":"Kuva","Sign In":"Kirjaudu sisään","Safety":"Turvallisuus","Discover":"Tutki","errorAppNotFound":"Valitettavasti sovellusta ei löytynyt. Palataanko <a href='/profile'>profiiliisi</a>?","Name":"Nimi","Are you sure you want to delete this magnificent creation":"Oletko varma, että haluat poistaa tämän upean luomuksen?","The Internet fell asleep!":"Internet-yhteys hävisi!","noDataInfoSub":"Jos haluat antaa käyttäjien jakaa tietoja kanssasi, kokeile lisätä laskin ja Lähetä-painike sovellukseesi.","Title":"Otsikko","Choosing this option will allow you to create your own app without a preset template.":"Tällä valinnalla voit luoda oman sovelluksesi ilman mallipohjaa.","Share App":"Jaa sovellus","Done":"Valmis","You need to connect to the Internet.":"Sinun pitää yhdistää internetiin.","This action cannot be undone":"Tätä toimintoa ei voi perua.","Delete":"Poista","Phone":"Puhelin","Initial Number":"Alustava numero","Share Via":"Jaa kohteeseen","SMS":"Tekstiviesti","Gather information from your users by creating a survey.":"Kerää tietoja käyttäjistäsi luomalla kyselyn.","Create a Blog":"Luo blogi","App Data":"Sovelluksen tiedot","Source":"Lähde","Long Text":"Pitkä teksti","I am some text":"Tässä on tekstiä","share_message":"Käy katsomassa sovellusta, jonka tein Mozilla Webmakerilla","Make and share the web":"Luo ja jaa verkossa","Blogger":"Bloggaaja","My {{template}} App":"Minun {{template}} -sovellukseni","Counter":"Laskin","Create a Survey":"Luo kysely","Add to Homescreen":"Lisää kotinäytölle","Button Color":"Painikeväri","name from location":"<strong>{{name}}</strong><span v-if=\"location\"><br/> kohteesta <br/></span><strong>{{location}}</strong>","Select all":"Valitse kaikki","Tap the plus sign to begin adding content.":"Napauta plusmerkkiä sisällön lisäämisen aloittamiseksi.","Add contacts":"Lisää yhteystietoja","Teacher":"Opettaja","Start from Scratch":"Alku puhtaalta pöydältä","Remix App":"Remiksaa sovellus","Offline Mode Explanation":"Tämä laite ei ole yhteydessä internetiin, joten et voi julkaista sovelluksia.","Message":"Viesti","Share photos and write articles and about your local community":"Jaa valokuvia ja kirjoita artikkeleita paikallisesta yhteisöstäsi","noContactsError":"Tekstiviestin lähettämiseksi valitse yksi tai useampi yhteystieto.","Open App":"Avaa sovellus","by _":"luonut {{name}}","Make an App":"Luo sovellus","Sign Out":"Kirjaudu ulos","Delete my Apps":"Poista sovellukseni","App Name":"Sovelluksen nimi","Journalist":"Journalisti","Show in Discover Gallery":"Näytä Discover-galleriassa","Text Value":"Tekstiarvo","My Apps":"Sovellukseni","Tap the plus sign to add more content.":"Napauta plusmerkkiä lisätäksesi sisältöä.","Cancel":"Peruuta","Try in Offline Mode":"Kokeile yhteydettömässä tilassa","Guest":"Vieras","Try as Guest":"Kokeile vieraana","Text Box Type":"Tekstilaatikkotyyppi","No Apps Message":"Sinulla ei ole vielä sovelluksia.","Data":"Tiedot","errorNoText":"Sinun on lisättävä tekstiarvo","Select Color":"Valitse väri","Edit":"Muokkaa","Phone #":"Puhelinnumero","Link Text":"Linkin teksti","Save":"Tallenna","Create a Safety App":"Luo turvallisuussovellus","Publish":"Julkaise","errorDefault":"Hups! Havaittiin virhe. Palataanko <a href='/profile'>profiiliisi</a>?","Button Text":"Painiketeksti","Label":"Nimi","Create a How To Guide":"Luo opas","Submit":"Lähetä","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Onko sinulla jaettavaa maailman kanssa? Luo blogi, tee siitä omanlaisesi ja aloita kirjoittaminen!","Edit my Profile":"Muokkaa profiiliani","Font Size":"Kirjasinkoko","Make":"Luomukset","Open my app":"Avaa sovellukseni","Place call":"Soita puhelu","If you've got unique skills you'd like to share with others, try making a How To guide.":"Jos sinulla on erityisiä kykyjä, joita haluaisit opettaa myös muille, kokeile oppaan luomista.","Add a map, a emergency call button, and other tips to keep safe in your community":"Lisää kartta, hätäpuhelupainike ja muita vinkkejä pysyäksesi turvassa yhteisössäsi","App":"Sovellus","Make Your Own App":"Luo oma sovelluksesi","Text Box":"Tekstilaatikko","App Name & Icon":"Sovelluksen nimi ja kuvake","Make your own app at":"Tee oma sovelluksesi osoitteessa","Share":"Jaa","Promote your Business":"Mainosta liiketoimintaasi","Show off your products and give customers an easy way to reach you.":"Esittele tuotteitasi ja auta asiakkaitasi tavoittamaan sinut.","same as minimum number":"sama kuin vähimmäisarvo","Text":"Teksti","Link":"Linkki","From Scratch":"Puhtaalta pöydältä","error404":"Valitettavasti sivua ei löytynyt. Haluatko <a href='/sign-in'>palata alkuun</a>?","toucanspeak":"Aloitetaan lisäämällä jotain tekstiä.","Made with Mozilla Webmaker":"Tehty Mozilla Webmakerilla","Menu":"Valikko","Color":"Väri","How To":"Ohje","Title Text Color":"Otsikon tekstiväri"},"fr":{"Show this app in the Discover Gallery":"Montrer cet application dans la galerie des applis à découvrir","Single Line Text":"Texte d'une ligne","Newest":"Plus récent","No data has been stored yet!":"Aucune donnée n'est encore enregistrée!","Add a Brick":"Ajouter une brique","Featured":"Sélectionnée","My App":"Mon appli","Separator":"Séparateur","You haven't created any apps yet.":"Vous n'avez pas encore créé d'application.","Guest Explanation":"Les invités peuvent développer des applications, mais ne peuvent pas les publier.","Send SMS":"Envoyer SMS","Publishing...":"Publication en cours...","Open":"Ouvrir","Create":"Créer","My Profile":"Mon profil","An active connection is needed to display the Discover Gallery":"Une connexion internet active est nécessaire pour afficher la galerie d'applications","Start Building":"Commencer à créer","No Data available":"Aucune donnée disponible","Business":"Affaires","Get Started":"Commencer","Delete App":"Effacer l'application","Share Community News":"Partager vos actualités avec la Communauté","Choose Contacts":"Choisir les contacts.","Back to My Apps":"Retourner a Mes applications","Join Webmaker":"Rejoignez Webmaker","Preview":"Aperçu","URL":"URL","Text Color":"Couleur du texte","Minimum Number":"Nombre minimum","Increment by":"Augmenter de","Head over to Make to start creating your very own app.":"Rendez-vous sur<strong>Faire</strong> pour commencer à créer votre propre application.","Maximum Number":"Nombre maximum","Image":"Image","Sign In":"Connexion","Safety":"Sécurité","Discover":"Explorer","errorAppNotFound":"Désolé, l'application est introuvable. Souhaitez-vous revenir à votre <a href='/profile'>profil</a>?","Name":"Nom","Are you sure you want to delete this magnificent creation":"Voulez-vous vraiment supprimer cette création magnifique?","The Internet fell asleep!":"Internet semble endormi!","noDataInfoSub":"Si vous désirez que les utilisateurs puissent partager des données avec vous, ajoutez à votre application un bouton Réponse et un bouton Soumettre.","Title":"Titre","Choosing this option will allow you to create your own app without a preset template.":"Choisir cette option vous permettra de créer votre propre application sans modèle prédéfini.","Share App":"Partager l'application","Done":"Terminé","You need to connect to the Internet.":"Connectez-vous à Internet","This action cannot be undone":"Vous ne pourrez pas revenir sur cette action.","Delete":"Supprimer","Phone":"Téléphone","Initial Number":"Nombre initial","Share Via":"Partager via","SMS":"SMS","Gather information from your users by creating a survey.":"Récolter des informations de vos utilisateurs en créant un sondage.","Create a Blog":"Créer un Blog","App Data":"Données de l'application","Source":"Source","Long Text":"Texte long","I am some text":"Un peu de texte","share_message":"Venez voir l'application que j'ai créée avec Mozilla Webmaker","Make and share the web":"Créez &amp; partagez le Web","Blogger":"Blogueur","My {{template}} App":"Mon application d'après le modèle {{template}} ","Counter":"Compteur","Create a Survey":"Créer un sondage","Add to Homescreen":"Ajouter à l'écran d'accueil","Button Color":"Couleur de bouton","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Tout sélectionner","Tap the plus sign to begin adding content.":"Touchez le signe plus pour commencer à ajouter du contenu","Add contacts":"Ajouter des contacts","Teacher":"Enseignant","Start from Scratch":"Démarrer à zéro","Remix App":"Remixer l'application","Offline Mode Explanation":"Cet appareil n'étant pas connecté à internet, vous ne pourrez pas publier d'application.","Message":"Message","Share photos and write articles and about your local community":"Partagez des photos et écrivez des articles en rapport avec votre communauté locale","noContactsError":"Pour envoyer un SMS, veuillez choisir au moins un contact.","Open App":"Ouvrir l'application","by _":"par {{name}}","Make an App":"Créer une Appli","Sign Out":"Déconnexion","Delete my Apps":"Supprimer mes Applis","App Name":"Nom de l'application","Journalist":"Journaliste","Show in Discover Gallery":"Présenter dans la galerie d'applications","Text Value":"Texte","My Apps":"Mes Applis","Tap the plus sign to add more content.":"Touchez le signe plus pour ajouter du contenu","Cancel":"Annuler","Try in Offline Mode":"Essayer en mode hors ligne","Guest":"Invité","Try as Guest":"Essayer en tant qu'Invité","Text Box Type":"Type de champ texte","No Apps Message":"Vous n'avez aucune application.","Data":"Données","errorNoText":"Vous devez inclure du texte","Select Color":"Sélectionner une couleur","Edit":"Modifier","Phone #":"N° de téléphone","Link Text":"Texte du lien","Save":"Enregistrer","Create a Safety App":"Créer une application d'urgence","Publish":"Publier","errorDefault":"Oups ! Une erreur s'est produite. Souhaitez-vous revenir à votre <a href='/profile'>profil</a>?","Button Text":"Couleur de texte","Label":"Intitulé","Create a How To Guide":"Créer un guide pratique","Submit":"Envoyer","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Vous avez quelque chose à partager avec le monde ? Lancez un blog, personnalisez-le afin de le faire à votre image et commencez à écrire!","Edit my Profile":"Modifier mon profil","Font Size":"Taille de la police","Make":"Créer","Open my app":"Ouvrir mon application","Place call":"Passer un appel","If you've got unique skills you'd like to share with others, try making a How To guide.":"Si vous avez des compétences particulières que vous désirez partager avec d'autres, essayez de réaliser un guide.","Add a map, a emergency call button, and other tips to keep safe in your community":"Ajoutez une carte, un bouton d'appel d'urgence, et d'autres conseils pour préserver la sécurité de la communauté.","App":"Application","Make Your Own App":"Créez votre propre appli","Text Box":"Boîte de dialogue.","App Name & Icon":"Nom et icône de l'application","Make your own app at":"Créez votre propre application avec","Share":"Partager","Promote your Business":"Promouvoir votre entreprise","Show off your products and give customers an easy way to reach you.":"Affichez vos produits et offrez aux clients un moyen facile de vous contacter.","same as minimum number":"identique au nombre minimum","Text":"Texte","Link":"Lien","From Scratch":"Démarrer de zéro","error404":"Désolé, la page demandée n'a pas pu être trouvée. Souhaitez vous <a href='/sign-in'>revenir à l'accueil</a>?","toucanspeak":"Commençons en ajoutant du contenu","Made with Mozilla Webmaker":"Créé avec Mozilla Webmaker","Menu":"Menu","Color":"Couleur","How To":"Tutoriel","Title Text Color":"Couleur de titre"},"hi-IN":{"Show this app in the Discover Gallery":"इस अनुप्रयोग को गैलरी खोज में दिखाएँ","Single Line Text":"एक पंक्ति पाठ ","Newest":"नवीनतम","No data has been stored yet!":"कोई आंकड़े अभी तक संग्रह नही किया गया !","Add a Brick":"एक ईंट जोड़ें |","Featured":"विशेष रुप से प्रदर्शित किया गया","My App":"मेरा अनुप्रयोग","Separator":"विभाजक","You haven't created any apps yet.":"आपने अभी तक कोई अनुप्रयोग नही बनाया है","Guest Explanation":"अतिथि निर्माण कर सकते हैं , लेकिन प्रकाशित नहीं कर सकते।","Send SMS":"SMS भेजें ","Publishing...":"प्रकाशित किया जा रहा","Open":"खोलें ","Create":"बनायें ","My Profile":"मेरा प्रोफाइल","An active connection is needed to display the Discover Gallery":"एक सक्रिय संबंध की जरूरत है डिस्कवर गैलरी को दिखाने के लिए","Start Building":"बनाना शुरू करे ","No Data available":"कोई डेटा उपलब्ध नहीं","Business":"कारोबार ","Get Started":"शुरुआत करो","Delete App":"एप्लिकेशन को मिटाना","Share Community News":"समूह के ख़बर को बाँटे |","Choose Contacts":"संबंध चुने","Back to My Apps":"मेरे अनुप्रयोग पर वापस जाएँ","Join Webmaker":"Webmaker से जुड़े|","Preview":"पूर्वावलोकन","URL":"URL","Text Color":"पाठ रंग ","Minimum Number":"न्यूनतम नम्बर","Increment by":"से बढ़ाये ","Head over to Make to start creating your very own app.":"आपके बेहद अपने अनुप्रयोग को बनाने की शुरुआत के लिए  <strong>Make</strong>को दे","Maximum Number":"अधिकतम नम्बर","Image":"चित्र ","Sign In":"साइन इन","Safety":"सुरक्षा ","Discover":"खोजना","errorAppNotFound":"क्षमा करें, इस एप्लिकेशन को नहीं पाया गया | वापस अपने <a href='/profile'>प्रोफ़ाइल</a> मेंं जाएँ |","Name":"नाम","Are you sure you want to delete this magnificent creation":"क्या आपको यकीन है की आप इस शानदार रचना को रद्द करना चाहतें हैं","The Internet fell asleep!":"सोया हुआ इंटरनेट ","noDataInfoSub":"अगर आप चाहतें है की उपभोक्ता आंकडें आपके साथ साझा करें,एक गणक और सबमिट बटन को अपने अनुप्रयोग के साथ जोड़ने की कोशिश करें","Title":"टाइटल","Choosing this option will allow you to create your own app without a preset template.":"इस विकल्प को चुने और अपना खुद का एप्लीकेशन बनाएँ बिना किसी पूर्व नमूने के |","Share App":"अनुप्रयोग साझा करें","Done":"होगया ","You need to connect to the Internet.":"आपको इंटरनेट से जुड़ने की जरूरत है","This action cannot be undone":"इस क्रिया को पूर्ववत नहीं किया जा सकता है।","Delete":"हटाना","Phone":"फ़ोन ","Initial Number":"प्रारंभिक संख्या","Share Via":"के द्वारा साझा करें","SMS":"एस एम एस ","Gather information from your users by creating a survey.":"अपने उपभोक्ताओं से सूचनाएं जुटाएँ एक सर्वेक्षण तैयार कर के","Create a Blog":"एक ब्लॉग बनाएँ |","App Data":"अनुप्रयोग आकड़ें","Source":"स्त्रोत ","Long Text":"लम्बा टेक्स्ट ","I am some text":"कुछ  पाठ","share_message":"अनुप्रयोग जांचे जो मैंने Mozilla Webmaker के साथ बनाया है","Make and share the web":"Make & वेब साझा करें |","Blogger":"चिट्ठाकार","My {{template}} App":"मेरा {{template}} एप्लीकेशन |","Counter":"गणक ","Create a Survey":"एक सर्वेक्षण बनाए","Add to Homescreen":"होमस्क्रीन में जोड़ें","Button Color":"बटन रंग","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> from <br/></span><strong>{{location}}</strong>","Select all":"सभी चयन करें","Tap the plus sign to begin adding content.":"जोड़ निशान दबा कर विषय वस्तु जोड़ना शुरू करें","Add contacts":"संबंध जोड़ें","Teacher":"शिक्षक","Start from Scratch":"शुरू से शुरुआत करें |","Remix App":"अनुप्रयोग रीमिक्स","Offline Mode Explanation":"यह यंत्र इंटरनेट से जुड़ा नहीं है, तो आप किसी भी एप्लीकेशन को प्रकाशित करने में सक्षम नहीं हैं ।","Message":"संदेश","Share photos and write articles and about your local community":"फ़ोटो साझा करें और लेख लिखें और अपने स्थानीय समूह के बारे में |","noContactsError":"सन्देश भेजने के लिए एक या ज्यादा संपर्क चुने ","Open App":"एप्लिकेशन खोलो","by _":"द्वारा {{name}}","Make an App":"एक एप्लीकेशन बनायें ","Sign Out":"साइन आउट","Delete my Apps":"मेरे एप्लीकेशनस मिटायें ","App Name":"अनुप्रयोग नाम","Journalist":"पत्रकार","Show in Discover Gallery":"गैलरी खोज में दिखाएँ","Text Value":"लेबल","My Apps":"मेरे एप्लीकेशनस ","Tap the plus sign to add more content.":"जोड़ निशान दबाकर ज्यादा विषय वस्तुओं को जोड़ें","Cancel":"रद्द करना ","Try in Offline Mode":"ऑफलाइन विधि में प्रयास करें|","Guest":"अतिथि ","Try as Guest":"अतिथि के रूप में कोशिश करें|","Text Box Type":"बॉक्स प्रकार मूलपाठ","No Apps Message":"आपका अभी तक ऐक भी एप्लीकेशन नहीं है|","Data":" आँकड़े","errorNoText":"आप एक मूलपाठ शामिल करें |","Select Color":"कलर चुनो ","Edit":"संपादित करें","Phone #":" फ़ोन #","Link Text":"पत्र जोडो","Save":"सहेजें","Create a Safety App":"एक सुरक्षित एप्लीकेशन बनाएँ  |","Publish":"प्रकाशित करना","errorDefault":"ओह! वहाँ एक ग़लती थी | वापस अपने <a href='/profile'>प्रोफ़ाइल</a> मेंं जाएँ |","Button Text":"बटन पाठ","Label":"लेबल","Create a How To Guide":" मार्गदर्शक करने के लिए एक बनाएँ।","Submit":"सबमिट करें","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"दुनिया के साथ बाँटने  के लिए कुछ है?  एक ब्लॉग शुरू करें , रूचि के अनुसार अपना बनाएँ और लिखें |","Edit my Profile":"मेरी प्रोफ़ाइल संपादित करें|","Font Size":"फ़ॉन्ट का आकार","Make":"बनाये","Open my app":"मेरे अनुप्रयोग खोलें","Place call":" कॉल स्तिथ करें ","If you've got unique skills you'd like to share with others, try making a How To guide.":"अगर आपमें अनोखा कला है तो उसे दूसरों के साथ बाँटे , और दूसरों के लिए मार्गदर्शक बनाने की कोशिश करें |","Add a map, a emergency call button, and other tips to keep safe in your community":"अपने समूह को सुरक्षित रखने के लिए एक नक्शा, एक आपातकालीन कॉल बटन, और अन्य सुझाव जोड़ें |","App":"एप्लिकेशन","Make Your Own App":" अपना खुद का एप्लीकेशन बनाएँ  |","Text Box":"टेक्स्ट बॉक्स","App Name & Icon":"एप्लीकेशन का नाम और चित्र |","Make your own app at":"पर अपने अनुप्रयोग बनाएँ","Share":"साझा करें","Promote your Business":"अपने व्यवसाय को बढ़ावा दें |","Show off your products and give customers an easy way to reach you.":"अपने उत्पादों को दिखाएँ और ग्राहकों को आप तक पहुंचने के लिए एक आसान रास्ता दें।","same as minimum number":"न्यूनतम संख्या जितना","Text":"पाठ","Link":"लिंक","From Scratch":" खरोंच से ","error404":"क्षमा करें, हमें यह पृष्ठ नहीं मिल सका | क्या आप वापस जाकर  <a href='/sign-in'> शुरू करना चाहेगें ?","toucanspeak":"शुरुआत करें कुछ शब्दों को जोड़ कर","Made with Mozilla Webmaker":"Mozilla Webmaker के साथ बनाया गया","Menu":"मेन्यू","Color":"रंग","How To":"कैसे करने के लिए","Title Text Color":"शीर्षक पाठ का रंग"},"id":{"Show this app in the Discover Gallery":"Tampilkan app ini di Discover Gallery","Single Line Text":"Satu Baris Teks","Newest":"Teranyar","No data has been stored yet!":"No data has been stored yet!","Add a Brick":"Tambahkan Bata","Featured":"Unggulan","My App":"Aplikasi Saya","Separator":"Pemisah","You haven't created any apps yet.":"You haven't created any apps...yet.","Guest Explanation":"Tamu dapat membuat, tapi tidak mempublikasikan aplikasi.","Send SMS":"Kirim SMS","Publishing...":"Menerbitkan...","Open":"Buka","Create":"Ciptakan","My Profile":"Profil Saya","An active connection is needed to display the Discover Gallery":"An active connection is needed to display the Discover Gallery","Start Building":"Mulai Membangun","No Data available":"Tiada data yang tersedia","Business":"Bisnis","Get Started":"Mulai","Delete App":"Hapus Aplikasi","Share Community News":"Bagikan Berita Komunitas","Choose Contacts":"Choose Contacts","Back to My Apps":"Kembali ke Apps Saya","Join Webmaker":"Bergabung dengan Webmaker","Preview":"Pratinjau","URL":"URL","Text Color":"Warna Teks","Minimum Number":"Angka Minimal","Increment by":"Bertambah per","Head over to Make to start creating your very own app.":"Head over to <strong>Make</strong> to start creating your very own app.","Maximum Number":"Angka Maksimum","Image":"Gambar","Sign In":"Masuk","Safety":"Keselamatan","Discover":"Jajaki","errorAppNotFound":"Maaf, aplikasi ini tidak ditemukan. Kembali ke <a href='/profile'>profil</a> Anda?","Name":"Nama","Are you sure you want to delete this magnificent creation":"Yakin ingin menghapus karya luar biasa ini?","The Internet fell asleep!":"The Internet fell asleep!","noDataInfoSub":"If you'd like to let users share data with you, try adding a Counter and a Submit button to your app.","Title":"Judul","Choosing this option will allow you to create your own app without a preset template.":"Memilih opsi ini akan memungkinkan Anda untuk membuat aplikasi Anda sendiri tanpa menggunakan kerangka yang telah ditetapkan.","Share App":"Bagikan App","Done":"Selesai","You need to connect to the Internet.":"You need to connect to the Internet.","This action cannot be undone":"Tindakan ini tidak bisa dibatalkan.","Delete":"Hapus","Phone":"Telepon","Initial Number":"Angka Awal","Share Via":"Share Via","SMS":"SMS","Gather information from your users by creating a survey.":"Kumpulkan informasi dari pengguna dengan membuat survei.","Create a Blog":"Buat Blog","App Data":"App Data","Source":"Sumber","Long Text":"Teks Panjang","I am some text":"I am some text","share_message":"Lihatlan app yang saya buat dengan Mozilla Webmaker","Make and share the web":"Buat &amp; berbagi dengan web","Blogger":"Blogger","My {{template}} App":"Aplikasi {{template}} Saya","Counter":"Penghitung","Create a Survey":"Buat Survei","Add to Homescreen":"Tambahkan ke Layar Utama","Button Color":"Warna Tombol","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> dari <br/></span><strong>{{location}}</strong>","Select all":"Pilih semua","Tap the plus sign to begin adding content.":"Tekan tanda plus untuk mulai menambahkan konten.","Add contacts":"Add contacts","Teacher":"Guru","Start from Scratch":"Mulai dari Awal","Remix App":"Remix App","Offline Mode Explanation":"Peranti ini tidak tersambung ke internet, Anda tidak dapat mempublikasikan aplikasi apapun. ","Message":"Pesan","Share photos and write articles and about your local community":"Berbagi foto dan tuliskan artikel tentang komunitas lokal Anda","noContactsError":"Untuk mengirim SMS, pilih satu atau lebih kontak.","Open App":"Buka App","by _":"oleh {{name}}","Make an App":"Buat Aplikasi","Sign Out":"Keluar","Delete my Apps":"Hapus Aplikasi saya","App Name":"App Name","Journalist":"Jurnalis","Show in Discover Gallery":"Show in Discover Gallery","Text Value":"Nilai Text","My Apps":"Aplikasi Saya","Tap the plus sign to add more content.":"Tekan tanda plus untuk menambahkan lebih banyak konten.","Cancel":"Batal","Try in Offline Mode":"Cobalah dalam Mode Luring","Guest":"Tamu","Try as Guest":"Coba sebagai Tamu","Text Box Type":"Tipe Kotak Teks","No Apps Message":"Anda belum punya aplikasi.","Data":"Data","errorNoText":"Anda harus sertakan nilai teks","Select Color":"Pilih Warna","Edit":"Edit","Phone #":"Telepon #","Link Text":"Tautan Teks","Save":"Simpan","Create a Safety App":"Buat Aplikasi Keamanan","Publish":"Terbitkan","errorDefault":"Ups! Terjadi galat. Kembali ke <a href='/profile'>profil</a> Anda?","Button Text":"Teks Tombol","Label":"Label","Create a How To Guide":"Buat Panduan Instruksi","Submit":"Kirim","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Memiliki sesuatu untuk dibagikan kepada dunia? Mulai sebuah blog, sesuaikan untuk membuat Anda mulai menulis!","Edit my Profile":"Edit Profil saya","Font Size":"Ukuran Huruf","Make":"Berkarya","Open my app":"Buka app saya","Place call":"Letakkan panggilan","If you've got unique skills you'd like to share with others, try making a How To guide.":"Jika Anda memiliki keterampilan yang unik dan suka berbagi dengan orang lain, cobalah membuat Panduan Instruksi.","Add a map, a emergency call button, and other tips to keep safe in your community":"Tambahkan peta, tombol panggilan darurat, dan tips lainnya untuk menjaga keamanan di komunitas Anda","App":"Aplikasi","Make Your Own App":"Buat Aplikasi Anda Sendiri","Text Box":"Kotak Teks","App Name & Icon":"Nama dan Ikon Aplikasi","Make your own app at":"Buat aplikadi Anda sendiri pada","Share":"Bagikan","Promote your Business":"Promosikan Bisnis Anda","Show off your products and give customers an easy way to reach you.":"Tunjukan produk Anda dan berikan pelanggan sebuah cara yang mudah untuk menghubungi Anda.","same as minimum number":"sama seperti angka minimal","Text":"Teks","Link":"Tautan","From Scratch":"Dari Awal","error404":"Maaf, kami tidak menemukan laman ini. Apakah anda ingin <a href='/sign-in'>kembali ke awal</a>?","toucanspeak":"Ayo mulai dengan menambahkan beberapa teks.","Made with Mozilla Webmaker":"Dibuat dengan Mozilla Webmaker","Menu":"Menu","Color":"Warna","How To":"Instruksi","Title Text Color":"Warna Teks Judul"},"nl":{"Show this app in the Discover Gallery":"Toon deze app in de Discover Gallery","Single Line Text":"Enkele regel tekst","Newest":"Nieuwste","No data has been stored yet!":"Er zijn nog geen gegevens opgeslagen!","Add a Brick":"Een bouwsteen toevoegen","Featured":"Op de voorgrond","My App":"Mijn app","Separator":"Scheidingsteken","You haven't created any apps yet.":"U hebt geen apps gemaakt… nog niet.","Guest Explanation":"Gasten kunnen Apps maken, maar niet publiceren.","Send SMS":"Sms versturen","Publishing...":"Publiceren…","Open":"Open","Create":"Maak","My Profile":"Mijn profiel","An active connection is needed to display the Discover Gallery":"Er is een actieve verbinding nodig om de Ontdekkingsgalerij weer te geven","Start Building":"Start met maken","No Data available":"Geen gegevens beschikbaar","Business":"Zakelijk","Get Started":"Begin nu","Delete App":"Verwijder de App","Share Community News":"Deel nieuws van de gemeenschap","Choose Contacts":"Contactpersonen kiezen","Back to My Apps":"Terug naar mijn Apps","Join Webmaker":"Inschrijven bij Webmaker","Preview":"Voorbeeld","URL":"URL","Text Color":"Tekstkleur","Minimum Number":"Minimale getal","Increment by":"Verhogen met","Head over to Make to start creating your very own app.":"Ga naar <strong>Creëren</strong> om te beginnen met het maken van uw eigen app.","Maximum Number":"Maximale getal","Image":"Afbeelding","Sign In":"Log In","Safety":"Veiligheid","Discover":"Ontdekken","errorAppNotFound":"Sorry, deze App is niet gevonden. Ga terug naar uw <a href='/profile'>profiel</a>?","Name":"Naam","Are you sure you want to delete this magnificent creation":"Weet u zeker dat u deze fantastische creatie wilt verwijderen?","The Internet fell asleep!":"Het internet is in slaap gevallen!","noDataInfoSub":"Als u gebruikers gegevens met u wilt laten delen, probeer dan een teller en een knop Indienen aan uw app toe te voegen.","Title":"Titel","Choosing this option will allow you to create your own app without a preset template.":"Met deze optie kunt u uw eigen app maken zonder een sjabloon.","Share App":"App delen","Done":"Klaar","You need to connect to the Internet.":"U dient verbinding met het internet te maken.","This action cannot be undone":"Deze actie kan niet ongedaan gemaakt worden.","Delete":"Verwijderen","Phone":"Telefoon","Initial Number":"Startgetal","Share Via":"Delen via","SMS":"sms","Gather information from your users by creating a survey.":"Verzamel informatie van uw gebruikers door een enquête te maken.","Create a Blog":"Maak een blog","App Data":"App-gegevens","Source":"Bron","Long Text":"Lange tekst","I am some text":"Ik ben wat tekst","share_message":"Kijk eens naar deze app die ik gemaakt heb met Mozilla Webmaker","Make and share the web":"Maak &amp; deel het web","Blogger":"Blogger","My {{template}} App":"Mijn {{template}} App","Counter":"Teller","Create a Survey":"Maak een enquête","Add to Homescreen":"Aan startscherm toevoegen","Button Color":"Knopkleur","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> uit <br/></span><strong>{{location}}</strong>","Select all":"Alles selecteren","Tap the plus sign to begin adding content.":"Tik op het plusteken om te beginnen met het toevoegen van inhoud.","Add contacts":"Contactpersonen toevoegen","Teacher":"Leraar","Start from Scratch":"Begin opnieuw","Remix App":"App remixen","Offline Mode Explanation":"Dit apparaat is niet verbonden met het internet, dus u zult geen Apps kunnen publiceren.","Message":"Bericht","Share photos and write articles and about your local community":"Deel foto's en schrijf artikelen over uw lokale gemeenschap","noContactsError":"Kies een of meer contacten om een sms te sturen.","Open App":"App openen","by _":"door {{name}}","Make an App":"Maak een App","Sign Out":"Afmelden","Delete my Apps":"Verwijder mijn Apps","App Name":"App-naam","Journalist":"Journalist","Show in Discover Gallery":"In Ontdekkingsgalerij weergeven","Text Value":"Tekstwaarde","My Apps":"Mijn Apps","Tap the plus sign to add more content.":"Tik op het plusteken om meer inhoud toe te voegen.","Cancel":"Annuleren","Try in Offline Mode":"Probeer in offlinemodus","Guest":"Gast","Try as Guest":"Probeer als een gast","Text Box Type":"Type tekstvak","No Apps Message":"U heeft nog geen apps.","Data":"Gegevens","errorNoText":"U moet een tekstwaarde invullen","Select Color":"Selecteer een kleur","Edit":"Bewerken","Phone #":"Telefoon #","Link Text":"Koppelingstekst","Save":"Opslaan","Create a Safety App":"Maak een veiligheidsapp","Publish":"Publiceren","errorDefault":"Oeps! Er was een fout. Ga terug naar uw <a href='/profile'>profiel</a>?","Button Text":"Knoptekst","Label":"Label","Create a How To Guide":"Maak een handleiding","Submit":"Indienen","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Heeft u de wereld iets te vertellen? Start een blog, pas het aan om het van uzelf te maken en start met schrijven.","Edit my Profile":"Mijn profiel bewerken","Font Size":"Lettergrootte","Make":"Make","Open my app":"Open mijn app","Place call":"Nummer bellen","If you've got unique skills you'd like to share with others, try making a How To guide.":"Als u unieke vaardigheden bezit die u met anderen wilt delen, maak dan eens een handleiding.","Add a map, a emergency call button, and other tips to keep safe in your community":"Voeg een kaart toe, of een knop voor hulpdiensten en andere tips om veilig te blijven in uw gemeenschap","App":"App","Make Your Own App":"Maak uw eigen App","Text Box":"Tekstvak","App Name & Icon":"App-naam & -icoon","Make your own app at":"Maak uw eigen App op","Share":"Delen","Promote your Business":"Promoot uw zaken","Show off your products and give customers an easy way to reach you.":"Toon uw producten en geef klanten een gemakkelijke manier om u te bereiken,","same as minimum number":"gelijk aan minimale getal","Text":"Tekst","Link":"Koppeling:","From Scratch":"Helemaal opnieuw","error404":"Sorry, wij konden deze pagina niet vinden. Zou u <a href='/sign-in'>terug naar het begin</a> willen gaan?","toucanspeak":"Laten we beginnen met wat tekst toe te voegen.","Made with Mozilla Webmaker":"Gemaakt met Mozilla Webmaker","Menu":"Menu","Color":"Kleur","How To":"Hoe","Title Text Color":"Kleur titeltekst"},"pt":{"Show this app in the Discover Gallery":"Mostrar esta app na Galeria de Descobrir","Single Line Text":"Linha de texto","Newest":"O mais novo","No data has been stored yet!":"Não foram armazenados dados até agora!","Add a Brick":"Adicionar um Bloco","Featured":"Característica","My App":"A Minha App","Separator":"Separador","You haven't created any apps yet.":"Ainda não criou quaisquer apps.","Guest Explanation":"Os convidados podem criar, mas não podem publicar as apps","Send SMS":"Enviar SMS","Publishing...":"A publicar...","Open":"Abrir","Create":"Criar","My Profile":"O Meu Perfil","An active connection is needed to display the Discover Gallery":"Uma ligação activa é necessária para apresentar a Discover Gallery","Start Building":"Comece a Criar","No Data available":"Sem Dados disponíveis","Business":"Negócio","Get Started":"Iniciação","Delete App":"Apagar App","Share Community News":"Compartilhar Notícias da Comunidade","Choose Contacts":"Escolher Contactos","Back to My Apps":"Voltar às Minhas Apps","Join Webmaker":"Aderir ao Webmaker","Preview":"Pré-visualizar","URL":"URL","Text Color":"Cor do Texto","Minimum Number":"Número Mínimo","Increment by":"pelo incremento","Head over to Make to start creating your very own app.":"Posicione-se para <strong>criar</strong> para começar a criar seu próprio aplicativo.","Maximum Number":"Número Máximo","Image":"Imagem","Sign In":"Iniciar Sessão","Safety":"Segurança","Discover":"Descubra","errorAppNotFound":"Desculpa, esta aplicação não foi encontrada. Volte para o seu <a href='/profile'>perfil</a>?","Name":"Nome","Are you sure you want to delete this magnificent creation":"Tem certeza de que deseja apagar esta criação magnífica?","The Internet fell asleep!":"A internet ficou adormecida!","noDataInfoSub":"Se desejar que os utilizadores partilhem dados consigo, tente adicionar um contador e submeter o botão para a sua aplicação.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"Escolhendo esta opção irá permitir que você crie seu próprio app sem um modelo predefinido.","Share App":"Compartilhar App","Done":"Concluída","You need to connect to the Internet.":"Precisa de se ligar à Internet.","This action cannot be undone":"Esta ação não pode ser anulada.","Delete":"Apagar","Phone":"Telefone","Initial Number":"Número Inicial","Share Via":"Compartilhar Via","SMS":"SMS","Gather information from your users by creating a survey.":"Obter informação dos seus utilizadores, criando um inquérito.","Create a Blog":"Criar um Blogue","App Data":"Dados da App","Source":"Fonte","Long Text":"Texto Longo","I am some text":"Eu sou algum texto","share_message":"Dá uma vista de olhos na app que eu criei com o Webmaker da Mozilla","Make and share the web":"Crie e compartilhe na Web","Blogger":"Bloguista","My {{template}} App":"A Minha App {{template}}","Counter":"Contador","Create a Survey":"Criar um Inquérito","Add to Homescreen":"Adicionar ao Ecrã Inicial","Button Color":"Cor do Botão","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de<br/></span><strong>{{location}}</strong>","Select all":"Selecionar Tudo","Tap the plus sign to begin adding content.":"Toque no sinal \"+\" para começar a adicionar conteúdo.","Add contacts":"Adicione contactos","Teacher":"Professor","Start from Scratch":"Começar do Início","Remix App":"Remisturar App","Offline Mode Explanation":"Este dispositivo não esta ligado à Internet, e por isso não irá poder publicar as suas aplicações.","Message":"Mensagem","Share photos and write articles and about your local community":"Compartilhe fotos e escreva artigos, e sobre a sua comunidade local","noContactsError":"Para enviar uma SMS, por favor, escolha um ou mais contactos.","Open App":"Abrir App","by _":"por {{name}}","Make an App":"Criar uma APP","Sign Out":"Terminar Sessão","Delete my Apps":"Apagar as minhas Apps","App Name":"Nome da App","Journalist":"Jornalista","Show in Discover Gallery":"Mostra na Galeria de Descobrir","Text Value":"Valor em Texto","My Apps":"As Minhas Apps","Tap the plus sign to add more content.":"Toque no sinal \"+\" para adicionar mais conteúdo.","Cancel":"Cancelar","Try in Offline Mode":"Tente no Modo Desligado da Rede","Guest":"Convidado","Try as Guest":"Testar como Convidado","Text Box Type":"Tipo de Caixa de Texto","No Apps Message":"Ainda não tem quaisquer apps.","Data":"Dados","errorNoText":"Deverá incluir um valor de texto","Select Color":"Selecionar Cor","Edit":"Editar","Phone #":"Telefone #","Link Text":"Texto da Hiperligação","Save":"Guardar","Create a Safety App":"Criar uma App de Segurança","Publish":"Publicar","errorDefault":"Ups! Ocorreu um um erro. Volte para o seu <a href='/profile'>perfil</a>?","Button Text":"Texto do Botão","Label":"Etiqueta","Create a How To Guide":"Criar um Guia de Procedimentos","Submit":"Submeter","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Tem algo para compartilhar com o mundo? Iniciar um blog, personalizar para fazer-lhe o seu e começar a escrever!","Edit my Profile":"Editar o meu Perfil","Font Size":"Tamanho do Tipo de Letra","Make":"Criar","Open my app":"Abrir a minha app","Place call":"Efetuar Chamada","If you've got unique skills you'd like to share with others, try making a How To guide.":"Se você tem habilidades únicas que você gostaria de compartilhar com os outros, tente fazer uma como guia.","Add a map, a emergency call button, and other tips to keep safe in your community":"Adicionar um mapa, um botão de chamada de emergência, e outras dicas para manter a segurança em sua comunidade","App":"App","Make Your Own App":"Crie a Sua Própria App","Text Box":"Caixa de Texto","App Name & Icon":"Nome e Ícone da App","Make your own app at":"Crie a sua própria app em","Share":"Compartilhar","Promote your Business":"Promover o seu Negócio","Show off your products and give customers an easy way to reach you.":"Mostre os seus produtos e mostrar aos clientes uma maneira fácil de chegar até você.","same as minimum number":"número mínimo igual","Text":"Texto","Link":"Hiperligação","From Scratch":"Do Início","error404":"Desculpa, nós nos foi possível encontrar esta página. Gostaria de <a href='/sign-in'>voltar ao inicio</a>?","toucanspeak":"Vamos começar a adicionar algum texto.","Made with Mozilla Webmaker":"Criada com o WebMaker da Mozilla","Menu":"Menu","Color":"Cor","How To":"Como...","Title Text Color":"Título cor do texto"},"pt-BR":{"Show this app in the Discover Gallery":"Mostre este aplicativo na galeria Discover","Single Line Text":"Texto de Linha Simples","Newest":"Mais Recente","No data has been stored yet!":"Nenhum dado foi armazenado ainda!","Add a Brick":"Adicione um Bloco","Featured":"Em Destaque","My App":"Meu aplicativo","Separator":"Separador","You haven't created any apps yet.":"Você não criou nenhum aplicativo...ainda.","Guest Explanation":"Convidados podem construir, mas não publicar apps.","Send SMS":"Enviar SMS","Publishing...":"Publicando...","Open":"Aberto","Create":"Criar","My Profile":"Meu Perfil","An active connection is needed to display the Discover Gallery":"Uma conexão ativa é necessária para exibir a Galeria de Descobrimento","Start Building":"Começar a Construir","No Data available":"Dados não disponíveis","Business":"Negócios","Get Started":"Começar","Delete App":"Remover App","Share Community News":"Compartilhe experiências na comunidade","Choose Contacts":"Escolher contatos","Back to My Apps":"Voltar para Meus Aplicativos ","Join Webmaker":"Entrar no Webmaker","Preview":"Pré-visualizar","URL":"URL","Text Color":"Cor do Texto","Minimum Number":"Número Mínimo","Increment by":"Incremento por","Head over to Make to start creating your very own app.":"Vá para <strong>Fazer</strong> para criar o seu próprio aplicativo.","Maximum Number":"Número Máximo","Image":"Imagem","Sign In":"Entrar","Safety":"Segurança","Discover":"Descubra","errorAppNotFound":"Desculpe, este aplicativo não foi encontrado. Gostaria de retornar para seu  <a href='/profile'>perfil</a>?","Name":"Nome","Are you sure you want to delete this magnificent creation":"Você tem certeza que deseja exclui esta criação magnífica?","The Internet fell asleep!":"A internet não dorme!","noDataInfoSub":"Se você gostaria de deixar usuários compartilhar dados com você, tente adicionar um botão de Contador e de Submeter ao seu aplicativo.","Title":"Título","Choosing this option will allow you to create your own app without a preset template.":"A escolha dessa opção permite que você crie o seu próprio aplicativo sem um modelo predefinido.","Share App":"Compartilhar aplicativo ","Done":"Concluído","You need to connect to the Internet.":"Você precisa estar conectado com a Internet.","This action cannot be undone":"Esta ação não pode ser desfeita","Delete":"Remover","Phone":"Telefone","Initial Number":"Número Inicial","Share Via":"Compartilhe através de","SMS":"SMS","Gather information from your users by creating a survey.":"Junte informação de seus usuários criando uma pesquisa.","Create a Blog":"Criar um Blog","App Data":"Dados do aplicativo","Source":"Fonte","Long Text":"Texto Longo","I am some text":"Eu sou algum texto","share_message":"Confira o aplicativo que eu fiz com o Mozilla Webmaker ","Make and share the web":"Faça &amp; compartilhe a web","Blogger":"Blogueiros","My {{template}} App":"Minha {{template}} app","Counter":"Contador","Create a Survey":"Crie uma Pesquisa","Add to Homescreen":"Adicione para tela inicial","Button Color":"Botão de Cor","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> de <br/></span><strong>{{location}}</strong>","Select all":"Selecionar todos","Tap the plus sign to begin adding content.":"Toque no sinal de mais para começar a adicionar conteúdo.","Add contacts":"Adicionar contatos","Teacher":"Professor","Start from Scratch":"Começando do zero","Remix App":"Remixe um aplicativo","Offline Mode Explanation":"Este dispositivo não esta conectado à internet, então você não poderá publicar aplicativos.","Message":"Mensagem","Share photos and write articles and about your local community":"Compartilhe fotos e escreva artigos sobre a sua comunidade local","noContactsError":"Para enviar um SMS, por favor escolha um ou mais contatos","Open App":"Abrir aplicativo ","by _":"por {{name}}","Make an App":"Criar um aplicativo","Sign Out":"Sair","Delete my Apps":"Excluir meus aplicativos","App Name":"Nome do Aplicativo","Journalist":"Jornalista","Show in Discover Gallery":"Mostrar na Galeria de Descobrimento","Text Value":"Conteúdo de Texto","My Apps":"Meus aplicativos","Tap the plus sign to add more content.":"Toque no sinal de mais para adicionar mais conteúdo","Cancel":"Cancelar","Try in Offline Mode":"Teste em modo offline","Guest":"Convidado","Try as Guest":"Teste como convidado","Text Box Type":"Tipo de Caixa de Texto","No Apps Message":"Você ainda não possui nenhum aplicativo.","Data":"Dados.","errorNoText":"Você deve incluir um valor como texto","Select Color":"Selecione Cor","Edit":"Editar","Phone #":"Número de Telefone","Link Text":"Texto de ligação","Save":"Salvar","Create a Safety App":"Criar uma App de Segurança","Publish":"Publicar","errorDefault":"Oops! Um erro aconteceu. Deseja retornar ao seu <a href='/profile'>perfil</a>?","Button Text":"Botão de Texto","Label":"rótulo","Create a How To Guide":"Criando um guia de ajuda","Submit":"Submeter","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Tem algo para ser compartilhado com o mundo? Inicie um blog, e o personalize para fazer dele seu e começe a escrever!","Edit my Profile":"Editar meu Perfil","Font Size":"Tamanho da Fonte","Make":"Crie","Open my app":"Abrir meu aplicativo ","Place call":"Ligar","If you've got unique skills you'd like to share with others, try making a How To guide.":"Se você tem habilidades únicas que gostaria de compartilhar com os outros, tente fazer um guia de ajuda.","Add a map, a emergency call button, and other tips to keep safe in your community":"Adicione um mapa, juntamente com um botão de chamada de emergência, e outras dicas para manter a segurança em sua comunidade","App":"Aplicativo","Make Your Own App":"Faça você mesmo seu próprio aplicativo.","Text Box":"Caixa de Texto","App Name & Icon":"App nome & icone","Make your own app at":"Faça seu próprio aplicativo em","Share":"Compartilhar","Promote your Business":"Promovendo seus negócios","Show off your products and give customers an easy way to reach you.":"Mostre os seus produtos e dê aos clientes uma maneira fácil de chegar até você.","same as minimum number":"mesmo que número mínimo","Text":"Texto","Link":"Link","From Scratch":"Do começo","error404":"Desculpe, não conseguimos encontrar esta página. Você gostaria de <a href='/sign-in'>retornar a página inicial</a>?","toucanspeak":"Vamos começar adicionando algum texto","Made with Mozilla Webmaker":"Feito com o Mozilla Webmaker","Menu":"Menu","Color":"Cor","How To":"Como ","Title Text Color":"Cor de texto do Título"},"ru":{"Show this app in the Discover Gallery":"Отображать это приложение в Discover Gallery","Single Line Text":"Однострочный текст","Newest":"Последние приложения","No data has been stored yet!":"Нет сохраненных данных!","Add a Brick":"Добавить Кирпич","Featured":"Рекомендуемые","My App":"Моё приложение","Separator":"Разделитель","You haven't created any apps yet.":"Вы еще не создали каких-либо приложений.. пока-что.","Guest Explanation":"Неавторизованные пользователи могут создавать, но не могут опубликовывать свои приложения","Send SMS":"Отправить SMS","Publishing...":"Публикую...","Open":"Открыть","Create":"Создать","My Profile":"Мой профиль","An active connection is needed to display the Discover Gallery":"Необходимо активное соединение для отображения Discover Gallery","Start Building":"Создать приложение","No Data available":"Нет данных","Business":"Для бизнеса","Get Started":"Приступим","Delete App":"Удалить приложение","Share Community News":"Опубликуйте новости сообщества","Choose Contacts":"Выбрать контакты","Back to My Apps":"Назад к моим приложениям","Join Webmaker":"Зарегистрироваться","Preview":"Предпросмотр","URL":"URL","Text Color":"Цвет текста","Minimum Number":"Минимальное значение","Increment by":"Увеличить на","Head over to Make to start creating your very own app.":"Нажмите на <strong>Создать</strong> чтобы начать создание своего собственного приложения.","Maximum Number":"Максимальное значение","Image":"Изображение","Sign In":"Войти","Safety":"Безопасность","Discover":"Исследовать","errorAppNotFound":"Извините, но это приложение не найдено. Перейти к вашему <a href='/profile'>профилю</a>?","Name":"Название","Are you sure you want to delete this magnificent creation":"Вы уверены, что действительно хотите удалить приложение?","The Internet fell asleep!":"Интернет заснул!","noDataInfoSub":"Если вы хотите, чтобы данные пользователи делятся с вами, попробуйте добавить счетчик и кнопку Отправить, чтобы ваше приложение.","Title":"Заголовок","Choosing this option will allow you to create your own app without a preset template.":"Выбор этой опции позволит вам создать своё собственное приложение без использования шаблона","Share App":"Опубликовать приложение","Done":"Выполнено","You need to connect to the Internet.":"Вам необходимо установить соединение с сетью интернет.","This action cannot be undone":"Это действие не может быть отменено.","Delete":"Удалить","Phone":"Телефон","Initial Number":"Первоначальное значение","Share Via":"Поделиться с","SMS":"SMS","Gather information from your users by creating a survey.":"Собирайте информацию о пользователях вашего приложения, создавая опросы.","Create a Blog":"Создать блог","App Data":"Данные приложения","Source":"Ссылка на изображение","Long Text":"Многострочный текст","I am some text":"текст","share_message":"Посмотрите приложение, которое я создал с помощью Mozilla Webmaker","Make and share the web":"Создать и опубликовать","Blogger":"Блоггер","My {{template}} App":"Моё приложение - {{template}} ","Counter":"Счетчик","Create a Survey":"Создать опрос","Add to Homescreen":"Добавить на Домашний Экран","Button Color":"Цвет кнопки","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> из <br/></span><strong>{{location}}</strong>","Select all":"Выбрать всё","Tap the plus sign to begin adding content.":"Нажмите на знак \"+\" чтобы начать добавлять контент","Add contacts":"Добавить контакты","Teacher":"Учитель","Start from Scratch":"Начать с нуля","Remix App":"Переделать приложение","Offline Mode Explanation":"Это устройство не соединено с интернетом, поэтому вы не можете публиковать приложения","Message":"Сообщение","Share photos and write articles and about your local community":"Опубликуйте фото и напиши статьи о вашем сообществе","noContactsError":"Чтобы отправить SMS, пожалуйста выберите один или более контактов.","Open App":"Открыть приложение","by _":"автор: {{name}}","Make an App":"Создать приложение","Sign Out":"Выйти","Delete my Apps":"Удалить мои приложения","App Name":"Название приложения","Journalist":"Журналист","Show in Discover Gallery":"Отображать это приложение в Discover Gallery","Text Value":"Текстовое значение","My Apps":"Мои приложения","Tap the plus sign to add more content.":"Нажмите на знак \"+\", чтобы добавить еще контент.","Cancel":"Отмена","Try in Offline Mode":"Попробовать в оффлайн режиме","Guest":"Гость","Try as Guest":"Войти без авторизации","Text Box Type":"Текстовый блок","No Apps Message":"У вас пока еще нет приложений","Data":"Данные","errorNoText":"Вы должны заполнить текстовое поле","Select Color":"Выбрать цвет","Edit":"Редактировать","Phone #":"Номер телефона","Link Text":"Ссылка","Save":"Сохранить","Create a Safety App":"Создать безопасное приложение","Publish":"Опубликовать","errorDefault":"Произошла ошибка. Вернуться к вашему <a href='/profile'>профилю</a>?","Button Text":"Надпись на кнопке","Label":"Подпись","Create a How To Guide":"Создайте пошаговое руководство","Submit":"Отправить","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"У вас есть то, о чем бы вы хотели рассказать всему миру? Начните вести собственный блог, настроив его согласно вашим предпочтениям.","Edit my Profile":"Редактировать мой профиль","Font Size":"Размер шрифта","Make":"Сделай","Open my app":"Открыть мое приложение","Place call":"Сделать звонок","If you've got unique skills you'd like to share with others, try making a How To guide.":"Если у вас имеется уникальный опыт, которым вы бы хотели поделиться с другими, попробуйте создать пошаговое руководство.","Add a map, a emergency call button, and other tips to keep safe in your community":"Добавить карту, кнопку обратной связи и другие советы, как обеспечить безопасность в вашем сообществе","App":"Приложение","Make Your Own App":"Создайте своё собственное приложение","Text Box":"Текстовый блок","App Name & Icon":"Название приложения и значок","Make your own app at":"Создайте ваше собственное приложение","Share":"Поделиться","Promote your Business":"Расскажите о своем бизнесе","Show off your products and give customers an easy way to reach you.":"Продемонстрируйте ваши продукты и предоставьте клиентам легкий способ связаться с вами","same as minimum number":"такое же как минимальное значение","Text":"Текст","Link":"Ссылка","From Scratch":"С нуля","error404":"Простите, но нам не удалось найти эту страницу. Хотите <a href='/sign-in'>вернуться к началу</a>?","toucanspeak":"Начните с добавления текстового содержимого","Made with Mozilla Webmaker":"Создано при помощи Mozilla Webmaker","Menu":"Меню","Color":"Цвет","How To":"Инструкция","Title Text Color":"Цвет текста заголовка"},"sq":{"Show this app in the Discover Gallery":"Shfaqeni këtë aplikacion në Galerinë e Zbulimit","Single Line Text":"Tekst me Një Rresht","Newest":"Më të fundit","No data has been stored yet!":"Ende s'janë vendosur të dhëna","Add a Brick":"Shtoni një Tullë","Featured":"I dalluar","My App":"Aplikacioni Im","Separator":"Ndarësi","You haven't created any apps yet.":"S'keni krijuar ende... asnjë aplikacion.","Guest Explanation":"Vizitorët mund të ndërtojnë, por jo të publikojnë aplikacione.","Send SMS":"Dërgoni SMS","Publishing...":"Duke u botuar...","Open":"Hapeni","Create":"Krijojeni","My Profile":"Profili im","An active connection is needed to display the Discover Gallery":"Një lidhje aktive nevojitet për të shfaqur Galerinë e Zbulimeve","Start Building":"Nisjani Ndërtimit","No Data available":"S'ka të Dhëna në dispozicion","Business":"Biznes","Get Started":"Nisjani","Delete App":"Hiqeni Aplikacionin","Share Community News":"Bashkëndani të Rejat e Bashkësisë","Choose Contacts":"Përzgjidhni Kontaktet","Back to My Apps":"Kthehuni tek Aplikacionet e Mia","Join Webmaker":"Bashkojuni Webmaker-it","Preview":"Parakëqyreni","URL":"URL","Text Color":"Ngjyra e Tekstit","Minimum Number":"Numri Minimal","Increment by":"Shtojeni me","Head over to Make to start creating your very own app.":"Vraponi tek <strong>Bërja</strong>, që të nisni të krijoni një aplikacionin vërtet tuajin.","Maximum Number":"Numri Maksimal","Image":"Imazh","Sign In":"Hyni","Safety":"Siguri","Discover":"Zbuloni","errorAppNotFound":"Kërkojmë ndjesë, ky aplikacion s'u gjet. Do ktheheni tek <a href='/profile'>profili</a> juaj?","Name":"Emri","Are you sure you want to delete this magnificent creation":"Vërtet dëshironi ta hiqni këtë krijim të mrekullueshëm?","The Internet fell asleep!":"Interneti u përgjum","noDataInfoSub":"Nëse dëshironi t'i lejoni përdoruesit që të bashkëndajnë të dhëna me ju, përpiquni të shtoni një butonin \"Përllogaritës\" dhe atë \"Paraqitni\" në aplikacioni tuaj.","Title":"Titulli","Choosing this option will allow you to create your own app without a preset template.":"Përzgjedhja e këtij opsioni do t'ju lejojë të krijoni aplikacionin tuaj, pa ndonjë shabllon të paravendosur","Share App":"Bashkëndajeni aplikacionin","Done":"U bë","You need to connect to the Internet.":"Duhet të lidheni në internet","This action cannot be undone":"Ky veprim s'mund të zhbëhet","Delete":"Hiqeni","Phone":"Telefon","Initial Number":"Numri Fillestar","Share Via":"Bashkëndani Përmes","SMS":"SMS","Gather information from your users by creating a survey.":"Mblidhni informacion nga përdoruesit tuaj, përmes krijimit të një sondazhi.","Create a Blog":"Krijoni një Blog","App Data":"Të Dhënat e Aplikacionit","Source":"Burim","Long Text":"Tekst i Gjatë","I am some text":"Jam një tekst","share_message":"Shikoni aplikacionin që bëra me Mozilla Webmaker","Make and share the web":"Bëjeni dhe bashkëndajeni web-in","Blogger":"Bloger","My {{template}} App":"Aplikacioni im {{template}}","Counter":"Përllogaritës","Create a Survey":"Krijoni një Sondazh","Add to Homescreen":"Shtojeni tek Kryefaqja","Button Color":"Ngjyra e Butonit","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> nga <br/></span><strong>{{location}}</strong>","Select all":"Përzgjidhi gjithçka","Tap the plus sign to begin adding content.":"Trokitni mbi shenjën plus që të nisni shtimin e përmbajtjes.","Add contacts":"Shtoni kontakte","Teacher":"Mësues","Start from Scratch":"Nisjani nga Fillimi","Remix App":"Ripërziejeni Aplikacionin","Offline Mode Explanation":"Kjo pajisje s'është e lidhur në internet, kësisoj s'do mundeni të publikoni asnjë aplikacion. ","Message":"Mesazh","Share photos and write articles and about your local community":"Bashkëndani fotot dhe shkruani artikuj rreth bashkësisë tuaj lokale","noContactsError":"Që të nisni një SMS, ju lutemi përzgjidhni një a më shumë kontakte.","Open App":"Hapeni Aplikacionin","by _":"prej {{name}}","Make an App":"Bëni një Aplikacion","Sign Out":"Dilni","Delete my Apps":"Hiqini aplikacionet e mia","App Name":"Emri i Aplikacionit","Journalist":"Gazetar","Show in Discover Gallery":"Shfaqeni në Galerinë e Zbulimeve","Text Value":"Vlera e Tekstit ","My Apps":"Aplikacionet e mia","Tap the plus sign to add more content.":"Trokitni mbi shenjën plus që të shtoni më shumë përmbajtje.","Cancel":"Anulojeni","Try in Offline Mode":"Provojeni në Mënyrën Jashtë Linje","Guest":"Vizitor","Try as Guest":"Provojeni si Vizitor","Text Box Type":"Lloji i Kutisë së Tekstit","No Apps Message":"Ju s'keni ende aplikacione","Data":"Të dhënat","errorNoText":"Duhet të përfshini një vlerë teksti","Select Color":"Përzgjidhni Ngjyrë","Edit":"Redaktoni","Phone #":"Nr. i telefonit","Link Text":"Teksti i Lidhjes","Save":"Ruajini","Create a Safety App":"Krijoni një Aplikacion Sigurie","Publish":"Botojeni","errorDefault":"Ou! U has një gabim. Do ktheheni tek <a href='/profile'>profili</a> juaj?","Button Text":"Teksti i Butonit","Label":"Emërtim","Create a How To Guide":"Krijoni një Si Të Udhëzoni","Submit":"Paraqitni","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Keni ndonjë gjë për të bashkëndarë me botën? Filloni një blog, përshtateni sipas pëlqimit dhe nisni të shkruani. ","Edit my Profile":"Redaktoni Profilin tim","Font Size":"Madhësia e Germës","Make":"Bërje","Open my app":"Hapeni aplikacionin tim","Place call":"Bëni telefonatë","If you've got unique skills you'd like to share with others, try making a How To guide.":"Nëse keni aftësi të rralla dhe do të pëlqenit t'i bashkëndanit ato me të tjerët, provoni të bëni një Si Të Udhëzoni.","Add a map, a emergency call button, and other tips to keep safe in your community":"Shtoni një hartë, një buton për thirrje urgjente dhe këshilla të tjera për të ruajtur sigurinë në bashkësinë tuaj","App":"Aplikacion","Make Your Own App":"Bëni Aplikacioni Tuaj","Text Box":"Kutia e Tekstit","App Name & Icon":"Emri i Aplikacionit & Ikona","Make your own app at":"Bëni aplikacioni tuaj tek","Share":"Bashkëndajeni","Promote your Business":"Promovojeni Biznesin tuaj","Show off your products and give customers an easy way to reach you.":"Shfaqini produktet tuaja dhe jepuni konsumatorëve një mënyrë të lehtë për të mbërritur tek ju.","same as minimum number":"njësoj si numri minimal","Text":"Tekst","Link":"Lidhje","From Scratch":"Nga Fillimi","error404":"Kërkojmë ndjesë, s'mundëm ta gjejmë këtë faqe. Dëshironi të <a href='/sign-in'>ktheheni nga fillimi</a>?","toucanspeak":"T'ia nisim duke shtuar ndonjë tekst","Made with Mozilla Webmaker":"Bërë me Mozilla Webmaker","Menu":"Meny","Color":"Ngjyrë","How To":"Si Të","Title Text Color":"Ngjyra e Tekstit të Titullit"},"sv":{"Show this app in the Discover Gallery":"Visa denna app i Discover-galleriet","Single Line Text":"Endast en rad text","Newest":"Nyaste","No data has been stored yet!":"Ingen data har lagrats ännu!","Add a Brick":"Lägg till en bricka","Featured":"Utvalda","My App":"Min App","Separator":"Separator","You haven't created any apps yet.":"Du har inte skapat några appar...ännu.","Guest Explanation":"Gäster kan bygga, men inte publicera appar.","Send SMS":"Skicka som SMS","Publishing...":"Publicerar...","Open":"Öppna","Create":"Skapa","My Profile":"Min profil","An active connection is needed to display the Discover Gallery":"Det behövs en aktiv internet anslutning för att visa Discover-galleriet","Start Building":"Börja bygga","No Data available":"Ingen information tillgänglig","Business":"Företag","Get Started":"Kom igång","Delete App":"Radera App","Share Community News":"Dela GemenskapsNyheter","Choose Contacts":"Välj kontakter","Back to My Apps":"Tillbaka till Mina Appar","Join Webmaker":"Gå med i Webmaker","Preview":"Förhandsgranska","URL":"URL","Text Color":"Textfärg","Minimum Number":"Minsta möjliga nummer","Increment by":"Öka med","Head over to Make to start creating your very own app.":"Bege dig till <strong>Skapa</strong> för att börja skapa din alldeles egna app.","Maximum Number":"Högsta möjliga nummer","Image":"Bild","Sign In":"Logga In","Safety":"Säkerhet","Discover":"Upptäck","errorAppNotFound":"Ursäkta, den här appen gick inte att hitta. Gå tillbaka till din <a href='/profile'>profil</a>?","Name":"Namn","Are you sure you want to delete this magnificent creation":"Är du säker på att du vill radera denna magnifika skapelse?","The Internet fell asleep!":"Internet somnade!","noDataInfoSub":"Om du vill låta användare dela data med dig, prova att lägga till en Räknare och en Skicka-knapp till din app.","Title":"Titel","Choosing this option will allow you to create your own app without a preset template.":"Att välja det här alternativet gör att du kan skapa din egen app utan en förinställd mall.","Share App":"Dela din App","Done":"Färdig","You need to connect to the Internet.":"Du måste vara ansluten till ett nätverk","This action cannot be undone":"Denna åtgärd kan inte ångras.","Delete":"Ta bort","Phone":"Telefon","Initial Number":"Startnummer","Share Via":"Dela via","SMS":"SMS","Gather information from your users by creating a survey.":"Samla information från dina användare genom att skapa en enkät.","Create a Blog":"Skapa en blogg","App Data":"App Data","Source":"Källa","Long Text":"Lång text","I am some text":"Jag är en liten text","share_message":"Kolla in denna app som jag gjort med Mozilla Webmaker","Make and share the web":"Gör &amp; dela webben","Blogger":"Bloggare","My {{template}} App":"Min {{template}} App","Counter":"Räknare","Create a Survey":"Skapa en Enkät","Add to Homescreen":"Lägg till på Hemskärmen","Button Color":"Knappfärg","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> från <br/></span><strong>{{location}}</strong>","Select all":"Välj alla","Tap the plus sign to begin adding content.":"Tryck på plustecknet för att börja lägga till innehåll.","Add contacts":"Lägg till kontakter","Teacher":"Lärare","Start from Scratch":"Börja från början","Remix App":"Remixa App","Offline Mode Explanation":"Den här enheten är inte uppkopplad till internet, så du kan inte publicera några appar.","Message":"Meddelande ","Share photos and write articles and about your local community":"Dela foton och skriva artiklar och om ditt lokala samhället","noContactsError":"För att skicka ett SMS, välj en eller flera kontakter.","Open App":"Öppna App","by _":"av {{name}}","Make an App":"Gör en App","Sign Out":"Logga Ut","Delete my Apps":"Radera mina Appar","App Name":"App-namn","Journalist":"Journalist","Show in Discover Gallery":"Visa i Discover-galleriet","Text Value":"Textvärde","My Apps":"Mina Appar","Tap the plus sign to add more content.":"Tryck på plustecknet för att lägga till mer innehåll.","Cancel":"Avbryt","Try in Offline Mode":"Försök i Offline Läge","Guest":"Gäst","Try as Guest":"Prova som Gäst","Text Box Type":"Typ av textbox","No Apps Message":"Du har inga appar ännu.","Data":"Data","errorNoText":"Du måste inkludera ett text värde","Select Color":"Välj Färg","Edit":"Redigera","Phone #":"Telefon #","Link Text":"Länk text","Save":"Spara","Create a Safety App":"Skapa en säkerhetsapp","Publish":"Publicera ","errorDefault":"Oops! Det blev ett fel. Gå tillbaka till din <a href='/profile'>profil</a>?","Button Text":"Knapptext","Label":"Etikett","Create a How To Guide":"Skapa en vägledningsguide","Submit":"Skicka","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Ha något att dela med världen? Starta en blogg, skräddarsy för att göra den din och börja skriva!","Edit my Profile":"Redigera min Profil","Font Size":"Textstorlek","Make":"Skapa","Open my app":"Öppna min app","Place call":"Samtal","If you've got unique skills you'd like to share with others, try making a How To guide.":"Om du har unika färdigheter du skulle vilja dela med andra så kan du testa att göra en instruktionsguide.","Add a map, a emergency call button, and other tips to keep safe in your community":"Lägg till en karta, en nödsamtals knapp och andra tips för att hålla sig säker på hemorten","App":"App","Make Your Own App":"Gör dina egna app","Text Box":"Text låda","App Name & Icon":"Appnamn & ikon ","Make your own app at":"Göra din egna app på","Share":"Dela","Promote your Business":"Gör reklam för ditt företag","Show off your products and give customers an easy way to reach you.":"Visa upp dina produkter och ge kunderna ett enkelt sätt att nå dig.","same as minimum number":"samma som minsta möjliga nummer","Text":"Text","Link":"Länk","From Scratch":"Från Början","error404":"Ursäkta, vi kunde inte hitta sidan. Vill ni <a href='/sign-in'>gå tillbaka till start</a>?","toucanspeak":"Låt oss börja med att lägga lite text.","Made with Mozilla Webmaker":"Skapad med Mozilla Webmaker","Menu":"Meny","Color":"Färg","How To":"Hur gör man","Title Text Color":"Titel textfärg"},"sw":{"Show this app in the Discover Gallery":"Onyesha Programu tumizi hii kwa Gundua Sanaa","Single Line Text":"Maandishi ya msitari mmoja","Newest":"Mpya zaidi","No data has been stored yet!":"Hakuna data imehifadhiwa!","Add a Brick":"Ongeza Tofali","Featured":"Iliyoangaziwa","My App":"Programu tumizi yangu","Separator":"Kitenganishi","You haven't created any apps yet.":"Haujaunda programu tumizi...zozote","Guest Explanation":"Wageni wanaweza kujenga lakini hawawezi kuchapisha programu tumizi.","Send SMS":"Tuma SMS","Publishing...":"Inachapisha...","Open":"Fungua","Create":"Unda","My Profile":"Profaili yangu","An active connection is needed to display the Discover Gallery":"Muunganisho kwa mtandao unahitajika kuonyesha Gala la Kuvumbua","Start Building":"Anza kujenga","No Data available":"Hakuna Data imepatikana","Business":"Biashara","Get Started":"Anza","Delete App":"Futa programu tumizi","Share Community News":"Shiriki Habari ya Jamii","Choose Contacts":"Chagua Anwani","Back to My Apps":"Rudi kwa Programu tumizi zangu","Join Webmaker":"Jiunge na Webmaker","Preview":"Hakikisho","URL":"URL","Text Color":"Rangi ya maandishi","Minimum Number":"Namba ya chini","Increment by":"Ongeza kwa","Head over to Make to start creating your very own app.":"Enda kwa <strong>Unda</strong> kuanza kuunda programu tumizi yako mwenyewe.","Maximum Number":"Namba ya Juu Zaidi","Image":"Picha","Sign In":"Ingia","Safety":"Usalama","Discover":"Gundua","errorAppNotFound":"Samahani, programu tumizi haikupatikana. Rudi kwa <a href='/profile'>profaili</a>yako?","Name":"Jina","Are you sure you want to delete this magnificent creation":"Je, una uhakika unataka kufuta uumbaji huu wa maana?","The Internet fell asleep!":"Mtandao ulikatika!","noDataInfoSub":"Ikiwa ungependa watumiaji kushiriki data nawe, jaribu kuongeza kitufe cha Kuhesabu na cha Kuwasilisha kwa programu tumizi yako.","Title":"Kichwa","Choosing this option will allow you to create your own app without a preset template.":"Kuchagua chaguo hili kutakukubalia kutengeneza programu tumizi yako bila kielezo.","Share App":"Shiriki Programu tumizi","Done":"Imefanyika","You need to connect to the Internet.":"Unahitaji kuwa Mtandaoni.","This action cannot be undone":"Tendo hili haliwezi kutenguliwa.","Delete":"Futa","Phone":"Simu","Initial Number":"Namba ya mwanzo","Share Via":"Shiriki Kupitia","SMS":"SMS","Gather information from your users by creating a survey.":"Kusanya habari kutoka kwa watumiaji wako kwa kujenga utafiti.","Create a Blog":"Tengeneza blogu","App Data":"Data ya programu tumizi","Source":"Chanzo","Long Text":"Maandishi Marefu","I am some text":"Mimi ni maandishi fulani","share_message":"Tazama programu tumizi niliyotengeneza na Mozilla Webmaker","Make and share the web":"Unda &amp; shiriki mtandao","Blogger":"Bloga","My {{template}} App":"Programu {{template}} yangu","Counter":"Hesabu","Create a Survey":"Unda Utafiti","Add to Homescreen":"Ongeza kwa Skrini nyumbani","Button Color":"Rangi ya kitufe","name from location":"<strong>{{name}}</strong><span v-if=\"location\"><br/> kutoka <br/></span><strong>{{location}}</strong>","Select all":"Chagua zote","Tap the plus sign to begin adding content.":"Guza ishara ya kuongeza kuanza kuongeza maudhui.","Add contacts":"Ongeza anwani","Teacher":"Mwalimu","Start from Scratch":"Anza kutoka mwanzo","Remix App":"Ichanganue Programu tumizi","Offline Mode Explanation":"Kifaa hakijaunganishwa kwa mtandao, kwa hivyo hautaweza kuchapisha programu tumizi zozote.","Message":"Ujumbe","Share photos and write articles and about your local community":"Shiriki picha na uandike makala kuhusu jamii yako ya mitaa","noContactsError":"Kutuma SMS, tafadhali chagua anwani moja au zaidi.","Open App":"Fungua Programu tumizi","by _":"kwa {{name}}","Make an App":"Tengeneza Programu tumizi","Sign Out":"Toka","Delete my Apps":"Futa Programu tumizi zangu","App Name":"Jina la Programu Tumizi","Journalist":"Mwanahabari","Show in Discover Gallery":"Onyeza katika Gala la Kuvumbua","Text Value":"Kimo cha maandishi","My Apps":"Programu tumizi zangu","Tap the plus sign to add more content.":"Guza ishara ya kuongeza kuongeza maudhui zaidi.","Cancel":"Ghairi","Try in Offline Mode":"Jaribu kwa hali ya nje ya mtandao","Guest":"Mgeni","Try as Guest":"Jaribu kama mgeni","Text Box Type":"Aina ya Sanduku la Maandishi","No Apps Message":"Hauna programu tumizi zozote","Data":"Data","errorNoText":"Lazima uyaongeze maandishi","Select Color":"Chagua rangi","Edit":"Hariri","Phone #":"Simu#","Link Text":"Maandishi ya Kiungo","Save":"Hifadhi","Create a Safety App":"Tengeneza programu tumizi ya Usalama","Publish":"Chapisha","errorDefault":"Lo! Kulikuwa na hitilafu. Rudi kwa <a href='/profile'>profaili</a>yako?","Button Text":"Mandishi ya kitufe","Label":"Lebo","Create a How To Guide":"Unda Mwongozo wa Jinsi Ya","Submit":"Wasilisha","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Una kitu ungependa kushiriki na dunia? Anzisha blogu, ifanye yako binafsi na uanze kuandika!","Edit my Profile":"Hariri profaili yangu","Font Size":"Ukubwa wa maandishi","Make":"Unda","Open my app":"Fungua Programu tumizi yangu","Place call":"Piga simu","If you've got unique skills you'd like to share with others, try making a How To guide.":"Kama uko na ujuzi wa kipekee ungependa kushiriki na wengine, jaribu kutengeneza Mwongozo.","Add a map, a emergency call button, and other tips to keep safe in your community":"Ongeza ramani,kitufe cha simu ya dharura na vidokezo vingine vya kuweka jamii yako salama","App":"Programu tumizi","Make Your Own App":"Unda programu tumizi yako","Text Box":"Sanduku la maandishi","App Name & Icon":"Jina ya programu tumizi & Ikoni","Make your own app at":"Unda programu tumizi yako kwa","Share":"Shiriki","Promote your Business":"Imarisha biashara Yako","Show off your products and give customers an easy way to reach you.":"Onyesha bidhaa zako na upe wateja wako njia rahisi ya kukufikia.","same as minimum number":"sawa na namba ya chini zaidi","Text":"Maandishi","Link":"Kiungo","From Scratch":"Kuanzia Mwanzo","error404":"Samahani, hatujaweza kuupata ukurasa huu. Je ungetaka ku<a href='/sign-in'>rudi mwanzo</a>?","toucanspeak":"Hebu tuanze kwa kuongeza maandishi.","Made with Mozilla Webmaker":"Imetengenezwa na Mozilla Webamaker","Menu":"Menyu","Color":"Rangi","How To":"Jinsi Ya","Title Text Color":"Rangi ya Maandishi ya Kichwa"},"tr-TR":{"Show this app in the Discover Gallery":"Bu uygulama Keşif Galerisinde görüntülensin","Single Line Text":"Tek Satır Metin","Newest":"En Yeni","No data has been stored yet!":"Henüz bir veri kaydedilmemiş!","Add a Brick":"Bir Tuğla Ekle","Featured":"Öne Çıkanlar","My App":"Uygulamam","Separator":"Ayraç","You haven't created any apps yet.":"Bir uygulama yapmamışsın...henüz.","Guest Explanation":"Ziyaretçiler uygulama oluştabilir, ama yayımlayamaz.","Send SMS":"SMS Gönder","Publishing...":"Yayınlanıyor...","Open":"Aç","Create":"Oluştur","My Profile":"Profilim","An active connection is needed to display the Discover Gallery":"Keşif Galerisine bakmak için çalışan bir İnternet bağlantısı gerekir","Start Building":"Yapıma Başla","No Data available":"Kullanılabilecek bir veri yok","Business":"İş Dünyası","Get Started":"Başla","Delete App":"Uygulamayı Sil","Share Community News":"Topluluk Haberlerini Paylaş","Choose Contacts":"Kişileri Seç","Back to My Apps":"Uygulamalarına Dön","Join Webmaker":"Webmaker Sitesine Katıl","Preview":"Önizleme","URL":"İnternet Adresi","Text Color":"Metin Rengi","Minimum Number":"En Küçük Sayı","Increment by":"Artım","Head over to Make to start creating your very own app.":"Kendi uygulamanı <strong>Yapmaya</strong> başla.","Maximum Number":"En Büyük Sayı","Image":"Görsel","Sign In":"Oturum Aç","Safety":"Güvenlik","Discover":"Keşfet","errorAppNotFound":"Maalesef, bu uygulama bulunamadı. <a href='/profile'> Profiline</a> geri dönebilirsin.","Name":"Ad","Are you sure you want to delete this magnificent creation":"Bu harika yapımı silmek istediğine emin misin?","The Internet fell asleep!":"İnternet uyumuş!","noDataInfoSub":"Kullanıcıların seninle veri paylaşmasını istiyorsan, uygulamana bir sayaç ve gönder düğmesi ekle.","Title":"Başlık","Choosing this option will allow you to create your own app without a preset template.":"Bu seçenk ile herhangi bir başlangıç kalıbı kullanmadan kendi uygulamanı oluşturmaya başlayabilirsin.","Share App":"Uygulamayı Paylaş","Done":"Tamam","You need to connect to the Internet.":"İnternete bağlantısı olmalı.","This action cannot be undone":"Bu işlem geri alınamaz.","Delete":"Sil","Phone":"Telefon","Initial Number":"Başlangıç Sayısı","Share Via":"Şuradan Paylaş","SMS":"SMS","Gather information from your users by creating a survey.":"Bir anket oluşturarak kullanıcılarından bilgi toplayabilirsin.","Create a Blog":"Blog Oluştur","App Data":"Uygulama Verisi","Source":"Kaynak","Long Text":"Uzun Metin","I am some text":"Ben örnek bir metinim","share_message":"Mozilla Webmaker ile yaptığım uygulamaya bir gözat","Make and share the web":"Yap ve web üzerinden paylaş","Blogger":"Blog yazarı","My {{template}} App":"{{template}} Uygulamam","Counter":"Sayaç","Create a Survey":"Anket Oluştur","Add to Homescreen":"Ana Ekrana Ekle","Button Color":"Düğme Rengi","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/></span><strong>{{location}}</strong>","Select all":"Tümünü seç","Tap the plus sign to begin adding content.":"İçerik eklemeye başlamak için artı simgesine dokun.","Add contacts":"Kişi ekle","Teacher":"Eğitmen","Start from Scratch":"Sıfırdan Başla","Remix App":"Uygulama Kar","Offline Mode Explanation":"Bu aygıtın İnternet bağlantısı olmadığından herhangi bir uygulama yayınlanamaz.","Message":"İleti","Share photos and write articles and about your local community":"Yerel topluluğun ile ilgili fotoğrafları ve yazdığın makaleleri paylaşabilirsin","noContactsError":"SMS gönderilecek bir ya da bir kaç kullanıcıyı seç.","Open App":"Uygulama Aç","by _":"yapan {{name}}","Make an App":"Bir Uygulama Oluştur","Sign Out":"Oturumu Kapat","Delete my Apps":"Uygulamalarımı Sil","App Name":"Uygulama Adı","Journalist":"Gazeteci","Show in Discover Gallery":"Keşfet Galerisinde Görüntülensin","Text Value":"Metin Değeri","My Apps":"Uygulamalarım","Tap the plus sign to add more content.":"İçerik eklemek için artı simgesine dokun.","Cancel":"İptal","Try in Offline Mode":"Çevrimdışı Kipte Dene","Guest":"Ziyaretçi","Try as Guest":"Ziyaretçi Olarak Dene","Text Box Type":"Metin Kutusu Tipi","No Apps Message":"Henüz hiç uygulamanız yok.","Data":"Veri","errorNoText":"Bir metin değeri yazmalısınız","Select Color":"Renk Seç","Edit":"Düzenle","Phone #":"Telefon No","Link Text":"Bağlantı Metni","Save":"Kaydet","Create a Safety App":"Güvenlik Uygulaması Oluştur","Publish":"Yayınla","errorDefault":"Malesef bir hata oluştu. <a href='/profile'>Profiline</a> geri dönebilirsin.","Button Text":"Düğme Metni","Label":"Etiket","Create a How To Guide":"Nasıl Yapılır Belgesi Hazırla","Submit":"Gönder","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"Dünya ile paylaşacakların varsa kendine özel bir blog tasarlayarak yazmaya başlayabilirsin. ","Edit my Profile":"Profilini Düzenle","Font Size":"Yazı Boyutu","Make":"Yap","Open my app":"Uygulamanı aç","Place call":"Konum arama","If you've got unique skills you'd like to share with others, try making a How To guide.":"Başkaları ile paylaşmak istediğin özel yöntemlerin varsa Nasıl Yapılır Belgesi hazırlayabilirsin:","Add a map, a emergency call button, and other tips to keep safe in your community":"Topluluğunu güvende tutmak için bir harita, acil çağrı düğmesi ve diğer ipuçlarını ekleyebilirsin","App":"Uygulama","Make Your Own App":"Kendi Uygulamanı Yap","Text Box":"Metin Kutusu","App Name & Icon":"Uygulama Adı ve Simgesi","Make your own app at":"Şurada kendi uygulamalarını yap","Share":"Paylaş","Promote your Business":"İşini Geliştir","Show off your products and give customers an easy way to reach you.":"Ürünlerini sunarak müşterilerin seni kolayca bulabilmesini sağlayabilirsin.","same as minimum number":"en küçük sayı ile aynı","Text":"Metin","Link":"Bağlantı:","From Scratch":"Sıfırdan","error404":"Maalesef, bu sayfa bulunamadı. <a href='/sign-in'>Baştan</a> başlamak ister misin?","toucanspeak":"Biraz metin ekleyerek başlayalım.","Made with Mozilla Webmaker":"Mozilla Webmaker ile yapılmıştır.","Menu":"Menü","Color":"Renk","How To":"Nasıl Yapılır","Title Text Color":"Başlık Metni Rengi"},"zh-CN":{"Show this app in the Discover Gallery":"在“发现”长廊中显示此应用","Single Line Text":"单行文本","Newest":"最新","No data has been stored yet!":"尚无已存储数据！","Add a Brick":"添加一个砖块","Featured":"精选","My App":"我的应用","Separator":"分隔器","You haven't created any apps yet.":"您尚未创建任何应用。","Guest Explanation":"访客可以建立但不能发布应用。","Send SMS":"发送短信","Publishing...":"发布中...","Open":"打开","Create":"创建","My Profile":"我的资料","An active connection is needed to display the Discover Gallery":"需要一个有效的连接以显示“发现长廊”","Start Building":"开始建造","No Data available":"无可用数据","Business":"商务","Get Started":"开始吧","Delete App":"删除应用","Share Community News":"分享社区新闻","Choose Contacts":"选择联系人","Back to My Apps":"返回我的应用","Join Webmaker":"加入 Webmaker","Preview":"预览","URL":"URL","Text Color":"文字颜色","Minimum Number":"最小数量","Increment by":"增量","Head over to Make to start creating your very own app.":"接触 <strong>Make</strong> 开始创建你自己的应用。","Maximum Number":"最大数量","Image":"图像","Sign In":"登录","Safety":"安全","Discover":"发现","errorAppNotFound":"抱歉，找不到此应用。返回您的<a href='/profile'>资料</a>页面？","Name":"名称","Are you sure you want to delete this magnificent creation":"您确定要删除这个宏伟的作品吗？","The Internet fell asleep!":"互联网睡着了！","noDataInfoSub":"如果您想让用户与您分享数据，尝试添加一个计数器和一个提交按钮到您的应用。","Title":"标题","Choosing this option will allow you to create your own app without a preset template.":"选择此选项，您将不使用预设的模板创建您自己的应用。","Share App":"分享应用","Done":"完成","You need to connect to the Internet.":"您需要连接到互联网。","This action cannot be undone":"此操作不可撤销。","Delete":"删除","Phone":"手机","Initial Number":"初始数量","Share Via":"分享通过","SMS":"短信","Gather information from your users by creating a survey.":"创建一个调查，收集您的用户的信息。","Create a Blog":"创建一个博客","App Data":"应用数据","Source":"源代码","Long Text":"长文本","I am some text":"示例文本","share_message":"快来看看我用 Mozilla Webmaker 制作的应用","Make and share the web":"制作和分享网络","Blogger":"博客主","My {{template}} App":"我的 {{template}} 应用","Counter":"计数器","Create a Survey":"创建一个调查","Add to Homescreen":"添加到主屏幕","Button Color":"按钮颜色","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> 来自 <br/></span><strong>{{location}}</strong>","Select all":"全选","Tap the plus sign to begin adding content.":"点按加号开始添加内容。","Add contacts":"添加联系人","Teacher":"教师","Start from Scratch":"从头开始","Remix App":"重组应用","Offline Mode Explanation":"此设备没有连接到互联网，所以您不能发布任何应用。","Message":"消息","Share photos and write articles and about your local community":"分享照片和写出文章，介绍您的本地社区","noContactsError":"若要发送短信，请选择一个或多个联系人。","Open App":"打开应用","by _":"由 {{name}}","Make an App":"制作一个应用","Sign Out":"退出","Delete my Apps":"删除我的应用","App Name":"应用名称","Journalist":"新闻记者","Show in Discover Gallery":"在发现长廊中显示","Text Value":"文本值","My Apps":"我的应用","Tap the plus sign to add more content.":"点按加号添加更多内容。","Cancel":"取消","Try in Offline Mode":"尝试进入离线模式","Guest":"访客","Try as Guest":"尝试作为访客","Text Box Type":"文本框类型","No Apps Message":"您还没有任何应用。","Data":"数据","errorNoText":"您必须包括一个文本值","Select Color":"选择颜色","Edit":"编辑","Phone #":"手机 #","Link Text":"链接文本","Save":"保存","Create a Safety App":"创建一个安全应用","Publish":"发布","errorDefault":"糟糕！发生错误。返回您的<a href='/profile'>资料</a>页面？","Button Text":"按钮文本","Label":"标签","Create a How To Guide":"创建一个“如何做”指南","Submit":"提交","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"有什么想与世界分享的吗？开建一个博客、定制并开始书写吧！","Edit my Profile":"编辑我的资料","Font Size":"字体大小","Make":"创作","Open my app":"打开我的应用","Place call":"拨打电话","If you've got unique skills you'd like to share with others, try making a How To guide.":"如果您有独特的技能并且想与他人分享，来试试做一个“如何做”指南。","Add a map, a emergency call button, and other tips to keep safe in your community":"添加一个地图、一个紧急呼叫按钮，以及其他技巧，保护你的社区安全","App":"应用","Make Your Own App":"制作你自己的应用","Text Box":"文本框","App Name & Icon":"应用名称和图标","Make your own app at":"制作您自己的应用，就在","Share":"分享","Promote your Business":"促进您的业务","Show off your products and give customers an easy way to reach you.":"秀出您的产品，给客户一个简单的方式找到你。","same as minimum number":"同最小数量","Text":"文本","Link":"链接","From Scratch":"从头开始","error404":"抱歉，我们无法找到此页面。您想<a href='/sign-in'>返回开始的地方</a>吗？","toucanspeak":"让我们添加一些文本吧。","Made with Mozilla Webmaker":"采用 Mozilla Webmaker 制作","Menu":"菜单","Color":"颜色","How To":"如何","Title Text Color":"标题文本颜色"},"zh-TW":{"Show this app in the Discover Gallery":"在探索作品集中展示這一個應用程式","Single Line Text":"單行文字","Newest":"最新","No data has been stored yet!":"尚未儲存任何資料。","Add a Brick":"新增磚塊","Featured":"特色","My App":"我的應用程式","Separator":"分隔","You haven't created any apps yet.":"您尚未建立任何的應用程式。","Guest Explanation":"訪客可以建立，但不能發布應用程式。","Send SMS":"傳送簡訊","Publishing...":"發佈中...","Open":"開啟","Create":"建立","My Profile":"我的個人檔案","An active connection is needed to display the Discover Gallery":"一個有效的連線必須顯示探索作品集","Start Building":"打造","No Data available":"沒有可顯示的資料","Business":"商務","Get Started":"開始使用","Delete App":"刪除應用程式","Share Community News":"分享社群新聞","Choose Contacts":"選擇聯絡人","Back to My Apps":"回到我的應用程式","Join Webmaker":"參與 Webmaker","Preview":"預覽","URL":"網址","Text Color":"文字色彩","Minimum Number":"最小數值","Increment by":"每跳一次的增加量","Head over to Make to start creating your very own app.":"開始<strong>製作</strong>並建立您自己的應用程式。","Maximum Number":"最大數值","Image":"圖片","Sign In":"登入","Safety":"安全","Discover":"探索","errorAppNotFound":"抱歉，找不到該應用程式。要回到您的<a href='/profile'>個人設定</a>嗎？","Name":"名稱","Are you sure you want to delete this magnificent creation":"確定要刪除這個曠世鉅作嗎？","The Internet fell asleep!":"網際網路睡著了！","noDataInfoSub":"如果你希望使用者與你分享資料，試著在應用程式中加上計數器和送出按鈕","Title":"標題","Choosing this option will allow you to create your own app without a preset template.":"選擇此選項，您可以不使用任何樣板，從頭開始建立您自己的應用程式。","Share App":"分享應用程式","Done":"完成","You need to connect to the Internet.":"您需要連線到網際網路。","This action cannot be undone":"無法還原這個行為。","Delete":"刪除","Phone":"電話","Initial Number":"原始數值","Share Via":"分享途徑","SMS":"簡訊","Gather information from your users by creating a survey.":"建立問卷以收集使用者資訊。","Create a Blog":"建立部落格","App Data":"應用程式資料","Source":"來源","Long Text":"長文字","I am some text":"範例文字","share_message":"看看我用 Mozilla Webmaker 製作的應用程式","Make and share the web":"製作並分享網頁","Blogger":"部落客","My {{template}} App":"我的 {{template}} 應用程式","Counter":"計數器","Create a Survey":"建立問卷","Add to Homescreen":"新增到主畫面","Button Color":"按鈕色彩","name from location":" <strong>{{name}}</strong><span v-if=\"location\"><br/> 來自 <br/></span><strong>{{location}}</strong>","Select all":"選擇全部","Tap the plus sign to begin adding content.":"點擊加號開始添加內容。","Add contacts":"新增聯絡人","Teacher":"老師","Start from Scratch":"從頭開始","Remix App":"混搭應用程式","Offline Mode Explanation":"此裝置並未連線到網際網路，所以無法發布任何應用程式。","Message":"訊息","Share photos and write articles and about your local community":"分享相片並寫文章，告訴大家您本地的社群活動","noContactsError":"要傳送簡訊，請先選擇聯絡人","Open App":"開啟應用程式","by _":"製作者：{{name}}","Make an App":"製作應用程式","Sign Out":"登出","Delete my Apps":"刪除我的應用程式","App Name":"應用程式名稱","Journalist":"新聞工作者","Show in Discover Gallery":"在探索作品集中展示","Text Value":"文字內容","My Apps":"我的應用程式","Tap the plus sign to add more content.":"點擊加號以添加更多的內容。","Cancel":"取消","Try in Offline Mode":"在離線模式嘗試","Guest":"訪客","Try as Guest":"以訪客身份試用","Text Box Type":"文字方塊樣式","No Apps Message":"您目前還沒有任何應用程式。","Data":"資料","errorNoText":"您必須輸入文字","Select Color":"選擇顏色","Edit":"編輯","Phone #":"電話號碼","Link Text":"鏈結文字","Save":"儲存","Create a Safety App":"建立一個保全應用程式","Publish":"發佈","errorDefault":"呃，發生了錯誤。要回到您的<a href='/profile'>個人設定</a>嗎？","Button Text":"按鈕文字","Label":"標籤","Create a How To Guide":"建立一份教學指南","Submit":"提交","Have something to share with the world? Start a blog, customize to make it yours and start writing!":"要跟全世界分享一些東西嗎？弄個部落格，調整成自己的風格，然後開始寫吧！","Edit my Profile":"編輯我的個人檔案","Font Size":"文字大小","Make":"創作","Open my app":"開啟我的應用程式","Place call":"撥電話","If you've got unique skills you'd like to share with others, try making a How To guide.":"您有特殊的技能想要分享給大家，那就來做一份教學指南吧。","Add a map, a emergency call button, and other tips to keep safe in your community":"新增一份地圖、一份緊急通話按鈕，還有其他的提示來確保您社區的安全","App":"應用程式","Make Your Own App":"製作您自己的應用程式","Text Box":"文字盒","App Name & Icon":"應用程式名稱與圖示","Make your own app at":"建立你的應用程式","Share":"分享","Promote your Business":"推廣您的生意","Show off your products and give customers an easy way to reach you.":"展示您的產品，讓客戶可以輕鬆跟您接觸","same as minimum number":"與最小數值相同","Text":"文字","Link":"鏈結","From Scratch":"從頭開始","error404":"抱歉，我們找不到此頁面。您要<a href='/sign-in'>回到開始的地方</a>嗎？","toucanspeak":"從加點文字開始。","Made with Mozilla Webmaker":"使用 Mozilla Webmaker 製作","Menu":"選單","Color":"色彩","How To":"教學指南","Title Text Color":"文字色彩"}};
},{}],90:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var kMaxLength = 0x3fffffff

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Note:
 *
 * - Implementation must support adding new properties to `Uint8Array` instances.
 *   Firefox 4-29 lacked support, fixed in Firefox 30+.
 *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *    incorrect length in some situations.
 *
 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will
 * get the Object implementation, which is slower but will work correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = (function () {
  try {
    var buf = new ArrayBuffer(0)
    var arr = new Uint8Array(buf)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
})()

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  // Find the length
  var length
  if (type === 'number')
    length = subject > 0 ? subject >>> 0 : 0
  else if (type === 'string') {
    if (encoding === 'base64')
      subject = base64clean(subject)
    length = Buffer.byteLength(subject, encoding)
  } else if (type === 'object' && subject !== null) { // assume object is array-like
    if (subject.type === 'Buffer' && isArray(subject.data))
      subject = subject.data
    length = +subject.length > 0 ? Math.floor(+subject.length) : 0
  } else
    throw new TypeError('must start with number, buffer, array or string')

  if (this.length > kMaxLength)
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
      'size: 0x' + kMaxLength.toString(16) + ' bytes')

  var buf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Preferred: Return an augmented `Uint8Array` instance for best performance
    buf = Buffer._augment(new Uint8Array(length))
  } else {
    // Fallback: Return THIS instance of Buffer (created by `new`)
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {
    // Speed optimization -- use set if we're copying from a typed array
    buf._set(subject)
  } else if (isArrayish(subject)) {
    // Treat array-ish objects as a byte array
    if (Buffer.isBuffer(subject)) {
      for (i = 0; i < length; i++)
        buf[i] = subject.readUInt8(i)
    } else {
      for (i = 0; i < length; i++)
        buf[i] = ((subject[i] % 256) + 256) % 256
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}

Buffer.isBuffer = function (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))
    throw new TypeError('Arguments must be Buffers')

  var x = a.length
  var y = b.length
  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}
  if (i !== len) {
    x = a[i]
    y = b[i]
  }
  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function (list, totalLength) {
  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (totalLength === undefined) {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    case 'hex':
      ret = str.length >>> 1
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    default:
      ret = str.length
  }
  return ret
}

// pre-set for values that may exist in the future
Buffer.prototype.length = undefined
Buffer.prototype.parent = undefined

// toString(encoding, start=0, end=buffer.length)
Buffer.prototype.toString = function (encoding, start, end) {
  var loweredCase = false

  start = start >>> 0
  end = end === undefined || end === Infinity ? this.length : end >>> 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase)
          throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.equals = function (b) {
  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max)
      str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  return Buffer.compare(this, b)
}

// `get` will be removed in Node 0.13+
Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` will be removed in Node 0.13+
Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(byte)) throw new Error('Invalid hex string')
    buf[offset + i] = byte
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function asciiWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

function utf16leWrite (buf, string, offset, length) {
  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length, 2)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  // Support both (string, offset, length, encoding)
  // and the legacy (string, encoding, offset, length)
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  var ret
  switch (encoding) {
    case 'hex':
      ret = hexWrite(this, string, offset, length)
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8Write(this, string, offset, length)
      break
    case 'ascii':
      ret = asciiWrite(this, string, offset, length)
      break
    case 'binary':
      ret = binaryWrite(this, string, offset, length)
      break
    case 'base64':
      ret = base64Write(this, string, offset, length)
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = utf16leWrite(this, string, offset, length)
      break
    default:
      throw new TypeError('Unknown encoding: ' + encoding)
  }
  return ret
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function binarySlice (buf, start, end) {
  return asciiSlice(buf, start, end)
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len;
    if (start < 0)
      start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0)
      end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start)
    end = start

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    return Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0)
    throw new RangeError('offset is not uint')
  if (offset + ext > length)
    throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
      ((this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      this[offset + 3])
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80))
    return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16) |
      (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
      (this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      (this[offset + 3])
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  if (!noAssert)
    checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new TypeError('value is out of bounds')
  if (offset + ext > buf.length) throw new TypeError('index out of range')
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = value
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = value
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = value
  return offset + 1
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
  } else objectWriteUInt16(this, value, offset, true)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = value
  } else objectWriteUInt16(this, value, offset, false)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else objectWriteUInt32(this, value, offset, true)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert)
    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = value
  } else objectWriteUInt32(this, value, offset, false)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new TypeError('value is out of bounds')
  if (offset + ext > buf.length) throw new TypeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert)
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  // Copy 0 bytes; we're done
  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  // Fatal error conditions
  if (end < start) throw new TypeError('sourceEnd < sourceStart')
  if (target_start < 0 || target_start >= target.length)
    throw new TypeError('targetStart out of bounds')
  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')
  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  var len = end - start

  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < len; i++) {
      target[i + target_start] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), target_start)
  }
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new TypeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')
  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array get/set methods before overwriting
  arr._get = arr.get
  arr._set = arr.set

  // deprecated, will be removed in node 0.13+
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-z]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F) {
      byteArray.push(b)
    } else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++) {
        byteArray.push(parseInt(h[j], 16))
      }
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length, unitSize) {
  if (unitSize) length -= length % unitSize;
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}

},{"base64-js":91,"ieee754":92,"is-array":93}],91:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS)
			return 62 // '+'
		if (code === SLASH)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],92:[function(require,module,exports){
exports.read = function(buffer, offset, isLE, mLen, nBytes) {
  var e, m,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = isLE ? (nBytes - 1) : 0,
      d = isLE ? -1 : 1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = isLE ? 0 : (nBytes - 1),
      d = isLE ? 1 : -1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

},{}],93:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],94:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      }
      throw TypeError('Uncaught, unspecified "error" event.');
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],95:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],96:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canMutationObserver = typeof window !== 'undefined'
    && window.MutationObserver;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    var queue = [];

    if (canMutationObserver) {
        var hiddenDiv = document.createElement("div");
        var observer = new MutationObserver(function () {
            var queueList = queue.slice();
            queue.length = 0;
            queueList.forEach(function (fn) {
                fn();
            });
        });

        observer.observe(hiddenDiv, { attributes: true });

        return function nextTick(fn) {
            if (!queue.length) {
                hiddenDiv.setAttribute('yes', 'no');
            }
            queue.push(fn);
        };
    }

    if (canPost) {
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],97:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],98:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":97,"_process":96,"inherits":95}],99:[function(require,module,exports){
(function (Buffer){
'use strict';

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

// shim for Node's 'util' package
// DO NOT REMOVE THIS! It is required for compatibility with EnderJS (http://enderjs.com/).
var util = {
  isArray: function (ar) {
    return Array.isArray(ar) || (typeof ar === 'object' && objectToString(ar) === '[object Array]');
  },
  isDate: function (d) {
    return typeof d === 'object' && objectToString(d) === '[object Date]';
  },
  isRegExp: function (re) {
    return typeof re === 'object' && objectToString(re) === '[object RegExp]';
  },
  getRegExpFlags: function (re) {
    var flags = '';
    re.global && (flags += 'g');
    re.ignoreCase && (flags += 'i');
    re.multiline && (flags += 'm');
    return flags;
  }
};


if (typeof module === 'object')
  module.exports = clone;

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
*/

function clone(parent, circular, depth, prototype) {
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth == 0)
      return parent;

    var child;
    if (typeof parent != 'object') {
      return parent;
    }

    if (util.isArray(parent)) {
      child = [];
    } else if (util.isRegExp(parent)) {
      child = new RegExp(parent.source, util.getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (util.isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      child = new Buffer(parent.length);
      parent.copy(child);
      return child;
    } else {
      if (typeof prototype == 'undefined') child = Object.create(Object.getPrototypeOf(parent));
      else child = Object.create(prototype);
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    for (var i in parent) {
      child[i] = _clone(parent[i], depth - 1);
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

}).call(this,require("buffer").Buffer)
},{"buffer":90}],100:[function(require,module,exports){
/**
 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
 *
 * @version 1.0.3
 * @codingstandard ftlabs-jsv2
 * @copyright The Financial Times Limited [All Rights Reserved]
 * @license MIT License (see LICENSE.txt)
 */

/*jslint browser:true, node:true*/
/*global define, Event, Node*/


/**
 * Instantiate fast-clicking listeners on the specified layer.
 *
 * @constructor
 * @param {Element} layer The layer to listen on
 * @param {Object} options The options to override the defaults
 */
function FastClick(layer, options) {
	'use strict';
	var oldOnClick;

	options = options || {};

	/**
	 * Whether a click is currently being tracked.
	 *
	 * @type boolean
	 */
	this.trackingClick = false;


	/**
	 * Timestamp for when click tracking started.
	 *
	 * @type number
	 */
	this.trackingClickStart = 0;


	/**
	 * The element being tracked for a click.
	 *
	 * @type EventTarget
	 */
	this.targetElement = null;


	/**
	 * X-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartX = 0;


	/**
	 * Y-coordinate of touch start event.
	 *
	 * @type number
	 */
	this.touchStartY = 0;


	/**
	 * ID of the last touch, retrieved from Touch.identifier.
	 *
	 * @type number
	 */
	this.lastTouchIdentifier = 0;


	/**
	 * Touchmove boundary, beyond which a click will be cancelled.
	 *
	 * @type number
	 */
	this.touchBoundary = options.touchBoundary || 10;


	/**
	 * The FastClick layer.
	 *
	 * @type Element
	 */
	this.layer = layer;

	/**
	 * The minimum time between tap(touchstart and touchend) events
	 *
	 * @type number
	 */
	this.tapDelay = options.tapDelay || 200;

	if (FastClick.notNeeded(layer)) {
		return;
	}

	// Some old versions of Android don't have Function.prototype.bind
	function bind(method, context) {
		return function() { return method.apply(context, arguments); };
	}


	var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
	var context = this;
	for (var i = 0, l = methods.length; i < l; i++) {
		context[methods[i]] = bind(context[methods[i]], context);
	}

	// Set up event handlers as required
	if (deviceIsAndroid) {
		layer.addEventListener('mouseover', this.onMouse, true);
		layer.addEventListener('mousedown', this.onMouse, true);
		layer.addEventListener('mouseup', this.onMouse, true);
	}

	layer.addEventListener('click', this.onClick, true);
	layer.addEventListener('touchstart', this.onTouchStart, false);
	layer.addEventListener('touchmove', this.onTouchMove, false);
	layer.addEventListener('touchend', this.onTouchEnd, false);
	layer.addEventListener('touchcancel', this.onTouchCancel, false);

	// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
	// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
	// layer when they are cancelled.
	if (!Event.prototype.stopImmediatePropagation) {
		layer.removeEventListener = function(type, callback, capture) {
			var rmv = Node.prototype.removeEventListener;
			if (type === 'click') {
				rmv.call(layer, type, callback.hijacked || callback, capture);
			} else {
				rmv.call(layer, type, callback, capture);
			}
		};

		layer.addEventListener = function(type, callback, capture) {
			var adv = Node.prototype.addEventListener;
			if (type === 'click') {
				adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
					if (!event.propagationStopped) {
						callback(event);
					}
				}), capture);
			} else {
				adv.call(layer, type, callback, capture);
			}
		};
	}

	// If a handler is already declared in the element's onclick attribute, it will be fired before
	// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
	// adding it as listener.
	if (typeof layer.onclick === 'function') {

		// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
		// - the old one won't work if passed to addEventListener directly.
		oldOnClick = layer.onclick;
		layer.addEventListener('click', function(event) {
			oldOnClick(event);
		}, false);
		layer.onclick = null;
	}
}


/**
 * Android requires exceptions.
 *
 * @type boolean
 */
var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0;


/**
 * iOS requires exceptions.
 *
 * @type boolean
 */
var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);


/**
 * iOS 4 requires an exception for select elements.
 *
 * @type boolean
 */
var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


/**
 * iOS 6.0(+?) requires the target element to be manually derived
 *
 * @type boolean
 */
var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS ([6-9]|\d{2})_\d/).test(navigator.userAgent);

/**
 * BlackBerry requires exceptions.
 *
 * @type boolean
 */
var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

/**
 * Determine whether a given element requires a native click.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element needs a native click
 */
FastClick.prototype.needsClick = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {

	// Don't send a synthetic click to disabled inputs (issue #62)
	case 'button':
	case 'select':
	case 'textarea':
		if (target.disabled) {
			return true;
		}

		break;
	case 'input':

		// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
		if ((deviceIsIOS && target.type === 'file') || target.disabled) {
			return true;
		}

		break;
	case 'label':
	case 'video':
		return true;
	}

	return (/\bneedsclick\b/).test(target.className);
};


/**
 * Determine whether a given element requires a call to focus to simulate click into element.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
 */
FastClick.prototype.needsFocus = function(target) {
	'use strict';
	switch (target.nodeName.toLowerCase()) {
	case 'textarea':
		return true;
	case 'select':
		return !deviceIsAndroid;
	case 'input':
		switch (target.type) {
		case 'button':
		case 'checkbox':
		case 'file':
		case 'image':
		case 'radio':
		case 'submit':
			return false;
		}

		// No point in attempting to focus disabled inputs
		return !target.disabled && !target.readOnly;
	default:
		return (/\bneedsfocus\b/).test(target.className);
	}
};


/**
 * Send a click event to the specified element.
 *
 * @param {EventTarget|Element} targetElement
 * @param {Event} event
 */
FastClick.prototype.sendClick = function(targetElement, event) {
	'use strict';
	var clickEvent, touch;

	// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
	if (document.activeElement && document.activeElement !== targetElement) {
		document.activeElement.blur();
	}

	touch = event.changedTouches[0];

	// Synthesise a click event, with an extra attribute so it can be tracked
	clickEvent = document.createEvent('MouseEvents');
	clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
	clickEvent.forwardedTouchEvent = true;
	targetElement.dispatchEvent(clickEvent);
};

FastClick.prototype.determineEventType = function(targetElement) {
	'use strict';

	//Issue #159: Android Chrome Select Box does not open with a synthetic click event
	if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
		return 'mousedown';
	}

	return 'click';
};


/**
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.focus = function(targetElement) {
	'use strict';
	var length;

	// Issue #160: on iOS 7, some input elements (e.g. date datetime) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
	if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time') {
		length = targetElement.value.length;
		targetElement.setSelectionRange(length, length);
	} else {
		targetElement.focus();
	}
};


/**
 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
 *
 * @param {EventTarget|Element} targetElement
 */
FastClick.prototype.updateScrollParent = function(targetElement) {
	'use strict';
	var scrollParent, parentElement;

	scrollParent = targetElement.fastClickScrollParent;

	// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
	// target element was moved to another parent.
	if (!scrollParent || !scrollParent.contains(targetElement)) {
		parentElement = targetElement;
		do {
			if (parentElement.scrollHeight > parentElement.offsetHeight) {
				scrollParent = parentElement;
				targetElement.fastClickScrollParent = parentElement;
				break;
			}

			parentElement = parentElement.parentElement;
		} while (parentElement);
	}

	// Always update the scroll top tracker if possible.
	if (scrollParent) {
		scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
	}
};


/**
 * @param {EventTarget} targetElement
 * @returns {Element|EventTarget}
 */
FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
	'use strict';

	// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
	if (eventTarget.nodeType === Node.TEXT_NODE) {
		return eventTarget.parentNode;
	}

	return eventTarget;
};


/**
 * On touch start, record the position and scroll offset.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchStart = function(event) {
	'use strict';
	var targetElement, touch, selection;

	// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
	if (event.targetTouches.length > 1) {
		return true;
	}

	targetElement = this.getTargetElementFromEventTarget(event.target);
	touch = event.targetTouches[0];

	if (deviceIsIOS) {

		// Only trusted events will deselect text on iOS (issue #49)
		selection = window.getSelection();
		if (selection.rangeCount && !selection.isCollapsed) {
			return true;
		}

		if (!deviceIsIOS4) {

			// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
			// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
			// with the same identifier as the touch event that previously triggered the click that triggered the alert.
			// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
			// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
			// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
			// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
			// random integers, it's safe to to continue if the identifier is 0 here.
			if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
				event.preventDefault();
				return false;
			}

			this.lastTouchIdentifier = touch.identifier;

			// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
			// 1) the user does a fling scroll on the scrollable layer
			// 2) the user stops the fling scroll with another tap
			// then the event.target of the last 'touchend' event will be the element that was under the user's finger
			// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
			// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
			this.updateScrollParent(targetElement);
		}
	}

	this.trackingClick = true;
	this.trackingClickStart = event.timeStamp;
	this.targetElement = targetElement;

	this.touchStartX = touch.pageX;
	this.touchStartY = touch.pageY;

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
		event.preventDefault();
	}

	return true;
};


/**
 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.touchHasMoved = function(event) {
	'use strict';
	var touch = event.changedTouches[0], boundary = this.touchBoundary;

	if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
		return true;
	}

	return false;
};


/**
 * Update the last position.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchMove = function(event) {
	'use strict';
	if (!this.trackingClick) {
		return true;
	}

	// If the touch has moved, cancel the click tracking
	if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
		this.trackingClick = false;
		this.targetElement = null;
	}

	return true;
};


/**
 * Attempt to find the labelled control for the given label element.
 *
 * @param {EventTarget|HTMLLabelElement} labelElement
 * @returns {Element|null}
 */
FastClick.prototype.findControl = function(labelElement) {
	'use strict';

	// Fast path for newer browsers supporting the HTML5 control attribute
	if (labelElement.control !== undefined) {
		return labelElement.control;
	}

	// All browsers under test that support touch events also support the HTML5 htmlFor attribute
	if (labelElement.htmlFor) {
		return document.getElementById(labelElement.htmlFor);
	}

	// If no for attribute exists, attempt to retrieve the first labellable descendant element
	// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
	return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
};


/**
 * On touch end, determine whether to send a click event at once.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchEnd = function(event) {
	'use strict';
	var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

	if (!this.trackingClick) {
		return true;
	}

	// Prevent phantom clicks on fast double-tap (issue #36)
	if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
		this.cancelNextClick = true;
		return true;
	}

	// Reset to prevent wrong click cancel on input (issue #156).
	this.cancelNextClick = false;

	this.lastClickTime = event.timeStamp;

	trackingClickStart = this.trackingClickStart;
	this.trackingClick = false;
	this.trackingClickStart = 0;

	// On some iOS devices, the targetElement supplied with the event is invalid if the layer
	// is performing a transition or scroll, and has to be re-detected manually. Note that
	// for this to function correctly, it must be called *after* the event target is checked!
	// See issue #57; also filed as rdar://13048589 .
	if (deviceIsIOSWithBadTarget) {
		touch = event.changedTouches[0];

		// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
		targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
		targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
	}

	targetTagName = targetElement.tagName.toLowerCase();
	if (targetTagName === 'label') {
		forElement = this.findControl(targetElement);
		if (forElement) {
			this.focus(targetElement);
			if (deviceIsAndroid) {
				return false;
			}

			targetElement = forElement;
		}
	} else if (this.needsFocus(targetElement)) {

		// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
		// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
		if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
			this.targetElement = null;
			return false;
		}

		this.focus(targetElement);
		this.sendClick(targetElement, event);

		// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
		// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
		if (!deviceIsIOS || targetTagName !== 'select') {
			this.targetElement = null;
			event.preventDefault();
		}

		return false;
	}

	if (deviceIsIOS && !deviceIsIOS4) {

		// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
		// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
		scrollParent = targetElement.fastClickScrollParent;
		if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
			return true;
		}
	}

	// Prevent the actual click from going though - unless the target node is marked as requiring
	// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
	if (!this.needsClick(targetElement)) {
		event.preventDefault();
		this.sendClick(targetElement, event);
	}

	return false;
};


/**
 * On touch cancel, stop tracking the click.
 *
 * @returns {void}
 */
FastClick.prototype.onTouchCancel = function() {
	'use strict';
	this.trackingClick = false;
	this.targetElement = null;
};


/**
 * Determine mouse events which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onMouse = function(event) {
	'use strict';

	// If a target element was never set (because a touch event was never fired) allow the event
	if (!this.targetElement) {
		return true;
	}

	if (event.forwardedTouchEvent) {
		return true;
	}

	// Programmatically generated events targeting a specific element should be permitted
	if (!event.cancelable) {
		return true;
	}

	// Derive and check the target element to see whether the mouse event needs to be permitted;
	// unless explicitly enabled, prevent non-touch click events from triggering actions,
	// to prevent ghost/doubleclicks.
	if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

		// Prevent any user-added listeners declared on FastClick element from being fired.
		if (event.stopImmediatePropagation) {
			event.stopImmediatePropagation();
		} else {

			// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
			event.propagationStopped = true;
		}

		// Cancel the event
		event.stopPropagation();
		event.preventDefault();

		return false;
	}

	// If the mouse event is permitted, return true for the action to go through.
	return true;
};


/**
 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
 * an actual click which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onClick = function(event) {
	'use strict';
	var permitted;

	// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
	if (this.trackingClick) {
		this.targetElement = null;
		this.trackingClick = false;
		return true;
	}

	// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
	if (event.target.type === 'submit' && event.detail === 0) {
		return true;
	}

	permitted = this.onMouse(event);

	// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
	if (!permitted) {
		this.targetElement = null;
	}

	// If clicks are permitted, return true for the action to go through.
	return permitted;
};


/**
 * Remove all FastClick's event listeners.
 *
 * @returns {void}
 */
FastClick.prototype.destroy = function() {
	'use strict';
	var layer = this.layer;

	if (deviceIsAndroid) {
		layer.removeEventListener('mouseover', this.onMouse, true);
		layer.removeEventListener('mousedown', this.onMouse, true);
		layer.removeEventListener('mouseup', this.onMouse, true);
	}

	layer.removeEventListener('click', this.onClick, true);
	layer.removeEventListener('touchstart', this.onTouchStart, false);
	layer.removeEventListener('touchmove', this.onTouchMove, false);
	layer.removeEventListener('touchend', this.onTouchEnd, false);
	layer.removeEventListener('touchcancel', this.onTouchCancel, false);
};


/**
 * Check whether FastClick is needed.
 *
 * @param {Element} layer The layer to listen on
 */
FastClick.notNeeded = function(layer) {
	'use strict';
	var metaViewport;
	var chromeVersion;
	var blackberryVersion;

	// Devices that don't support touch don't need FastClick
	if (typeof window.ontouchstart === 'undefined') {
		return true;
	}

	// Chrome version - zero for other browsers
	chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

	if (chromeVersion) {

		if (deviceIsAndroid) {
			metaViewport = document.querySelector('meta[name=viewport]');

			if (metaViewport) {
				// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
				if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
					return true;
				}
				// Chrome 32 and above with width=device-width or less don't need FastClick
				if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
					return true;
				}
			}

		// Chrome desktop doesn't need FastClick (issue #15)
		} else {
			return true;
		}
	}

	if (deviceIsBlackBerry10) {
		blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

		// BlackBerry 10.3+ does not require Fastclick library.
		// https://github.com/ftlabs/fastclick/issues/251
		if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
			metaViewport = document.querySelector('meta[name=viewport]');

			if (metaViewport) {
				// user-scalable=no eliminates click delay.
				if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
					return true;
				}
				// width=device-width (or less than device-width) eliminates click delay.
				if (document.documentElement.scrollWidth <= window.outerWidth) {
					return true;
				}
			}
		}
	}

	// IE10 with -ms-touch-action: none, which disables double-tap-to-zoom (issue #97)
	if (layer.style.msTouchAction === 'none') {
		return true;
	}

	return false;
};


/**
 * Factory method for creating a FastClick object
 *
 * @param {Element} layer The layer to listen on
 * @param {Object} options The options to override the defaults
 */
FastClick.attach = function(layer, options) {
	'use strict';
	return new FastClick(layer, options);
};


if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {

	// AMD. Register as an anonymous module.
	define(function() {
		'use strict';
		return FastClick;
	});
} else if (typeof module !== 'undefined' && module.exports) {
	module.exports = FastClick.attach;
	module.exports.FastClick = FastClick;
} else {
	window.FastClick = FastClick;
}

},{}],101:[function(require,module,exports){
/*! @license Firebase v2.0.4 - License: https://www.firebase.com/terms/terms-of-service.html */ (function() {var h,aa=this;function n(a){return void 0!==a}function ba(){}function ca(a){a.Qb=function(){return a.ef?a.ef:a.ef=new a}}
function da(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";
else if("function"==b&&"undefined"==typeof a.call)return"object";return b}function ea(a){return"array"==da(a)}function fa(a){var b=da(a);return"array"==b||"object"==b&&"number"==typeof a.length}function p(a){return"string"==typeof a}function ga(a){return"number"==typeof a}function ha(a){return"function"==da(a)}function ia(a){var b=typeof a;return"object"==b&&null!=a||"function"==b}function ja(a,b,c){return a.call.apply(a.bind,arguments)}
function ka(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function q(a,b,c){q=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?ja:ka;return q.apply(null,arguments)}
function la(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}}var ma=Date.now||function(){return+new Date};function na(a,b){function c(){}c.prototype=b.prototype;a.oc=b.prototype;a.prototype=new c;a.Ag=function(a,c,f){return b.prototype[c].apply(a,Array.prototype.slice.call(arguments,2))}};function oa(a){a=String(a);if(/^\s*$/.test(a)?0:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,"")))try{return eval("("+a+")")}catch(b){}throw Error("Invalid JSON string: "+a);}function pa(){this.Id=void 0}
function qa(a,b,c){switch(typeof b){case "string":ra(b,c);break;case "number":c.push(isFinite(b)&&!isNaN(b)?b:"null");break;case "boolean":c.push(b);break;case "undefined":c.push("null");break;case "object":if(null==b){c.push("null");break}if(ea(b)){var d=b.length;c.push("[");for(var e="",f=0;f<d;f++)c.push(e),e=b[f],qa(a,a.Id?a.Id.call(b,String(f),e):e,c),e=",";c.push("]");break}c.push("{");d="";for(f in b)Object.prototype.hasOwnProperty.call(b,f)&&(e=b[f],"function"!=typeof e&&(c.push(d),ra(f,c),
c.push(":"),qa(a,a.Id?a.Id.call(b,f,e):e,c),d=","));c.push("}");break;case "function":break;default:throw Error("Unknown type: "+typeof b);}}var sa={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},ta=/\uffff/.test("\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g;
function ra(a,b){b.push('"',a.replace(ta,function(a){if(a in sa)return sa[a];var b=a.charCodeAt(0),e="\\u";16>b?e+="000":256>b?e+="00":4096>b&&(e+="0");return sa[a]=e+b.toString(16)}),'"')};function ua(a){return"undefined"!==typeof JSON&&n(JSON.parse)?JSON.parse(a):oa(a)}function t(a){if("undefined"!==typeof JSON&&n(JSON.stringify))a=JSON.stringify(a);else{var b=[];qa(new pa,a,b);a=b.join("")}return a};function u(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function v(a,b){if(Object.prototype.hasOwnProperty.call(a,b))return a[b]}function va(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])}function wa(a){var b={};va(a,function(a,d){b[a]=d});return b};function xa(a){this.xc=a;this.Hd="firebase:"}h=xa.prototype;h.set=function(a,b){null==b?this.xc.removeItem(this.Hd+a):this.xc.setItem(this.Hd+a,t(b))};h.get=function(a){a=this.xc.getItem(this.Hd+a);return null==a?null:ua(a)};h.remove=function(a){this.xc.removeItem(this.Hd+a)};h.ff=!1;h.toString=function(){return this.xc.toString()};function ya(){this.ia={}}ya.prototype.set=function(a,b){null==b?delete this.ia[a]:this.ia[a]=b};ya.prototype.get=function(a){return u(this.ia,a)?this.ia[a]:null};ya.prototype.remove=function(a){delete this.ia[a]};ya.prototype.ff=!0;function za(a){try{if("undefined"!==typeof window&&"undefined"!==typeof window[a]){var b=window[a];b.setItem("firebase:sentinel","cache");b.removeItem("firebase:sentinel");return new xa(b)}}catch(c){}return new ya}var Aa=za("localStorage"),Ba=za("sessionStorage");function Ca(a,b,c,d,e){this.host=a.toLowerCase();this.domain=this.host.substr(this.host.indexOf(".")+1);this.Cb=b;this.yb=c;this.yg=d;this.Gd=e||"";this.Ka=Aa.get("host:"+a)||this.host}function Da(a,b){b!==a.Ka&&(a.Ka=b,"s-"===a.Ka.substr(0,2)&&Aa.set("host:"+a.host,a.Ka))}Ca.prototype.toString=function(){var a=(this.Cb?"https://":"http://")+this.host;this.Gd&&(a+="<"+this.Gd+">");return a};function Ea(){this.Ta=-1};function Fa(){this.Ta=-1;this.Ta=64;this.R=[];this.be=[];this.Af=[];this.Dd=[];this.Dd[0]=128;for(var a=1;a<this.Ta;++a)this.Dd[a]=0;this.Rd=this.Tb=0;this.reset()}na(Fa,Ea);Fa.prototype.reset=function(){this.R[0]=1732584193;this.R[1]=4023233417;this.R[2]=2562383102;this.R[3]=271733878;this.R[4]=3285377520;this.Rd=this.Tb=0};
function Ga(a,b,c){c||(c=0);var d=a.Af;if(p(b))for(var e=0;16>e;e++)d[e]=b.charCodeAt(c)<<24|b.charCodeAt(c+1)<<16|b.charCodeAt(c+2)<<8|b.charCodeAt(c+3),c+=4;else for(e=0;16>e;e++)d[e]=b[c]<<24|b[c+1]<<16|b[c+2]<<8|b[c+3],c+=4;for(e=16;80>e;e++){var f=d[e-3]^d[e-8]^d[e-14]^d[e-16];d[e]=(f<<1|f>>>31)&4294967295}b=a.R[0];c=a.R[1];for(var g=a.R[2],k=a.R[3],l=a.R[4],m,e=0;80>e;e++)40>e?20>e?(f=k^c&(g^k),m=1518500249):(f=c^g^k,m=1859775393):60>e?(f=c&g|k&(c|g),m=2400959708):(f=c^g^k,m=3395469782),f=(b<<
5|b>>>27)+f+l+m+d[e]&4294967295,l=k,k=g,g=(c<<30|c>>>2)&4294967295,c=b,b=f;a.R[0]=a.R[0]+b&4294967295;a.R[1]=a.R[1]+c&4294967295;a.R[2]=a.R[2]+g&4294967295;a.R[3]=a.R[3]+k&4294967295;a.R[4]=a.R[4]+l&4294967295}
Fa.prototype.update=function(a,b){n(b)||(b=a.length);for(var c=b-this.Ta,d=0,e=this.be,f=this.Tb;d<b;){if(0==f)for(;d<=c;)Ga(this,a,d),d+=this.Ta;if(p(a))for(;d<b;){if(e[f]=a.charCodeAt(d),++f,++d,f==this.Ta){Ga(this,e);f=0;break}}else for(;d<b;)if(e[f]=a[d],++f,++d,f==this.Ta){Ga(this,e);f=0;break}}this.Tb=f;this.Rd+=b};function Ha(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^ma()).toString(36)};var w=Array.prototype,Ia=w.indexOf?function(a,b,c){return w.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(p(a))return p(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},Ja=w.forEach?function(a,b,c){w.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},Ka=w.filter?function(a,b,c){return w.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=p(a)?
a.split(""):a,k=0;k<d;k++)if(k in g){var l=g[k];b.call(c,l,k,a)&&(e[f++]=l)}return e},La=w.map?function(a,b,c){return w.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=p(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},Ma=w.reduce?function(a,b,c,d){d&&(b=q(b,d));return w.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;Ja(a,function(c,g){e=b.call(d,e,c,g,a)});return e},Na=w.every?function(a,b,c){return w.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=
p(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};function Oa(a,b){var c=Pa(a,b,void 0);return 0>c?null:p(a)?a.charAt(c):a[c]}function Pa(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}function Qa(a,b){var c=Ia(a,b);0<=c&&w.splice.call(a,c,1)}function Ra(a,b,c,d){return w.splice.apply(a,Sa(arguments,1))}function Sa(a,b,c){return 2>=arguments.length?w.slice.call(a,b):w.slice.call(a,b,c)}
function Ta(a,b){a.sort(b||Ua)}function Ua(a,b){return a>b?1:a<b?-1:0};var Va;a:{var Wa=aa.navigator;if(Wa){var Xa=Wa.userAgent;if(Xa){Va=Xa;break a}}Va=""}function Ya(a){return-1!=Va.indexOf(a)};var Za=Ya("Opera")||Ya("OPR"),$a=Ya("Trident")||Ya("MSIE"),ab=Ya("Gecko")&&-1==Va.toLowerCase().indexOf("webkit")&&!(Ya("Trident")||Ya("MSIE")),bb=-1!=Va.toLowerCase().indexOf("webkit");(function(){var a="",b;if(Za&&aa.opera)return a=aa.opera.version,ha(a)?a():a;ab?b=/rv\:([^\);]+)(\)|;)/:$a?b=/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/:bb&&(b=/WebKit\/(\S+)/);b&&(a=(a=b.exec(Va))?a[1]:"");return $a&&(b=(b=aa.document)?b.documentMode:void 0,b>parseFloat(a))?String(b):a})();var cb=null,db=null,eb=null;function fb(a,b){if(!fa(a))throw Error("encodeByteArray takes an array as a parameter");gb();for(var c=b?db:cb,d=[],e=0;e<a.length;e+=3){var f=a[e],g=e+1<a.length,k=g?a[e+1]:0,l=e+2<a.length,m=l?a[e+2]:0,r=f>>2,f=(f&3)<<4|k>>4,k=(k&15)<<2|m>>6,m=m&63;l||(m=64,g||(k=64));d.push(c[r],c[f],c[k],c[m])}return d.join("")}
function gb(){if(!cb){cb={};db={};eb={};for(var a=0;65>a;a++)cb[a]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a),db[a]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a),eb[db[a]]=a}};var hb=function(){var a=1;return function(){return a++}}();function x(a,b){if(!a)throw ib(b);}function ib(a){return Error("Firebase INTERNAL ASSERT FAILED:"+a)}
function jb(a){try{var b;if("undefined"!==typeof atob)b=atob(a);else{gb();for(var c=eb,d=[],e=0;e<a.length;){var f=c[a.charAt(e++)],g=e<a.length?c[a.charAt(e)]:0;++e;var k=e<a.length?c[a.charAt(e)]:64;++e;var l=e<a.length?c[a.charAt(e)]:64;++e;if(null==f||null==g||null==k||null==l)throw Error();d.push(f<<2|g>>4);64!=k&&(d.push(g<<4&240|k>>2),64!=l&&d.push(k<<6&192|l))}if(8192>d.length)b=String.fromCharCode.apply(null,d);else{a="";for(c=0;c<d.length;c+=8192)a+=String.fromCharCode.apply(null,Sa(d,c,
c+8192));b=a}}return b}catch(m){kb("base64Decode failed: ",m)}return null}function lb(a){var b=mb(a);a=new Fa;a.update(b);var b=[],c=8*a.Rd;56>a.Tb?a.update(a.Dd,56-a.Tb):a.update(a.Dd,a.Ta-(a.Tb-56));for(var d=a.Ta-1;56<=d;d--)a.be[d]=c&255,c/=256;Ga(a,a.be);for(d=c=0;5>d;d++)for(var e=24;0<=e;e-=8)b[c]=a.R[d]>>e&255,++c;return fb(b)}
function nb(a){for(var b="",c=0;c<arguments.length;c++)b=fa(arguments[c])?b+nb.apply(null,arguments[c]):"object"===typeof arguments[c]?b+t(arguments[c]):b+arguments[c],b+=" ";return b}var ob=null,pb=!0;function kb(a){!0===pb&&(pb=!1,null===ob&&!0===Ba.get("logging_enabled")&&qb(!0));if(ob){var b=nb.apply(null,arguments);ob(b)}}function rb(a){return function(){kb(a,arguments)}}
function sb(a){if("undefined"!==typeof console){var b="FIREBASE INTERNAL ERROR: "+nb.apply(null,arguments);"undefined"!==typeof console.error?console.error(b):console.log(b)}}function tb(a){var b=nb.apply(null,arguments);throw Error("FIREBASE FATAL ERROR: "+b);}function z(a){if("undefined"!==typeof console){var b="FIREBASE WARNING: "+nb.apply(null,arguments);"undefined"!==typeof console.warn?console.warn(b):console.log(b)}}
function ub(a){var b="",c="",d="",e=!0,f="https",g="";if(p(a)){var k=a.indexOf("//");0<=k&&(f=a.substring(0,k-1),a=a.substring(k+2));k=a.indexOf("/");-1===k&&(k=a.length);b=a.substring(0,k);a=a.substring(k+1);var l=b.split(".");if(3===l.length){k=l[2].indexOf(":");e=0<=k?"https"===f||"wss"===f:!0;c=l[1];d=l[0];g="";a=("/"+a).split("/");for(k=0;k<a.length;k++)if(0<a[k].length){l=a[k];try{l=decodeURIComponent(l.replace(/\+/g," "))}catch(m){}g+="/"+l}d=d.toLowerCase()}else 2===l.length&&(c=l[0])}return{host:b,
domain:c,vg:d,Cb:e,scheme:f,Pc:g}}function vb(a){return ga(a)&&(a!=a||a==Number.POSITIVE_INFINITY||a==Number.NEGATIVE_INFINITY)}
function wb(a){if("complete"===document.readyState)a();else{var b=!1,c=function(){document.body?b||(b=!0,a()):setTimeout(c,Math.floor(10))};document.addEventListener?(document.addEventListener("DOMContentLoaded",c,!1),window.addEventListener("load",c,!1)):document.attachEvent&&(document.attachEvent("onreadystatechange",function(){"complete"===document.readyState&&c()}),window.attachEvent("onload",c))}}
function xb(a,b){if(a===b)return 0;if("[MIN_NAME]"===a||"[MAX_NAME]"===b)return-1;if("[MIN_NAME]"===b||"[MAX_NAME]"===a)return 1;var c=yb(a),d=yb(b);return null!==c?null!==d?0==c-d?a.length-b.length:c-d:-1:null!==d?1:a<b?-1:1}function zb(a,b){if(b&&a in b)return b[a];throw Error("Missing required key ("+a+") in object: "+t(b));}
function Ab(a){if("object"!==typeof a||null===a)return t(a);var b=[],c;for(c in a)b.push(c);b.sort();c="{";for(var d=0;d<b.length;d++)0!==d&&(c+=","),c+=t(b[d]),c+=":",c+=Ab(a[b[d]]);return c+"}"}function Bb(a,b){if(a.length<=b)return[a];for(var c=[],d=0;d<a.length;d+=b)d+b>a?c.push(a.substring(d,a.length)):c.push(a.substring(d,d+b));return c}function Cb(a,b){if(ea(a))for(var c=0;c<a.length;++c)b(c,a[c]);else A(a,b)}
function Db(a){x(!vb(a),"Invalid JSON number");var b,c,d,e;0===a?(d=c=0,b=-Infinity===1/a?1:0):(b=0>a,a=Math.abs(a),a>=Math.pow(2,-1022)?(d=Math.min(Math.floor(Math.log(a)/Math.LN2),1023),c=d+1023,d=Math.round(a*Math.pow(2,52-d)-Math.pow(2,52))):(c=0,d=Math.round(a/Math.pow(2,-1074))));e=[];for(a=52;a;a-=1)e.push(d%2?1:0),d=Math.floor(d/2);for(a=11;a;a-=1)e.push(c%2?1:0),c=Math.floor(c/2);e.push(b?1:0);e.reverse();b=e.join("");c="";for(a=0;64>a;a+=8)d=parseInt(b.substr(a,8),2).toString(16),1===d.length&&
(d="0"+d),c+=d;return c.toLowerCase()}var Eb=/^-?\d{1,10}$/;function yb(a){return Eb.test(a)&&(a=Number(a),-2147483648<=a&&2147483647>=a)?a:null}function Fb(a){try{a()}catch(b){setTimeout(function(){throw b;},Math.floor(0))}}function B(a,b){if(ha(a)){var c=Array.prototype.slice.call(arguments,1).slice();Fb(function(){a.apply(null,c)})}};function Gb(a,b,c,d){this.me=b;this.Ld=c;this.Rc=d;this.nd=a}Gb.prototype.Rb=function(){var a=this.Ld.hc();return"value"===this.nd?a.path:a.parent().path};Gb.prototype.oe=function(){return this.nd};Gb.prototype.Pb=function(){return this.me.Pb(this)};Gb.prototype.toString=function(){return this.Rb().toString()+":"+this.nd+":"+t(this.Ld.Xe())};function Hb(a,b,c){this.me=a;this.error=b;this.path=c}Hb.prototype.Rb=function(){return this.path};Hb.prototype.oe=function(){return"cancel"};
Hb.prototype.Pb=function(){return this.me.Pb(this)};Hb.prototype.toString=function(){return this.path.toString()+":cancel"};function Ib(a,b,c){this.Kb=a;this.mb=b;this.vc=c||null}h=Ib.prototype;h.pf=function(a){return"value"===a};h.createEvent=function(a,b){var c=b.w.m;return new Gb("value",this,new C(a.Wa,b.hc(),c))};h.Pb=function(a){var b=this.vc;if("cancel"===a.oe()){x(this.mb,"Raising a cancel event on a listener with no cancel callback");var c=this.mb;return function(){c.call(b,a.error)}}var d=this.Kb;return function(){d.call(b,a.Ld)}};h.Te=function(a,b){return this.mb?new Hb(this,a,b):null};
h.matches=function(a){return a instanceof Ib&&(!a.Kb||!this.Kb||a.Kb===this.Kb)&&a.vc===this.vc};h.cf=function(){return null!==this.Kb};function Jb(a,b,c){this.ca=a;this.mb=b;this.vc=c}h=Jb.prototype;h.pf=function(a){a="children_added"===a?"child_added":a;return("children_removed"===a?"child_removed":a)in this.ca};h.Te=function(a,b){return this.mb?new Hb(this,a,b):null};h.createEvent=function(a,b){var c=b.hc().k(a.nb);return new Gb(a.type,this,new C(a.Wa,c,b.w.m),a.Rc)};
h.Pb=function(a){var b=this.vc;if("cancel"===a.oe()){x(this.mb,"Raising a cancel event on a listener with no cancel callback");var c=this.mb;return function(){c.call(b,a.error)}}var d=this.ca[a.nd];return function(){d.call(b,a.Ld,a.Rc)}};h.matches=function(a){if(a instanceof Jb){if(this.ca&&a.ca){var b=Kb(a.ca);if(b===Kb(this.ca)){if(1===b){var b=Lb(a.ca),c=Lb(this.ca);return c===b&&(!a.ca[b]||!this.ca[c]||a.ca[b]===this.ca[c])}return Mb(this.ca,function(b,c){return a.ca[c]===b})}return!1}return!0}return!1};
h.cf=function(){return null!==this.ca};function mb(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);55296<=e&&56319>=e&&(e-=55296,d++,x(d<a.length,"Surrogate pair missing trail surrogate."),e=65536+(e<<10)+(a.charCodeAt(d)-56320));128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(65536>e?b[c++]=e>>12|224:(b[c++]=e>>18|240,b[c++]=e>>12&63|128),b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};function D(a,b,c,d){var e;d<b?e="at least "+b:d>c&&(e=0===c?"none":"no more than "+c);if(e)throw Error(a+" failed: Was called with "+d+(1===d?" argument.":" arguments.")+" Expects "+e+".");}function E(a,b,c){var d="";switch(b){case 1:d=c?"first":"First";break;case 2:d=c?"second":"Second";break;case 3:d=c?"third":"Third";break;case 4:d=c?"fourth":"Fourth";break;default:throw Error("errorPrefix called with argumentNumber > 4.  Need to update it?");}return a=a+" failed: "+(d+" argument ")}
function F(a,b,c,d){if((!d||n(c))&&!ha(c))throw Error(E(a,b,d)+"must be a valid function.");}function Nb(a,b,c){if(n(c)&&(!ia(c)||null===c))throw Error(E(a,b,!0)+"must be a valid context object.");};var Ob=/[\[\].#$\/\u0000-\u001F\u007F]/,Pb=/[\[\].#$\u0000-\u001F\u007F]/;function Qb(a){return p(a)&&0!==a.length&&!Ob.test(a)}function Rb(a){return null===a||p(a)||ga(a)&&!vb(a)||ia(a)&&u(a,".sv")}function Sb(a,b,c){c&&!n(b)||Tb(E(a,1,c),b)}
function Tb(a,b,c,d){c||(c=0);d=d||[];if(!n(b))throw Error(a+"contains undefined"+Ub(d));if(ha(b))throw Error(a+"contains a function"+Ub(d)+" with contents: "+b.toString());if(vb(b))throw Error(a+"contains "+b.toString()+Ub(d));if(1E3<c)throw new TypeError(a+"contains a cyclic object value ("+d.slice(0,100).join(".")+"...)");if(p(b)&&b.length>10485760/3&&10485760<mb(b).length)throw Error(a+"contains a string greater than 10485760 utf8 bytes"+Ub(d)+" ('"+b.substring(0,50)+"...')");if(ia(b))for(var e in b)if(u(b,
e)){var f=b[e];if(".priority"!==e&&".value"!==e&&".sv"!==e&&!Qb(e))throw Error(a+" contains an invalid key ("+e+")"+Ub(d)+'.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');d.push(e);Tb(a,f,c+1,d);d.pop()}}function Ub(a){return 0==a.length?"":" in property '"+a.join(".")+"'"}function Vb(a,b){if(!ia(b)||ea(b))throw Error(E(a,1,!1)+" must be an Object containing the children to replace.");Sb(a,b,!1)}
function Wb(a,b,c){if(vb(c))throw Error(E(a,b,!1)+"is "+c.toString()+", but must be a valid Firebase priority (a string, finite number, server value, or null).");if(!Rb(c))throw Error(E(a,b,!1)+"must be a valid Firebase priority (a string, finite number, server value, or null).");}
function Xb(a,b,c){if(!c||n(b))switch(b){case "value":case "child_added":case "child_removed":case "child_changed":case "child_moved":break;default:throw Error(E(a,1,c)+'must be a valid event type: "value", "child_added", "child_removed", "child_changed", or "child_moved".');}}function Yb(a,b,c,d){if((!d||n(c))&&!Qb(c))throw Error(E(a,b,d)+'was an invalid key: "'+c+'".  Firebase keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").');}
function Zb(a,b){if(!p(b)||0===b.length||Pb.test(b))throw Error(E(a,1,!1)+'was an invalid path: "'+b+'". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"');}function $b(a,b){if(".info"===G(b))throw Error(a+" failed: Can't modify data under /.info/");}function ac(a,b){if(!p(b))throw Error(E(a,1,!1)+"must be a valid credential (a string).");}function bc(a,b,c){if(!p(c))throw Error(E(a,b,!1)+"must be a valid string.");}
function cc(a,b,c,d){if(!d||n(c))if(!ia(c)||null===c)throw Error(E(a,b,d)+"must be a valid object.");}function dc(a,b,c){if(!ia(b)||null===b||!u(b,c))throw Error(E(a,1,!1)+'must contain the key "'+c+'"');if(!p(v(b,c)))throw Error(E(a,1,!1)+'must contain the key "'+c+'" with type "string"');};function ec(a,b){return xb(a.name,b.name)}function fc(a,b){return xb(a,b)};function gc(){}var hc={};function H(a){return q(a.compare,a)}gc.prototype.df=function(a,b){return 0!==this.compare(new I("[MIN_NAME]",a),new I("[MIN_NAME]",b))};gc.prototype.Ae=function(){return ic};function jc(a){this.Vb=a}na(jc,gc);h=jc.prototype;h.se=function(a){return!a.B(this.Vb).e()};h.compare=function(a,b){var c=a.K.B(this.Vb),d=b.K.B(this.Vb),c=c.he(d);return 0===c?xb(a.name,b.name):c};h.ye=function(a,b){var c=J(a),c=K.I(this.Vb,c);return new I(b,c)};
h.ze=function(){var a=K.I(this.Vb,kc);return new I("[MAX_NAME]",a)};h.toString=function(){return this.Vb};var L=new jc(".priority");function lc(){}na(lc,gc);h=lc.prototype;h.compare=function(a,b){return xb(a.name,b.name)};h.se=function(){throw ib("KeyIndex.isDefinedOn not expected to be called.");};h.df=function(){return!1};h.Ae=function(){return ic};h.ze=function(){return new I("[MAX_NAME]",K)};h.ye=function(a){x(p(a),"KeyIndex indexValue must always be a string.");return new I(a,K)};
h.toString=function(){return".key"};var mc=new lc;function nc(){this.yc=this.na=this.nc=this.ha=this.ka=!1;this.xb=0;this.Hb="";this.Bc=null;this.Xb="";this.Ac=null;this.Ub="";this.m=L}var oc=new nc;function pc(a){x(a.ha,"Only valid if start has been set");return a.Bc}function qc(a){x(a.ha,"Only valid if start has been set");return a.nc?a.Xb:"[MIN_NAME]"}function rc(a){x(a.na,"Only valid if end has been set");return a.Ac}function sc(a){x(a.na,"Only valid if end has been set");return a.yc?a.Ub:"[MAX_NAME]"}
function tc(a){x(a.ka,"Only valid if limit has been set");return a.xb}function uc(a){var b=new nc;b.ka=a.ka;b.xb=a.xb;b.ha=a.ha;b.Bc=a.Bc;b.nc=a.nc;b.Xb=a.Xb;b.na=a.na;b.Ac=a.Ac;b.yc=a.yc;b.Ub=a.Ub;b.m=a.m;return b}h=nc.prototype;h.ve=function(a){var b=uc(this);b.ka=!0;b.xb=a;b.Hb="";return b};h.we=function(a){var b=uc(this);b.ka=!0;b.xb=a;b.Hb="l";return b};h.xe=function(a){var b=uc(this);b.ka=!0;b.xb=a;b.Hb="r";return b};
h.Md=function(a,b){var c=uc(this);c.ha=!0;c.Bc=a;null!=b?(c.nc=!0,c.Xb=b):(c.nc=!1,c.Xb="");return c};h.md=function(a,b){var c=uc(this);c.na=!0;c.Ac=a;n(b)?(c.yc=!0,c.Ub=b):(c.Dg=!1,c.Ub="");return c};function vc(a,b){var c=uc(a);c.m=b;return c}function wc(a){return!(a.ha||a.na||a.ka)};function M(a,b,c,d){this.g=a;this.path=b;this.w=c;this.dc=d}
function xc(a){var b=null,c=null;a.ha&&(b=pc(a));a.na&&(c=rc(a));if(a.m===mc){if(a.ha){if("[MIN_NAME]"!=qc(a))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if(null!=b&&"string"!==typeof b)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");}if(a.na){if("[MAX_NAME]"!=sc(a))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if(null!=
c&&"string"!==typeof c)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");}}else if(a.m===L){if(null!=b&&!Rb(b)||null!=c&&!Rb(c))throw Error("Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).");}else if(x(a.m instanceof jc,"unknown index type."),null!=b&&"object"===typeof b||null!=c&&"object"===typeof c)throw Error("Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.");
}function yc(a){if(a.ha&&a.na&&a.ka&&(!a.ka||""===a.Hb))throw Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");}function zc(a,b){if(!0===a.dc)throw Error(b+": You can't combine multiple orderBy calls.");}M.prototype.hc=function(){D("Query.ref",0,0,arguments.length);return new O(this.g,this.path)};M.prototype.ref=M.prototype.hc;
M.prototype.zb=function(a,b,c,d){D("Query.on",2,4,arguments.length);Xb("Query.on",a,!1);F("Query.on",2,b,!1);var e=Ac("Query.on",c,d);if("value"===a)Bc(this.g,this,new Ib(b,e.cancel||null,e.Ha||null));else{var f={};f[a]=b;Bc(this.g,this,new Jb(f,e.cancel,e.Ha))}return b};M.prototype.on=M.prototype.zb;
M.prototype.bc=function(a,b,c){D("Query.off",0,3,arguments.length);Xb("Query.off",a,!0);F("Query.off",2,b,!0);Nb("Query.off",3,c);var d=null,e=null;"value"===a?d=new Ib(b||null,null,c||null):a&&(b&&(e={},e[a]=b),d=new Jb(e,null,c||null));e=this.g;d=".info"===G(this.path)?e.ud.hb(this,d):e.M.hb(this,d);Cc(e.Z,this.path,d)};M.prototype.off=M.prototype.bc;
M.prototype.gg=function(a,b){function c(g){f&&(f=!1,e.bc(a,c),b.call(d.Ha,g))}D("Query.once",2,4,arguments.length);Xb("Query.once",a,!1);F("Query.once",2,b,!1);var d=Ac("Query.once",arguments[2],arguments[3]),e=this,f=!0;this.zb(a,c,function(b){e.bc(a,c);d.cancel&&d.cancel.call(d.Ha,b)})};M.prototype.once=M.prototype.gg;
M.prototype.ve=function(a){z("Query.limit() being deprecated. Please use Query.limitToFirst() or Query.limitToLast() instead.");D("Query.limit",1,1,arguments.length);if(!ga(a)||Math.floor(a)!==a||0>=a)throw Error("Query.limit: First argument must be a positive integer.");if(this.w.ka)throw Error("Query.limit: Limit was already set (by another call to limit, limitToFirst, orlimitToLast.");var b=this.w.ve(a);yc(b);return new M(this.g,this.path,b,this.dc)};M.prototype.limit=M.prototype.ve;
M.prototype.we=function(a){D("Query.limitToFirst",1,1,arguments.length);if(!ga(a)||Math.floor(a)!==a||0>=a)throw Error("Query.limitToFirst: First argument must be a positive integer.");if(this.w.ka)throw Error("Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new M(this.g,this.path,this.w.we(a),this.dc)};M.prototype.limitToFirst=M.prototype.we;
M.prototype.xe=function(a){D("Query.limitToLast",1,1,arguments.length);if(!ga(a)||Math.floor(a)!==a||0>=a)throw Error("Query.limitToLast: First argument must be a positive integer.");if(this.w.ka)throw Error("Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new M(this.g,this.path,this.w.xe(a),this.dc)};M.prototype.limitToLast=M.prototype.xe;
M.prototype.hg=function(a){D("Query.orderByChild",1,1,arguments.length);if("$key"===a)throw Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');if("$priority"===a)throw Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');Yb("Query.orderByChild",1,a,!1);zc(this,"Query.orderByChild");var b=vc(this.w,new jc(a));xc(b);return new M(this.g,this.path,b,!0)};M.prototype.orderByChild=M.prototype.hg;
M.prototype.ig=function(){D("Query.orderByKey",0,0,arguments.length);zc(this,"Query.orderByKey");var a=vc(this.w,mc);xc(a);return new M(this.g,this.path,a,!0)};M.prototype.orderByKey=M.prototype.ig;M.prototype.jg=function(){D("Query.orderByPriority",0,0,arguments.length);zc(this,"Query.orderByPriority");var a=vc(this.w,L);xc(a);return new M(this.g,this.path,a,!0)};M.prototype.orderByPriority=M.prototype.jg;
M.prototype.Md=function(a,b){D("Query.startAt",0,2,arguments.length);Sb("Query.startAt",a,!0);Yb("Query.startAt",2,b,!0);var c=this.w.Md(a,b);yc(c);xc(c);if(this.w.ha)throw Error("Query.startAt: Starting point was already set (by another call to startAt or equalTo).");n(a)||(b=a=null);return new M(this.g,this.path,c,this.dc)};M.prototype.startAt=M.prototype.Md;
M.prototype.md=function(a,b){D("Query.endAt",0,2,arguments.length);Sb("Query.endAt",a,!0);Yb("Query.endAt",2,b,!0);var c=this.w.md(a,b);yc(c);xc(c);if(this.w.na)throw Error("Query.endAt: Ending point was already set (by another call to endAt or equalTo).");return new M(this.g,this.path,c,this.dc)};M.prototype.endAt=M.prototype.md;
M.prototype.Of=function(a,b){D("Query.equalTo",1,2,arguments.length);Sb("Query.equalTo",a,!1);Yb("Query.equalTo",2,b,!0);if(this.w.ha)throw Error("Query.equalTo: Starting point was already set (by another call to endAt or equalTo).");if(this.w.na)throw Error("Query.equalTo: Ending point was already set (by another call to endAt or equalTo).");return this.Md(a,b).md(a,b)};M.prototype.equalTo=M.prototype.Of;
function Dc(a){a=a.w;var b={};a.ha&&(b.sp=a.Bc,a.nc&&(b.sn=a.Xb));a.na&&(b.ep=a.Ac,a.yc&&(b.en=a.Ub));if(a.ka){b.l=a.xb;var c=a.Hb;""===c&&(c=a.ha?"l":"r");b.vf=c}a.m!==L&&(b.i=a.m.toString());return b}M.prototype.Da=function(){var a=Ab(Dc(this));return"{}"===a?"default":a};
function Ac(a,b,c){var d={cancel:null,Ha:null};if(b&&c)d.cancel=b,F(a,3,d.cancel,!0),d.Ha=c,Nb(a,4,d.Ha);else if(b)if("object"===typeof b&&null!==b)d.Ha=b;else if("function"===typeof b)d.cancel=b;else throw Error(E(a,3,!0)+" must either be a cancel callback or a context object.");return d};function P(a,b){if(1==arguments.length){this.n=a.split("/");for(var c=0,d=0;d<this.n.length;d++)0<this.n[d].length&&(this.n[c]=this.n[d],c++);this.n.length=c;this.ba=0}else this.n=a,this.ba=b}function G(a){return a.ba>=a.n.length?null:a.n[a.ba]}function Q(a){return a.n.length-a.ba}function R(a){var b=a.ba;b<a.n.length&&b++;return new P(a.n,b)}P.prototype.toString=function(){for(var a="",b=this.ba;b<this.n.length;b++)""!==this.n[b]&&(a+="/"+this.n[b]);return a||"/"};
P.prototype.parent=function(){if(this.ba>=this.n.length)return null;for(var a=[],b=this.ba;b<this.n.length-1;b++)a.push(this.n[b]);return new P(a,0)};P.prototype.k=function(a){for(var b=[],c=this.ba;c<this.n.length;c++)b.push(this.n[c]);if(a instanceof P)for(c=a.ba;c<a.n.length;c++)b.push(a.n[c]);else for(a=a.split("/"),c=0;c<a.length;c++)0<a[c].length&&b.push(a[c]);return new P(b,0)};P.prototype.e=function(){return this.ba>=this.n.length};var S=new P("");
function T(a,b){var c=G(a);if(null===c)return b;if(c===G(b))return T(R(a),R(b));throw Error("INTERNAL ERROR: innerPath ("+b+") is not within outerPath ("+a+")");}P.prototype.da=function(a){if(Q(this)!==Q(a))return!1;for(var b=this.ba,c=a.ba;b<=this.n.length;b++,c++)if(this.n[b]!==a.n[c])return!1;return!0};P.prototype.contains=function(a){var b=this.ba,c=a.ba;if(Q(this)>Q(a))return!1;for(;b<this.n.length;){if(this.n[b]!==a.n[c])return!1;++b;++c}return!0};function Ec(){this.children={};this.dd=0;this.value=null}function Fc(a,b,c){this.yd=a?a:"";this.Oc=b?b:null;this.D=c?c:new Ec}function Gc(a,b){for(var c=b instanceof P?b:new P(b),d=a,e;null!==(e=G(c));)d=new Fc(e,d,v(d.D.children,e)||new Ec),c=R(c);return d}h=Fc.prototype;h.ta=function(){return this.D.value};function Hc(a,b){x("undefined"!==typeof b,"Cannot set value to undefined");a.D.value=b;Ic(a)}h.clear=function(){this.D.value=null;this.D.children={};this.D.dd=0;Ic(this)};
h.pd=function(){return 0<this.D.dd};h.e=function(){return null===this.ta()&&!this.pd()};h.ea=function(a){var b=this;A(this.D.children,function(c,d){a(new Fc(d,b,c))})};function Jc(a,b,c,d){c&&!d&&b(a);a.ea(function(a){Jc(a,b,!0,d)});c&&d&&b(a)}function Kc(a,b){for(var c=a.parent();null!==c&&!b(c);)c=c.parent()}h.path=function(){return new P(null===this.Oc?this.yd:this.Oc.path()+"/"+this.yd)};h.name=function(){return this.yd};h.parent=function(){return this.Oc};
function Ic(a){if(null!==a.Oc){var b=a.Oc,c=a.yd,d=a.e(),e=u(b.D.children,c);d&&e?(delete b.D.children[c],b.D.dd--,Ic(b)):d||e||(b.D.children[c]=a.D,b.D.dd++,Ic(b))}};function Lc(a,b){this.Ga=a;this.pa=b?b:Mc}h=Lc.prototype;h.Ja=function(a,b){return new Lc(this.Ga,this.pa.Ja(a,b,this.Ga).W(null,null,!1,null,null))};h.remove=function(a){return new Lc(this.Ga,this.pa.remove(a,this.Ga).W(null,null,!1,null,null))};h.get=function(a){for(var b,c=this.pa;!c.e();){b=this.Ga(a,c.key);if(0===b)return c.value;0>b?c=c.left:0<b&&(c=c.right)}return null};
function Nc(a,b){for(var c,d=a.pa,e=null;!d.e();){c=a.Ga(b,d.key);if(0===c){if(d.left.e())return e?e.key:null;for(d=d.left;!d.right.e();)d=d.right;return d.key}0>c?d=d.left:0<c&&(e=d,d=d.right)}throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?");}h.e=function(){return this.pa.e()};h.count=function(){return this.pa.count()};h.Ic=function(){return this.pa.Ic()};h.Zb=function(){return this.pa.Zb()};h.Ba=function(a){return this.pa.Ba(a)};
h.Aa=function(a){return new Oc(this.pa,null,this.Ga,!1,a)};h.rb=function(a,b){return new Oc(this.pa,a,this.Ga,!1,b)};h.Sb=function(a,b){return new Oc(this.pa,a,this.Ga,!0,b)};h.bf=function(a){return new Oc(this.pa,null,this.Ga,!0,a)};function Oc(a,b,c,d,e){this.qf=e||null;this.te=d;this.ac=[];for(e=1;!a.e();)if(e=b?c(a.key,b):1,d&&(e*=-1),0>e)a=this.te?a.left:a.right;else if(0===e){this.ac.push(a);break}else this.ac.push(a),a=this.te?a.right:a.left}
function U(a){if(0===a.ac.length)return null;var b=a.ac.pop(),c;c=a.qf?a.qf(b.key,b.value):{key:b.key,value:b.value};if(a.te)for(b=b.left;!b.e();)a.ac.push(b),b=b.right;else for(b=b.right;!b.e();)a.ac.push(b),b=b.left;return c}function Pc(a,b,c,d,e){this.key=a;this.value=b;this.color=null!=c?c:!0;this.left=null!=d?d:Mc;this.right=null!=e?e:Mc}h=Pc.prototype;h.W=function(a,b,c,d,e){return new Pc(null!=a?a:this.key,null!=b?b:this.value,null!=c?c:this.color,null!=d?d:this.left,null!=e?e:this.right)};
h.count=function(){return this.left.count()+1+this.right.count()};h.e=function(){return!1};h.Ba=function(a){return this.left.Ba(a)||a(this.key,this.value)||this.right.Ba(a)};function Qc(a){return a.left.e()?a:Qc(a.left)}h.Ic=function(){return Qc(this).key};h.Zb=function(){return this.right.e()?this.key:this.right.Zb()};h.Ja=function(a,b,c){var d,e;e=this;d=c(a,e.key);e=0>d?e.W(null,null,null,e.left.Ja(a,b,c),null):0===d?e.W(null,b,null,null,null):e.W(null,null,null,null,e.right.Ja(a,b,c));return Rc(e)};
function Sc(a){if(a.left.e())return Mc;a.left.aa()||a.left.left.aa()||(a=Tc(a));a=a.W(null,null,null,Sc(a.left),null);return Rc(a)}
h.remove=function(a,b){var c,d;c=this;if(0>b(a,c.key))c.left.e()||c.left.aa()||c.left.left.aa()||(c=Tc(c)),c=c.W(null,null,null,c.left.remove(a,b),null);else{c.left.aa()&&(c=Uc(c));c.right.e()||c.right.aa()||c.right.left.aa()||(c=Vc(c),c.left.left.aa()&&(c=Uc(c),c=Vc(c)));if(0===b(a,c.key)){if(c.right.e())return Mc;d=Qc(c.right);c=c.W(d.key,d.value,null,null,Sc(c.right))}c=c.W(null,null,null,null,c.right.remove(a,b))}return Rc(c)};h.aa=function(){return this.color};
function Rc(a){a.right.aa()&&!a.left.aa()&&(a=Wc(a));a.left.aa()&&a.left.left.aa()&&(a=Uc(a));a.left.aa()&&a.right.aa()&&(a=Vc(a));return a}function Tc(a){a=Vc(a);a.right.left.aa()&&(a=a.W(null,null,null,null,Uc(a.right)),a=Wc(a),a=Vc(a));return a}function Wc(a){return a.right.W(null,null,a.color,a.W(null,null,!0,null,a.right.left),null)}function Uc(a){return a.left.W(null,null,a.color,null,a.W(null,null,!0,a.left.right,null))}
function Vc(a){return a.W(null,null,!a.color,a.left.W(null,null,!a.left.color,null,null),a.right.W(null,null,!a.right.color,null,null))}function Xc(){}h=Xc.prototype;h.W=function(){return this};h.Ja=function(a,b){return new Pc(a,b,null)};h.remove=function(){return this};h.count=function(){return 0};h.e=function(){return!0};h.Ba=function(){return!1};h.Ic=function(){return null};h.Zb=function(){return null};h.aa=function(){return!1};var Mc=new Xc;function I(a,b){this.name=a;this.K=b}function Yc(a,b){return new I(a,b)};function Zc(a,b){this.A=a;x(null!==this.A,"LeafNode shouldn't be created with null value.");this.ga=b||K;$c(this.ga);this.wb=null}h=Zc.prototype;h.P=function(){return!0};h.O=function(){return this.ga};h.ib=function(a){return new Zc(this.A,a)};h.B=function(a){return".priority"===a?this.ga:K};h.$=function(a){return a.e()?this:".priority"===G(a)?this.ga:K};h.Y=function(){return!1};h.af=function(){return null};h.I=function(a,b){return".priority"===a?this.ib(b):K.I(a,b).ib(this.ga)};
h.L=function(a,b){var c=G(a);if(null===c)return b;x(".priority"!==c||1===Q(a),".priority must be the last token in a path");return this.I(c,K.L(R(a),b))};h.e=function(){return!1};h.Ua=function(){return 0};h.N=function(a){return a&&!this.O().e()?{".value":this.ta(),".priority":this.O().N()}:this.ta()};h.hash=function(){if(null===this.wb){var a="";this.ga.e()||(a+="priority:"+ad(this.ga.N())+":");var b=typeof this.A,a=a+(b+":"),a="number"===b?a+Db(this.A):a+this.A;this.wb=lb(a)}return this.wb};
h.ta=function(){return this.A};h.he=function(a){if(a===K)return 1;if(a instanceof bd)return-1;x(a.P(),"Unknown node type");var b=typeof a.A,c=typeof this.A,d=Ia(cd,b),e=Ia(cd,c);x(0<=d,"Unknown leaf type: "+b);x(0<=e,"Unknown leaf type: "+c);return d===e?"object"===c?0:this.A<a.A?-1:this.A===a.A?0:1:e-d};var cd=["object","boolean","number","string"];Zc.prototype.Wd=function(){return this};Zc.prototype.Yb=function(){return!0};
Zc.prototype.da=function(a){return a===this?!0:a.P()?this.A===a.A&&this.ga.da(a.ga):!1};Zc.prototype.toString=function(){return"string"===typeof this.A?this.A:'"'+this.A+'"'};function dd(a,b){this.td=a;this.Wb=b}dd.prototype.get=function(a){var b=v(this.td,a);if(!b)throw Error("No index defined for "+a);return b===hc?null:b};function ed(a,b,c){var d=fd(a.td,function(d,f){var g=v(a.Wb,f);x(g,"Missing index implementation for "+f);if(d===hc){if(g.se(b.K)){for(var k=[],l=c.Aa(Yc),m=U(l);m;)m.name!=b.name&&k.push(m),m=U(l);k.push(b);return gd(k,H(g))}return hc}g=c.get(b.name);k=d;g&&(k=k.remove(new I(b.name,g)));return k.Ja(b,b.K)});return new dd(d,a.Wb)}
function hd(a,b,c){var d=fd(a.td,function(a){if(a===hc)return a;var d=c.get(b.name);return d?a.remove(new I(b.name,d)):a});return new dd(d,a.Wb)}var id=new dd({".priority":hc},{".priority":L});function bd(a,b,c){this.j=a;(this.ga=b)&&$c(this.ga);this.sb=c;this.wb=null}h=bd.prototype;h.P=function(){return!1};h.O=function(){return this.ga||K};h.ib=function(a){return new bd(this.j,a,this.sb)};h.B=function(a){if(".priority"===a)return this.O();a=this.j.get(a);return null===a?K:a};h.$=function(a){var b=G(a);return null===b?this:this.B(b).$(R(a))};h.Y=function(a){return null!==this.j.get(a)};
h.I=function(a,b){x(b,"We should always be passing snapshot nodes");if(".priority"===a)return this.ib(b);var c=new I(a,b),d;b.e()?(d=this.j.remove(a),c=hd(this.sb,c,this.j)):(d=this.j.Ja(a,b),c=ed(this.sb,c,this.j));return new bd(d,this.ga,c)};h.L=function(a,b){var c=G(a);if(null===c)return b;x(".priority"!==G(a)||1===Q(a),".priority must be the last token in a path");var d=this.B(c).L(R(a),b);return this.I(c,d)};h.e=function(){return this.j.e()};h.Ua=function(){return this.j.count()};var jd=/^(0|[1-9]\d*)$/;
h=bd.prototype;h.N=function(a){if(this.e())return null;var b={},c=0,d=0,e=!0;this.ea(L,function(f,g){b[f]=g.N(a);c++;e&&jd.test(f)?d=Math.max(d,Number(f)):e=!1});if(!a&&e&&d<2*c){var f=[],g;for(g in b)f[g]=b[g];return f}a&&!this.O().e()&&(b[".priority"]=this.O().N());return b};h.hash=function(){if(null===this.wb){var a="";this.O().e()||(a+="priority:"+ad(this.O().N())+":");this.ea(L,function(b,c){var d=c.hash();""!==d&&(a+=":"+b+":"+d)});this.wb=""===a?"":lb(a)}return this.wb};
h.af=function(a,b,c){return(c=kd(this,c))?(a=Nc(c,new I(a,b)))?a.name:null:Nc(this.j,a)};function ld(a,b){var c;c=(c=kd(a,b))?(c=c.Ic())&&c.name:a.j.Ic();return c?new I(c,a.j.get(c)):null}function md(a,b){var c;c=(c=kd(a,b))?(c=c.Zb())&&c.name:a.j.Zb();return c?new I(c,a.j.get(c)):null}h.ea=function(a,b){var c=kd(this,a);return c?c.Ba(function(a){return b(a.name,a.K)}):this.j.Ba(b)};h.Aa=function(a){return this.rb(a.Ae(),a)};
h.rb=function(a,b){var c=kd(this,b);return c?c.rb(a,function(a){return a}):this.j.rb(a.name,Yc)};h.bf=function(a){return this.Sb(a.ze(),a)};h.Sb=function(a,b){var c=kd(this,b);return c?c.Sb(a,function(a){return a}):this.j.Sb(a.name,Yc)};h.he=function(a){return this.e()?a.e()?0:-1:a.P()||a.e()?1:a===kc?-1:0};
h.Wd=function(a){if(a===mc||nd(this.sb.Wb,a.toString()))return this;var b=this.sb,c=this.j;x(a!==mc,"KeyIndex always exists and isn't meant to be added to the IndexMap.");for(var d=[],e=!1,c=c.Aa(Yc),f=U(c);f;)e=e||a.se(f.K),d.push(f),f=U(c);d=e?gd(d,H(a)):hc;e=a.toString();c=od(b.Wb);c[e]=a;a=od(b.td);a[e]=d;return new bd(this.j,this.ga,new dd(a,c))};h.Yb=function(a){return a===mc||nd(this.sb.Wb,a.toString())};
h.da=function(a){if(a===this)return!0;if(a.P())return!1;if(this.O().da(a.O())&&this.j.count()===a.j.count()){var b=this.Aa(L);a=a.Aa(L);for(var c=U(b),d=U(a);c&&d;){if(c.name!==d.name||!c.K.da(d.K))return!1;c=U(b);d=U(a)}return null===c&&null===d}return!1};function kd(a,b){return b===mc?null:a.sb.get(b.toString())}h.toString=function(){var a="{",b=!0;this.ea(L,function(c,d){b?b=!1:a+=", ";a+='"'+c+'" : '+d.toString()});return a+="}"};function J(a,b){if(null===a)return K;var c=null;"object"===typeof a&&".priority"in a?c=a[".priority"]:"undefined"!==typeof b&&(c=b);x(null===c||"string"===typeof c||"number"===typeof c||"object"===typeof c&&".sv"in c,"Invalid priority type found: "+typeof c);"object"===typeof a&&".value"in a&&null!==a[".value"]&&(a=a[".value"]);if("object"!==typeof a||".sv"in a)return new Zc(a,J(c));if(a instanceof Array){var d=K,e=a;A(e,function(a,b){if(u(e,b)&&"."!==b.substring(0,1)){var c=J(a);if(c.P()||!c.e())d=
d.I(b,c)}});return d.ib(J(c))}var f=[],g=!1,k=a;va(k,function(a){if("string"!==typeof a||"."!==a.substring(0,1)){var b=J(k[a]);b.e()||(g=g||!b.O().e(),f.push(new I(a,b)))}});var l=gd(f,ec,function(a){return a.name},fc);if(g){var m=gd(f,H(L));return new bd(l,J(c),new dd({".priority":m},{".priority":L}))}return new bd(l,J(c),id)}var pd=Math.log(2);function qd(a){this.count=parseInt(Math.log(a+1)/pd,10);this.Ve=this.count-1;this.Jf=a+1&parseInt(Array(this.count+1).join("1"),2)}
function rd(a){var b=!(a.Jf&1<<a.Ve);a.Ve--;return b}
function gd(a,b,c,d){function e(b,d){var f=d-b;if(0==f)return null;if(1==f){var m=a[b],r=c?c(m):m;return new Pc(r,m.K,!1,null,null)}var m=parseInt(f/2,10)+b,f=e(b,m),s=e(m+1,d),m=a[m],r=c?c(m):m;return new Pc(r,m.K,!1,f,s)}a.sort(b);var f=function(b){function d(b,g){var k=r-b,s=r;r-=b;var s=e(k+1,s),k=a[k],y=c?c(k):k,s=new Pc(y,k.K,g,null,s);f?f.left=s:m=s;f=s}for(var f=null,m=null,r=a.length,s=0;s<b.count;++s){var y=rd(b),N=Math.pow(2,b.count-(s+1));y?d(N,!1):(d(N,!1),d(N,!0))}return m}(new qd(a.length));
return null!==f?new Lc(d||b,f):new Lc(d||b)}function ad(a){return"number"===typeof a?"number:"+Db(a):"string:"+a}function $c(a){if(a.P()){var b=a.N();x("string"===typeof b||"number"===typeof b||"object"===typeof b&&u(b,".sv"),"Priority must be a string or number.")}else x(a===kc||a.e(),"priority of unexpected type.");x(a===kc||a.O().e(),"Priority nodes can't have a priority of their own.")}var K=new bd(new Lc(fc),null,id);function sd(){bd.call(this,new Lc(fc),K,id)}na(sd,bd);h=sd.prototype;
h.he=function(a){return a===this?0:1};h.da=function(a){return a===this};h.O=function(){throw ib("Why is this called?");};h.B=function(){return K};h.e=function(){return!1};var kc=new sd,ic=new I("[MIN_NAME]",K);function C(a,b,c){this.D=a;this.U=b;this.m=c}C.prototype.N=function(){D("Firebase.DataSnapshot.val",0,0,arguments.length);return this.D.N()};C.prototype.val=C.prototype.N;C.prototype.Xe=function(){D("Firebase.DataSnapshot.exportVal",0,0,arguments.length);return this.D.N(!0)};C.prototype.exportVal=C.prototype.Xe;C.prototype.Qf=function(){D("Firebase.DataSnapshot.exists",0,0,arguments.length);return!this.D.e()};C.prototype.exists=C.prototype.Qf;
C.prototype.k=function(a){D("Firebase.DataSnapshot.child",0,1,arguments.length);ga(a)&&(a=String(a));Zb("Firebase.DataSnapshot.child",a);var b=new P(a),c=this.U.k(b);return new C(this.D.$(b),c,L)};C.prototype.child=C.prototype.k;C.prototype.Y=function(a){D("Firebase.DataSnapshot.hasChild",1,1,arguments.length);Zb("Firebase.DataSnapshot.hasChild",a);var b=new P(a);return!this.D.$(b).e()};C.prototype.hasChild=C.prototype.Y;
C.prototype.O=function(){D("Firebase.DataSnapshot.getPriority",0,0,arguments.length);return this.D.O().N()};C.prototype.getPriority=C.prototype.O;C.prototype.forEach=function(a){D("Firebase.DataSnapshot.forEach",1,1,arguments.length);F("Firebase.DataSnapshot.forEach",1,a,!1);if(this.D.P())return!1;var b=this;return!!this.D.ea(this.m,function(c,d){return a(new C(d,b.U.k(c),L))})};C.prototype.forEach=C.prototype.forEach;
C.prototype.pd=function(){D("Firebase.DataSnapshot.hasChildren",0,0,arguments.length);return this.D.P()?!1:!this.D.e()};C.prototype.hasChildren=C.prototype.pd;C.prototype.name=function(){z("Firebase.DataSnapshot.name() being deprecated. Please use Firebase.DataSnapshot.key() instead.");D("Firebase.DataSnapshot.name",0,0,arguments.length);return this.key()};C.prototype.name=C.prototype.name;C.prototype.key=function(){D("Firebase.DataSnapshot.key",0,0,arguments.length);return this.U.key()};
C.prototype.key=C.prototype.key;C.prototype.Ua=function(){D("Firebase.DataSnapshot.numChildren",0,0,arguments.length);return this.D.Ua()};C.prototype.numChildren=C.prototype.Ua;C.prototype.hc=function(){D("Firebase.DataSnapshot.ref",0,0,arguments.length);return this.U};C.prototype.ref=C.prototype.hc;function td(a){x(ea(a)&&0<a.length,"Requires a non-empty array");this.Bf=a;this.Gc={}}td.prototype.Td=function(a,b){for(var c=this.Gc[a]||[],d=0;d<c.length;d++)c[d].sc.apply(c[d].Ha,Array.prototype.slice.call(arguments,1))};td.prototype.zb=function(a,b,c){ud(this,a);this.Gc[a]=this.Gc[a]||[];this.Gc[a].push({sc:b,Ha:c});(a=this.pe(a))&&b.apply(c,a)};td.prototype.bc=function(a,b,c){ud(this,a);a=this.Gc[a]||[];for(var d=0;d<a.length;d++)if(a[d].sc===b&&(!c||c===a[d].Ha)){a.splice(d,1);break}};
function ud(a,b){x(Oa(a.Bf,function(a){return a===b}),"Unknown event: "+b)};function vd(){td.call(this,["visible"]);var a,b;"undefined"!==typeof document&&"undefined"!==typeof document.addEventListener&&("undefined"!==typeof document.hidden?(b="visibilitychange",a="hidden"):"undefined"!==typeof document.mozHidden?(b="mozvisibilitychange",a="mozHidden"):"undefined"!==typeof document.msHidden?(b="msvisibilitychange",a="msHidden"):"undefined"!==typeof document.webkitHidden&&(b="webkitvisibilitychange",a="webkitHidden"));this.qc=!0;if(b){var c=this;document.addEventListener(b,
function(){var b=!document[a];b!==c.qc&&(c.qc=b,c.Td("visible",b))},!1)}}na(vd,td);ca(vd);vd.prototype.pe=function(a){x("visible"===a,"Unknown event type: "+a);return[this.qc]};function wd(){td.call(this,["online"]);this.Lc=!0;if("undefined"!==typeof window&&"undefined"!==typeof window.addEventListener){var a=this;window.addEventListener("online",function(){a.Lc||a.Td("online",!0);a.Lc=!0},!1);window.addEventListener("offline",function(){a.Lc&&a.Td("online",!1);a.Lc=!1},!1)}}na(wd,td);ca(wd);wd.prototype.pe=function(a){x("online"===a,"Unknown event type: "+a);return[this.Lc]};function A(a,b){for(var c in a)b.call(void 0,a[c],c,a)}function fd(a,b){var c={},d;for(d in a)c[d]=b.call(void 0,a[d],d,a);return c}function Mb(a,b){for(var c in a)if(!b.call(void 0,a[c],c,a))return!1;return!0}function Kb(a){var b=0,c;for(c in a)b++;return b}function Lb(a){for(var b in a)return b}function xd(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b}function yd(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b}function nd(a,b){for(var c in a)if(a[c]==b)return!0;return!1}
function zd(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d}function Ad(a,b){var c=zd(a,b,void 0);return c&&a[c]}function Bd(a){for(var b in a)return!1;return!0}function Cd(a,b){return b in a?a[b]:void 0}function od(a){var b={},c;for(c in a)b[c]=a[c];return b}var Dd="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function Ed(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<Dd.length;f++)c=Dd[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function Fd(){this.wc={}}function Gd(a,b,c){n(c)||(c=1);u(a.wc,b)||(a.wc[b]=0);a.wc[b]+=c}Fd.prototype.get=function(){return od(this.wc)};function Hd(a){this.Kf=a;this.vd=null}Hd.prototype.get=function(){var a=this.Kf.get(),b=od(a);if(this.vd)for(var c in this.vd)b[c]-=this.vd[c];this.vd=a;return b};function Id(a,b){this.uf={};this.Nd=new Hd(a);this.S=b;var c=1E4+2E4*Math.random();setTimeout(q(this.nf,this),Math.floor(c))}Id.prototype.nf=function(){var a=this.Nd.get(),b={},c=!1,d;for(d in a)0<a[d]&&u(this.uf,d)&&(b[d]=a[d],c=!0);c&&(a=this.S,a.ja&&(b={c:b},a.f("reportStats",b),a.wa("s",b)));setTimeout(q(this.nf,this),Math.floor(6E5*Math.random()))};var Jd={},Kd={};function Ld(a){a=a.toString();Jd[a]||(Jd[a]=new Fd);return Jd[a]}function Md(a,b){var c=a.toString();Kd[c]||(Kd[c]=b());return Kd[c]};var Nd=null;"undefined"!==typeof MozWebSocket?Nd=MozWebSocket:"undefined"!==typeof WebSocket&&(Nd=WebSocket);function Od(a,b,c){this.ie=a;this.f=rb(this.ie);this.frames=this.Cc=null;this.kb=this.lb=this.Oe=0;this.Qa=Ld(b);this.Za=(b.Cb?"wss://":"ws://")+b.Ka+"/.ws?v=5";"undefined"!==typeof location&&location.href&&-1!==location.href.indexOf("firebaseio.com")&&(this.Za+="&r=f");b.host!==b.Ka&&(this.Za=this.Za+"&ns="+b.yb);c&&(this.Za=this.Za+"&s="+c)}var Pd;
Od.prototype.open=function(a,b){this.fb=b;this.cg=a;this.f("Websocket connecting to "+this.Za);this.zc=!1;Aa.set("previous_websocket_failure",!0);try{this.oa=new Nd(this.Za)}catch(c){this.f("Error instantiating WebSocket.");var d=c.message||c.data;d&&this.f(d);this.eb();return}var e=this;this.oa.onopen=function(){e.f("Websocket connected.");e.zc=!0};this.oa.onclose=function(){e.f("Websocket connection was disconnected.");e.oa=null;e.eb()};this.oa.onmessage=function(a){if(null!==e.oa)if(a=a.data,e.kb+=
a.length,Gd(e.Qa,"bytes_received",a.length),Qd(e),null!==e.frames)Rd(e,a);else{a:{x(null===e.frames,"We already have a frame buffer");if(6>=a.length){var b=Number(a);if(!isNaN(b)){e.Oe=b;e.frames=[];a=null;break a}}e.Oe=1;e.frames=[]}null!==a&&Rd(e,a)}};this.oa.onerror=function(a){e.f("WebSocket error.  Closing connection.");(a=a.message||a.data)&&e.f(a);e.eb()}};Od.prototype.start=function(){};
Od.isAvailable=function(){var a=!1;if("undefined"!==typeof navigator&&navigator.userAgent){var b=navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);b&&1<b.length&&4.4>parseFloat(b[1])&&(a=!0)}return!a&&null!==Nd&&!Pd};Od.responsesRequiredToBeHealthy=2;Od.healthyTimeout=3E4;h=Od.prototype;h.wd=function(){Aa.remove("previous_websocket_failure")};function Rd(a,b){a.frames.push(b);if(a.frames.length==a.Oe){var c=a.frames.join("");a.frames=null;c=ua(c);a.cg(c)}}
h.send=function(a){Qd(this);a=t(a);this.lb+=a.length;Gd(this.Qa,"bytes_sent",a.length);a=Bb(a,16384);1<a.length&&this.oa.send(String(a.length));for(var b=0;b<a.length;b++)this.oa.send(a[b])};h.Yc=function(){this.ub=!0;this.Cc&&(clearInterval(this.Cc),this.Cc=null);this.oa&&(this.oa.close(),this.oa=null)};h.eb=function(){this.ub||(this.f("WebSocket is closing itself"),this.Yc(),this.fb&&(this.fb(this.zc),this.fb=null))};h.close=function(){this.ub||(this.f("WebSocket is being closed"),this.Yc())};
function Qd(a){clearInterval(a.Cc);a.Cc=setInterval(function(){a.oa&&a.oa.send("0");Qd(a)},Math.floor(45E3))};function Sd(a){this.cc=a;this.Fd=[];this.Mb=0;this.ge=-1;this.Ab=null}function Td(a,b,c){a.ge=b;a.Ab=c;a.ge<a.Mb&&(a.Ab(),a.Ab=null)}function Ud(a,b,c){for(a.Fd[b]=c;a.Fd[a.Mb];){var d=a.Fd[a.Mb];delete a.Fd[a.Mb];for(var e=0;e<d.length;++e)if(d[e]){var f=a;Fb(function(){f.cc(d[e])})}if(a.Mb===a.ge){a.Ab&&(clearTimeout(a.Ab),a.Ab(),a.Ab=null);break}a.Mb++}};function Vd(){this.set={}}h=Vd.prototype;h.add=function(a,b){this.set[a]=null!==b?b:!0};h.contains=function(a){return u(this.set,a)};h.get=function(a){return this.contains(a)?this.set[a]:void 0};h.remove=function(a){delete this.set[a]};h.clear=function(){this.set={}};h.e=function(){return Bd(this.set)};h.count=function(){return Kb(this.set)};function Wd(a,b){A(a.set,function(a,d){b(d,a)})};function Xd(a,b,c){this.ie=a;this.f=rb(a);this.kb=this.lb=0;this.Qa=Ld(b);this.Kd=c;this.zc=!1;this.bd=function(a){b.host!==b.Ka&&(a.ns=b.yb);var c=[],f;for(f in a)a.hasOwnProperty(f)&&c.push(f+"="+a[f]);return(b.Cb?"https://":"http://")+b.Ka+"/.lp?"+c.join("&")}}var Yd,Zd;
Xd.prototype.open=function(a,b){this.Ue=0;this.fa=b;this.gf=new Sd(a);this.ub=!1;var c=this;this.ob=setTimeout(function(){c.f("Timed out trying to connect.");c.eb();c.ob=null},Math.floor(3E4));wb(function(){if(!c.ub){c.Na=new $d(function(a,b,d,k,l){ae(c,arguments);if(c.Na)if(c.ob&&(clearTimeout(c.ob),c.ob=null),c.zc=!0,"start"==a)c.id=b,c.mf=d;else if("close"===a)b?(c.Na.Jd=!1,Td(c.gf,b,function(){c.eb()})):c.eb();else throw Error("Unrecognized command received: "+a);},function(a,b){ae(c,arguments);
Ud(c.gf,a,b)},function(){c.eb()},c.bd);var a={start:"t"};a.ser=Math.floor(1E8*Math.random());c.Na.Ud&&(a.cb=c.Na.Ud);a.v="5";c.Kd&&(a.s=c.Kd);"undefined"!==typeof location&&location.href&&-1!==location.href.indexOf("firebaseio.com")&&(a.r="f");a=c.bd(a);c.f("Connecting via long-poll to "+a);be(c.Na,a,function(){})}})};
Xd.prototype.start=function(){var a=this.Na,b=this.mf;a.Xf=this.id;a.Yf=b;for(a.Zd=!0;ce(a););a=this.id;b=this.mf;this.$b=document.createElement("iframe");var c={dframe:"t"};c.id=a;c.pw=b;this.$b.src=this.bd(c);this.$b.style.display="none";document.body.appendChild(this.$b)};Xd.isAvailable=function(){return!Zd&&!("object"===typeof window&&window.chrome&&window.chrome.extension&&!/^chrome/.test(window.location.href))&&!("object"===typeof Windows&&"object"===typeof Windows.zg)&&(Yd||!0)};h=Xd.prototype;
h.wd=function(){};h.Yc=function(){this.ub=!0;this.Na&&(this.Na.close(),this.Na=null);this.$b&&(document.body.removeChild(this.$b),this.$b=null);this.ob&&(clearTimeout(this.ob),this.ob=null)};h.eb=function(){this.ub||(this.f("Longpoll is closing itself"),this.Yc(),this.fa&&(this.fa(this.zc),this.fa=null))};h.close=function(){this.ub||(this.f("Longpoll is being closed."),this.Yc())};
h.send=function(a){a=t(a);this.lb+=a.length;Gd(this.Qa,"bytes_sent",a.length);a=mb(a);a=fb(a,!0);a=Bb(a,1840);for(var b=0;b<a.length;b++){var c=this.Na;c.Qc.push({og:this.Ue,wg:a.length,We:a[b]});c.Zd&&ce(c);this.Ue++}};function ae(a,b){var c=t(b).length;a.kb+=c;Gd(a.Qa,"bytes_received",c)}
function $d(a,b,c,d){this.bd=d;this.fb=c;this.Fe=new Vd;this.Qc=[];this.ke=Math.floor(1E8*Math.random());this.Jd=!0;this.Ud=hb();window["pLPCommand"+this.Ud]=a;window["pRTLPCB"+this.Ud]=b;a=document.createElement("iframe");a.style.display="none";if(document.body){document.body.appendChild(a);try{a.contentWindow.document||kb("No IE domain setting required")}catch(e){a.src="javascript:void((function(){document.open();document.domain='"+document.domain+"';document.close();})())"}}else throw"Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
a.contentDocument?a.$a=a.contentDocument:a.contentWindow?a.$a=a.contentWindow.document:a.document&&(a.$a=a.document);this.va=a;a="";this.va.src&&"javascript:"===this.va.src.substr(0,11)&&(a='<script>document.domain="'+document.domain+'";\x3c/script>');a="<html><body>"+a+"</body></html>";try{this.va.$a.open(),this.va.$a.write(a),this.va.$a.close()}catch(f){kb("frame writing exception"),f.stack&&kb(f.stack),kb(f)}}
$d.prototype.close=function(){this.Zd=!1;if(this.va){this.va.$a.body.innerHTML="";var a=this;setTimeout(function(){null!==a.va&&(document.body.removeChild(a.va),a.va=null)},Math.floor(0))}var b=this.fb;b&&(this.fb=null,b())};
function ce(a){if(a.Zd&&a.Jd&&a.Fe.count()<(0<a.Qc.length?2:1)){a.ke++;var b={};b.id=a.Xf;b.pw=a.Yf;b.ser=a.ke;for(var b=a.bd(b),c="",d=0;0<a.Qc.length;)if(1870>=a.Qc[0].We.length+30+c.length){var e=a.Qc.shift(),c=c+"&seg"+d+"="+e.og+"&ts"+d+"="+e.wg+"&d"+d+"="+e.We;d++}else break;de(a,b+c,a.ke);return!0}return!1}function de(a,b,c){function d(){a.Fe.remove(c);ce(a)}a.Fe.add(c);var e=setTimeout(d,Math.floor(25E3));be(a,b,function(){clearTimeout(e);d()})}
function be(a,b,c){setTimeout(function(){try{if(a.Jd){var d=a.va.$a.createElement("script");d.type="text/javascript";d.async=!0;d.src=b;d.onload=d.onreadystatechange=function(){var a=d.readyState;a&&"loaded"!==a&&"complete"!==a||(d.onload=d.onreadystatechange=null,d.parentNode&&d.parentNode.removeChild(d),c())};d.onerror=function(){kb("Long-poll script failed to load: "+b);a.Jd=!1;a.close()};a.va.$a.body.appendChild(d)}}catch(e){}},Math.floor(1))};function ee(a){fe(this,a)}var ge=[Xd,Od];function fe(a,b){var c=Od&&Od.isAvailable(),d=c&&!(Aa.ff||!0===Aa.get("previous_websocket_failure"));b.yg&&(c||z("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."),d=!0);if(d)a.$c=[Od];else{var e=a.$c=[];Cb(ge,function(a,b){b&&b.isAvailable()&&e.push(b)})}}function he(a){if(0<a.$c.length)return a.$c[0];throw Error("No transports available");};function ie(a,b,c,d,e,f){this.id=a;this.f=rb("c:"+this.id+":");this.cc=c;this.Kc=d;this.fa=e;this.De=f;this.Q=b;this.Ed=[];this.Se=0;this.xf=new ee(b);this.Pa=0;this.f("Connection created");je(this)}
function je(a){var b=he(a.xf);a.J=new b("c:"+a.id+":"+a.Se++,a.Q);a.He=b.responsesRequiredToBeHealthy||0;var c=ke(a,a.J),d=le(a,a.J);a.ad=a.J;a.Xc=a.J;a.C=null;a.vb=!1;setTimeout(function(){a.J&&a.J.open(c,d)},Math.floor(0));b=b.healthyTimeout||0;0<b&&(a.rd=setTimeout(function(){a.rd=null;a.vb||(a.J&&102400<a.J.kb?(a.f("Connection exceeded healthy timeout but has received "+a.J.kb+" bytes.  Marking connection healthy."),a.vb=!0,a.J.wd()):a.J&&10240<a.J.lb?a.f("Connection exceeded healthy timeout but has sent "+
a.J.lb+" bytes.  Leaving connection alive."):(a.f("Closing unhealthy connection after timeout."),a.close()))},Math.floor(b)))}function le(a,b){return function(c){b===a.J?(a.J=null,c||0!==a.Pa?1===a.Pa&&a.f("Realtime connection lost."):(a.f("Realtime connection failed."),"s-"===a.Q.Ka.substr(0,2)&&(Aa.remove("host:"+a.Q.host),a.Q.Ka=a.Q.host)),a.close()):b===a.C?(a.f("Secondary connection lost."),c=a.C,a.C=null,a.ad!==c&&a.Xc!==c||a.close()):a.f("closing an old connection")}}
function ke(a,b){return function(c){if(2!=a.Pa)if(b===a.Xc){var d=zb("t",c);c=zb("d",c);if("c"==d){if(d=zb("t",c),"d"in c)if(c=c.d,"h"===d){var d=c.ts,e=c.v,f=c.h;a.Kd=c.s;Da(a.Q,f);0==a.Pa&&(a.J.start(),me(a,a.J,d),"5"!==e&&z("Protocol version mismatch detected"),c=a.xf,(c=1<c.$c.length?c.$c[1]:null)&&ne(a,c))}else if("n"===d){a.f("recvd end transmission on primary");a.Xc=a.C;for(c=0;c<a.Ed.length;++c)a.Bd(a.Ed[c]);a.Ed=[];oe(a)}else"s"===d?(a.f("Connection shutdown command received. Shutting down..."),
a.De&&(a.De(c),a.De=null),a.fa=null,a.close()):"r"===d?(a.f("Reset packet received.  New host: "+c),Da(a.Q,c),1===a.Pa?a.close():(pe(a),je(a))):"e"===d?sb("Server Error: "+c):"o"===d?(a.f("got pong on primary."),qe(a),re(a)):sb("Unknown control packet command: "+d)}else"d"==d&&a.Bd(c)}else if(b===a.C)if(d=zb("t",c),c=zb("d",c),"c"==d)"t"in c&&(c=c.t,"a"===c?se(a):"r"===c?(a.f("Got a reset on secondary, closing it"),a.C.close(),a.ad!==a.C&&a.Xc!==a.C||a.close()):"o"===c&&(a.f("got pong on secondary."),
a.tf--,se(a)));else if("d"==d)a.Ed.push(c);else throw Error("Unknown protocol layer: "+d);else a.f("message on old connection")}}ie.prototype.wa=function(a){te(this,{t:"d",d:a})};function oe(a){a.ad===a.C&&a.Xc===a.C&&(a.f("cleaning up and promoting a connection: "+a.C.ie),a.J=a.C,a.C=null)}
function se(a){0>=a.tf?(a.f("Secondary connection is healthy."),a.vb=!0,a.C.wd(),a.C.start(),a.f("sending client ack on secondary"),a.C.send({t:"c",d:{t:"a",d:{}}}),a.f("Ending transmission on primary"),a.J.send({t:"c",d:{t:"n",d:{}}}),a.ad=a.C,oe(a)):(a.f("sending ping on secondary."),a.C.send({t:"c",d:{t:"p",d:{}}}))}ie.prototype.Bd=function(a){qe(this);this.cc(a)};function qe(a){a.vb||(a.He--,0>=a.He&&(a.f("Primary connection is healthy."),a.vb=!0,a.J.wd()))}
function ne(a,b){a.C=new b("c:"+a.id+":"+a.Se++,a.Q,a.Kd);a.tf=b.responsesRequiredToBeHealthy||0;a.C.open(ke(a,a.C),le(a,a.C));setTimeout(function(){a.C&&(a.f("Timed out trying to upgrade."),a.C.close())},Math.floor(6E4))}function me(a,b,c){a.f("Realtime connection established.");a.J=b;a.Pa=1;a.Kc&&(a.Kc(c),a.Kc=null);0===a.He?(a.f("Primary connection is healthy."),a.vb=!0):setTimeout(function(){re(a)},Math.floor(5E3))}
function re(a){a.vb||1!==a.Pa||(a.f("sending ping on primary."),te(a,{t:"c",d:{t:"p",d:{}}}))}function te(a,b){if(1!==a.Pa)throw"Connection is not connected";a.ad.send(b)}ie.prototype.close=function(){2!==this.Pa&&(this.f("Closing realtime connection."),this.Pa=2,pe(this),this.fa&&(this.fa(),this.fa=null))};function pe(a){a.f("Shutting down all connections");a.J&&(a.J.close(),a.J=null);a.C&&(a.C.close(),a.C=null);a.rd&&(clearTimeout(a.rd),a.rd=null)};function ue(a){var b={},c={},d={},e="";try{var f=a.split("."),b=ua(jb(f[0])||""),c=ua(jb(f[1])||""),e=f[2],d=c.d||{};delete c.d}catch(g){}return{Bg:b,fe:c,data:d,sg:e}}function ve(a){a=ue(a).fe;return"object"===typeof a&&a.hasOwnProperty("iat")?v(a,"iat"):null}function we(a){a=ue(a);var b=a.fe;return!!a.sg&&!!b&&"object"===typeof b&&b.hasOwnProperty("iat")};function xe(a,b,c,d){this.id=ye++;this.f=rb("p:"+this.id+":");this.Eb=!0;this.ua={};this.la=[];this.Nc=0;this.Jc=[];this.ja=!1;this.Va=1E3;this.xd=3E5;this.Cd=b;this.Ad=c;this.Ee=d;this.Q=a;this.Ke=null;this.Tc={};this.ng=0;this.Dc=this.ue=null;ze(this,0);vd.Qb().zb("visible",this.fg,this);-1===a.host.indexOf("fblocal")&&wd.Qb().zb("online",this.dg,this)}var ye=0,Ae=0;h=xe.prototype;
h.wa=function(a,b,c){var d=++this.ng;a={r:d,a:a,b:b};this.f(t(a));x(this.ja,"sendRequest call when we're not connected not allowed.");this.La.wa(a);c&&(this.Tc[d]=c)};function Be(a,b,c,d,e){var f=b.Da(),g=b.path.toString();a.f("Listen called for "+g+" "+f);a.ua[g]=a.ua[g]||{};x(!a.ua[g][f],"listen() called twice for same path/queryId.");b={H:e,qd:c,kg:Dc(b),tag:d};a.ua[g][f]=b;a.ja&&Ce(a,g,f,b)}
function Ce(a,b,c,d){a.f("Listen on "+b+" for "+c);var e={p:b};d.tag&&(e.q=d.kg,e.t=d.tag);e.h=d.qd();a.wa("q",e,function(e){if((a.ua[b]&&a.ua[b][c])===d){a.f("listen response",e);var g=e.s;"ok"!==g&&De(a,b,c);e=e.d;d.H&&d.H(g,e)}})}h.T=function(a,b,c){this.Lb={Mf:a,Ye:!1,sc:b,cd:c};this.f("Authenticating using credential: "+a);Ee(this);(b=40==a.length)||(a=ue(a).fe,b="object"===typeof a&&!0===v(a,"admin"));b&&(this.f("Admin auth credential detected.  Reducing max reconnect time."),this.xd=3E4)};
h.Pe=function(a){delete this.Lb;this.ja&&this.wa("unauth",{},function(b){a(b.s,b.d)})};function Ee(a){var b=a.Lb;a.ja&&b&&a.wa("auth",{cred:b.Mf},function(c){var d=c.s;c=c.d||"error";"ok"!==d&&a.Lb===b&&delete a.Lb;b.Ye?"ok"!==d&&b.cd&&b.cd(d,c):(b.Ye=!0,b.sc&&b.sc(d,c))})}function Fe(a,b,c,d){a.ja?Ge(a,"o",b,c,d):a.Jc.push({Pc:b,action:"o",data:c,H:d})}function He(a,b,c,d){a.ja?Ge(a,"om",b,c,d):a.Jc.push({Pc:b,action:"om",data:c,H:d})}
h.Ce=function(a,b){this.ja?Ge(this,"oc",a,null,b):this.Jc.push({Pc:a,action:"oc",data:null,H:b})};function Ge(a,b,c,d,e){c={p:c,d:d};a.f("onDisconnect "+b,c);a.wa(b,c,function(a){e&&setTimeout(function(){e(a.s,a.d)},Math.floor(0))})}h.put=function(a,b,c,d){Ie(this,"p",a,b,c,d)};function Ke(a,b,c,d){Ie(a,"m",b,c,d,void 0)}function Ie(a,b,c,d,e,f){d={p:c,d:d};n(f)&&(d.h=f);a.la.push({action:b,of:d,H:e});a.Nc++;b=a.la.length-1;a.ja?Le(a,b):a.f("Buffering put: "+c)}
function Le(a,b){var c=a.la[b].action,d=a.la[b].of,e=a.la[b].H;a.la[b].lg=a.ja;a.wa(c,d,function(d){a.f(c+" response",d);delete a.la[b];a.Nc--;0===a.Nc&&(a.la=[]);e&&e(d.s,d.d)})}
h.Bd=function(a){if("r"in a){this.f("from server: "+t(a));var b=a.r,c=this.Tc[b];c&&(delete this.Tc[b],c(a.b))}else{if("error"in a)throw"A server-side error has occurred: "+a.error;"a"in a&&(b=a.a,c=a.b,this.f("handleServerMessage",b,c),"d"===b?this.Cd(c.p,c.d,!1,c.t):"m"===b?this.Cd(c.p,c.d,!0,c.t):"c"===b?Me(this,c.p,c.q):"ac"===b?(a=c.s,b=c.d,c=this.Lb,delete this.Lb,c&&c.cd&&c.cd(a,b)):"sd"===b?this.Ke?this.Ke(c):"msg"in c&&"undefined"!==typeof console&&console.log("FIREBASE: "+c.msg.replace("\n",
"\nFIREBASE: ")):sb("Unrecognized action received from server: "+t(b)+"\nAre you using the latest client?"))}};h.Kc=function(a){this.f("connection ready");this.ja=!0;this.Dc=(new Date).getTime();this.Ee({serverTimeOffset:a-(new Date).getTime()});Ne(this);this.Ad(!0)};function ze(a,b){x(!a.La,"Scheduling a connect when we're already connected/ing?");a.Nb&&clearTimeout(a.Nb);a.Nb=setTimeout(function(){a.Nb=null;Oe(a)},Math.floor(b))}
h.fg=function(a){a&&!this.qc&&this.Va===this.xd&&(this.f("Window became visible.  Reducing delay."),this.Va=1E3,this.La||ze(this,0));this.qc=a};h.dg=function(a){a?(this.f("Browser went online.  Reconnecting."),this.Va=1E3,this.Eb=!0,this.La||ze(this,0)):(this.f("Browser went offline.  Killing connection; don't reconnect."),this.Eb=!1,this.La&&this.La.close())};
h.jf=function(){this.f("data client disconnected");this.ja=!1;this.La=null;for(var a=0;a<this.la.length;a++){var b=this.la[a];b&&"h"in b.of&&b.lg&&(b.H&&b.H("disconnect"),delete this.la[a],this.Nc--)}0===this.Nc&&(this.la=[]);if(this.Eb)this.qc?this.Dc&&(3E4<(new Date).getTime()-this.Dc&&(this.Va=1E3),this.Dc=null):(this.f("Window isn't visible.  Delaying reconnect."),this.Va=this.xd,this.ue=(new Date).getTime()),a=Math.max(0,this.Va-((new Date).getTime()-this.ue)),a*=Math.random(),this.f("Trying to reconnect in "+
a+"ms"),ze(this,a),this.Va=Math.min(this.xd,1.3*this.Va);else for(var c in this.Tc)delete this.Tc[c];this.Ad(!1)};function Oe(a){if(a.Eb){a.f("Making a connection attempt");a.ue=(new Date).getTime();a.Dc=null;var b=q(a.Bd,a),c=q(a.Kc,a),d=q(a.jf,a),e=a.id+":"+Ae++;a.La=new ie(e,a.Q,b,c,d,function(b){z(b+" ("+a.Q.toString()+")");a.Eb=!1})}}h.tb=function(){this.Eb=!1;this.La?this.La.close():(this.Nb&&(clearTimeout(this.Nb),this.Nb=null),this.ja&&this.jf())};
h.kc=function(){this.Eb=!0;this.Va=1E3;this.La||ze(this,0)};function Me(a,b,c){c=c?La(c,function(a){return Ab(a)}).join("$"):"default";(a=De(a,b,c))&&a.H&&a.H("permission_denied")}function De(a,b,c){b=(new P(b)).toString();var d=a.ua[b][c];delete a.ua[b][c];0===Kb(a.ua[b])&&delete a.ua[b];return d}function Ne(a){Ee(a);A(a.ua,function(b,d){A(b,function(b,c){Ce(a,d,c,b)})});for(var b=0;b<a.la.length;b++)a.la[b]&&Le(a,b);for(;a.Jc.length;)b=a.Jc.shift(),Ge(a,b.action,b.Pc,b.data,b.H)};function Pe(){this.j=this.A=null}Pe.prototype.ic=function(a,b){if(a.e())this.A=b,this.j=null;else if(null!==this.A)this.A=this.A.L(a,b);else{null==this.j&&(this.j=new Vd);var c=G(a);this.j.contains(c)||this.j.add(c,new Pe);c=this.j.get(c);a=R(a);c.ic(a,b)}};
function Qe(a,b){if(b.e())return a.A=null,a.j=null,!0;if(null!==a.A){if(a.A.P())return!1;var c=a.A;a.A=null;c.ea(L,function(b,c){a.ic(new P(b),c)});return Qe(a,b)}return null!==a.j?(c=G(b),b=R(b),a.j.contains(c)&&Qe(a.j.get(c),b)&&a.j.remove(c),a.j.e()?(a.j=null,!0):!1):!0}function Re(a,b,c){null!==a.A?c(b,a.A):a.ea(function(a,e){var f=new P(b.toString()+"/"+a);Re(e,f,c)})}Pe.prototype.ea=function(a){null!==this.j&&Wd(this.j,function(b,c){a(b,c)})};function Se(){this.Wc=K}Se.prototype.toString=function(){return this.Wc.toString()};function Te(){this.qb=[]}function Ue(a,b){for(var c=null,d=0;d<b.length;d++){var e=b[d],f=e.Rb();null===c||f.da(c.Rb())||(a.qb.push(c),c=null);null===c&&(c=new Ve(f));c.add(e)}c&&a.qb.push(c)}function Cc(a,b,c){Ue(a,c);We(a,function(a){return a.da(b)})}function Xe(a,b,c){Ue(a,c);We(a,function(a){return a.contains(b)||b.contains(a)})}
function We(a,b){for(var c=!0,d=0;d<a.qb.length;d++){var e=a.qb[d];if(e)if(e=e.Rb(),b(e)){for(var e=a.qb[d],f=0;f<e.od.length;f++){var g=e.od[f];if(null!==g){e.od[f]=null;var k=g.Pb();ob&&kb("event: "+g.toString());Fb(k)}}a.qb[d]=null}else c=!1}c&&(a.qb=[])}function Ve(a){this.Ca=a;this.od=[]}Ve.prototype.add=function(a){this.od.push(a)};Ve.prototype.Rb=function(){return this.Ca};var Ye="auth.firebase.com";function Ze(a,b,c){this.ed=a||{};this.Sd=b||{};this.lc=c||{};this.ed.remember||(this.ed.remember="default")}var $e=["remember","redirectTo"];function af(a){var b={},c={};va(a||{},function(a,e){0<=Ia($e,a)?b[a]=e:c[a]=e});return new Ze(b,{},c)};var bf={NETWORK_ERROR:"Unable to contact the Firebase server.",SERVER_ERROR:"An unknown server error occurred.",TRANSPORT_UNAVAILABLE:"There are no login transports available for the requested method.",REQUEST_INTERRUPTED:"The browser redirected the page before the login request could complete.",USER_CANCELLED:"The user cancelled authentication."};function V(a){var b=Error(v(bf,a),a);b.code=a;return b};function cf(){var a=window.opener.frames,b;for(b=a.length-1;0<=b;b--)try{if(a[b].location.protocol===window.location.protocol&&a[b].location.host===window.location.host&&"__winchan_relay_frame"===a[b].name)return a[b]}catch(c){}return null}function df(a,b,c){a.attachEvent?a.attachEvent("on"+b,c):a.addEventListener&&a.addEventListener(b,c,!1)}function ef(a,b,c){a.detachEvent?a.detachEvent("on"+b,c):a.removeEventListener&&a.removeEventListener(b,c,!1)}
function ff(a){/^https?:\/\//.test(a)||(a=window.location.href);var b=/^(https?:\/\/[\-_a-zA-Z\.0-9:]+)/.exec(a);return b?b[1]:a}function gf(a){var b="";try{a=a.replace("#","");var c={},d=a.replace(/^\?/,"").split("&");for(a=0;a<d.length;a++)if(d[a]){var e=d[a].split("=");c[e[0]]=e[1]}c&&u(c,"__firebase_request_key")&&(b=v(c,"__firebase_request_key"))}catch(f){}return b}
function hf(a){var b=[],c;for(c in a)if(u(a,c)){var d=v(a,c);if(ea(d))for(var e=0;e<d.length;e++)b.push(encodeURIComponent(c)+"="+encodeURIComponent(d[e]));else b.push(encodeURIComponent(c)+"="+encodeURIComponent(v(a,c)))}return b.join("&")}function jf(){var a=ub(Ye);return a.scheme+"://"+a.host+"/v2"};function kf(){return!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(navigator.userAgent)}function lf(){var a=navigator.userAgent;if("Microsoft Internet Explorer"===navigator.appName){if((a=a.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/))&&1<a.length)return 8<=parseFloat(a[1])}else if(-1<a.indexOf("Trident")&&(a=a.match(/rv:([0-9]{2,2}[\.0-9]{0,})/))&&1<a.length)return 8<=parseFloat(a[1]);return!1};function mf(a){a=a||{};a.method||(a.method="GET");a.headers||(a.headers={});a.headers.content_type||(a.headers.content_type="application/json");a.headers.content_type=a.headers.content_type.toLowerCase();this.options=a}
mf.prototype.open=function(a,b,c){function d(){c&&(c(V("REQUEST_INTERRUPTED")),c=null)}var e=new XMLHttpRequest,f=this.options.method.toUpperCase(),g;df(window,"beforeunload",d);e.onreadystatechange=function(){if(c&&4===e.readyState){var a;if(200<=e.status&&300>e.status){try{a=ua(e.responseText)}catch(b){}c(null,a)}else 500<=e.status&&600>e.status?c(V("SERVER_ERROR")):c(V("NETWORK_ERROR"));c=null;ef(window,"beforeunload",d)}};if("GET"===f)a+=(/\?/.test(a)?"":"?")+hf(b),g=null;else{var k=this.options.headers.content_type;
"application/json"===k&&(g=t(b));"application/x-www-form-urlencoded"===k&&(g=hf(b))}e.open(f,a,!0);a={"X-Requested-With":"XMLHttpRequest",Accept:"application/json;text/plain"};Ed(a,this.options.headers);for(var l in a)e.setRequestHeader(l,a[l]);e.send(g)};mf.isAvailable=function(){return!!window.XMLHttpRequest&&"string"===typeof(new XMLHttpRequest).responseType&&(!(navigator.userAgent.match(/MSIE/)||navigator.userAgent.match(/Trident/))||lf())};mf.prototype.uc=function(){return"json"};function nf(a){a=a||{};this.Uc=Ha()+Ha()+Ha();this.kf=a||{}}
nf.prototype.open=function(a,b,c){function d(){c&&(c(V("USER_CANCELLED")),c=null)}var e=this,f=ub(Ye),g;b.requestId=this.Uc;b.redirectTo=f.scheme+"://"+f.host+"/blank/page.html";a+=/\?/.test(a)?"":"?";a+=hf(b);(g=window.open(a,"_blank","location=no"))&&ha(g.addEventListener)?(g.addEventListener("loadstart",function(a){var b;if(b=a&&a.url)a:{var f=a.url;try{var r=document.createElement("a");r.href=f;b=r.host===ub(Ye).host&&"/blank/page.html"===r.pathname;break a}catch(s){}b=!1}b&&(a=gf(a.url),g.removeEventListener("exit",
d),g.close(),a=new Ze(null,null,{requestId:e.Uc,requestKey:a}),e.kf.requestWithCredential("/auth/session",a,c),c=null)}),g.addEventListener("exit",d)):c(V("TRANSPORT_UNAVAILABLE"))};nf.isAvailable=function(){return kf()};nf.prototype.uc=function(){return"redirect"};function of(a){a=a||{};if(!a.window_features||-1!==navigator.userAgent.indexOf("Fennec/")||-1!==navigator.userAgent.indexOf("Firefox/")&&-1!==navigator.userAgent.indexOf("Android"))a.window_features=void 0;a.window_name||(a.window_name="_blank");a.relay_url||(a.relay_url=jf()+"/auth/channel");this.options=a}
of.prototype.open=function(a,b,c){function d(a){g&&(document.body.removeChild(g),g=void 0);r&&(r=clearInterval(r));ef(window,"message",e);ef(window,"unload",d);if(m&&!a)try{m.close()}catch(b){k.postMessage("die",l)}m=k=void 0}function e(a){if(a.origin===l)try{var b=ua(a.data);"ready"===b.a?k.postMessage(s,l):"error"===b.a?(d(!1),c&&(c(b.d),c=null)):"response"===b.a&&(d(b.forceKeepWindowOpen),c&&(c(null,b.d),c=null))}catch(e){}}var f=lf(),g,k,l=ff(a);if(l!==ff(this.options.relay_url))c&&setTimeout(function(){c(Error("invalid arguments: origin of url and relay_url must match"))},
0);else{f&&(g=document.createElement("iframe"),g.setAttribute("src",this.options.relay_url),g.style.display="none",g.setAttribute("name","__winchan_relay_frame"),document.body.appendChild(g),k=g.contentWindow);a+=(/\?/.test(a)?"":"?")+hf(b);var m=window.open(a,this.options.window_name,this.options.window_features);k||(k=m);var r=setInterval(function(){m&&m.closed&&(d(!1),c&&(c(V("USER_CANCELLED")),c=null))},500),s=t({a:"request",d:b});df(window,"unload",d);df(window,"message",e)}};
of.isAvailable=function(){return"postMessage"in window&&!/^file:\//.test(location.href)&&!(kf()||navigator.userAgent.match(/Windows Phone/)||window.Windows&&/^ms-appx:/.test(location.href)||navigator.userAgent.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i)||navigator.userAgent.match(/CriOS/)||navigator.userAgent.match(/Twitter for iPhone/)||navigator.userAgent.match(/FBAN\/FBIOS/)||window.navigator.standalone)&&!navigator.userAgent.match(/PhantomJS/)};of.prototype.uc=function(){return"popup"};function pf(a){a=a||{};a.callback_parameter||(a.callback_parameter="callback");this.options=a;window.__firebase_auth_jsonp=window.__firebase_auth_jsonp||{}}
pf.prototype.open=function(a,b,c){function d(){c&&(c(V("REQUEST_INTERRUPTED")),c=null)}function e(){setTimeout(function(){window.__firebase_auth_jsonp[f]=void 0;Bd(window.__firebase_auth_jsonp)&&(window.__firebase_auth_jsonp=void 0);try{var a=document.getElementById(f);a&&a.parentNode.removeChild(a)}catch(b){}},1);ef(window,"beforeunload",d)}var f="fn"+(new Date).getTime()+Math.floor(99999*Math.random());b[this.options.callback_parameter]="__firebase_auth_jsonp."+f;a+=(/\?/.test(a)?"":"?")+hf(b);
df(window,"beforeunload",d);window.__firebase_auth_jsonp[f]=function(a){c&&(c(null,a),c=null);e()};qf(f,a,c)};
function qf(a,b,c){setTimeout(function(){try{var d=document.createElement("script");d.type="text/javascript";d.id=a;d.async=!0;d.src=b;d.onerror=function(){var b=document.getElementById(a);null!==b&&b.parentNode.removeChild(b);c&&c(V("NETWORK_ERROR"))};var e=document.getElementsByTagName("head");(e&&0!=e.length?e[0]:document.documentElement).appendChild(d)}catch(f){c&&c(V("NETWORK_ERROR"))}},0)}pf.isAvailable=function(){return!kf()};pf.prototype.uc=function(){return"json"};function rf(a,b){this.Ge=["session",a.Gd,a.yb].join(":");this.Pd=b}rf.prototype.set=function(a,b){if(!b)if(this.Pd.length)b=this.Pd[0];else throw Error("fb.login.SessionManager : No storage options available!");b.set(this.Ge,a)};rf.prototype.get=function(){var a=La(this.Pd,q(this.Tf,this)),a=Ka(a,function(a){return null!==a});Ta(a,function(a,c){return ve(c.token)-ve(a.token)});return 0<a.length?a.shift():null};rf.prototype.Tf=function(a){try{var b=a.get(this.Ge);if(b&&b.token)return b}catch(c){}return null};
rf.prototype.clear=function(){var a=this;Ja(this.Pd,function(b){b.remove(a.Ge)})};function sf(a){a=a||{};this.Uc=Ha()+Ha()+Ha();this.kf=a||{}}sf.prototype.open=function(a,b){Ba.set("redirect_request_id",this.Uc);b.requestId=this.Uc;b.redirectTo=b.redirectTo||window.location.href;a+=(/\?/.test(a)?"":"?")+hf(b);window.location=a};sf.isAvailable=function(){return!/^file:\//.test(location.href)&&!kf()};sf.prototype.uc=function(){return"redirect"};function tf(a,b,c,d){td.call(this,["auth_status"]);this.Q=a;this.Re=b;this.xg=c;this.Be=d;this.mc=new rf(a,[Aa,Ba]);this.jb=null;uf(this)}na(tf,td);h=tf.prototype;h.ne=function(){return this.jb||null};function uf(a){Ba.get("redirect_request_id")&&vf(a);var b=a.mc.get();b&&b.token?(wf(a,b),a.Re(b.token,function(c,d){xf(a,c,d,!1,b.token,b)},function(b,d){yf(a,"resumeSession()",b,d)})):wf(a,null)}
function zf(a,b,c,d,e,f){"firebaseio-demo.com"===a.Q.domain&&z("Firebase authentication is not supported on demo Firebases (*.firebaseio-demo.com). To secure your Firebase, create a production Firebase at https://www.firebase.com.");a.Re(b,function(f,k){xf(a,f,k,!0,b,c,d||{},e)},function(b,c){yf(a,"auth()",b,c,f)})}function Af(a,b){a.mc.clear();wf(a,null);a.xg(function(a,d){if("ok"===a)B(b,null);else{var e=(a||"error").toUpperCase(),f=e;d&&(f+=": "+d);f=Error(f);f.code=e;B(b,f)}})}
function xf(a,b,c,d,e,f,g,k){"ok"===b?(d&&(b=c.auth,f.auth=b,f.expires=c.expires,f.token=we(e)?e:"",c=null,b&&u(b,"uid")?c=v(b,"uid"):u(f,"uid")&&(c=v(f,"uid")),f.uid=c,c="custom",b&&u(b,"provider")?c=v(b,"provider"):u(f,"provider")&&(c=v(f,"provider")),f.provider=c,a.mc.clear(),we(e)&&(g=g||{},c=Aa,"sessionOnly"===g.remember&&(c=Ba),"none"!==g.remember&&a.mc.set(f,c)),wf(a,f)),B(k,null,f)):(a.mc.clear(),wf(a,null),f=a=(b||"error").toUpperCase(),c&&(f+=": "+c),f=Error(f),f.code=a,B(k,f))}
function yf(a,b,c,d,e){z(b+" was canceled: "+d);a.mc.clear();wf(a,null);a=Error(d);a.code=c.toUpperCase();B(e,a)}function Bf(a,b,c,d,e){Cf(a);var f=[mf,pf];c=new Ze(d||{},{},c||{});Df(a,f,"/auth/"+b,c,e)}
function Ef(a,b,c,d){Cf(a);var e=[of,nf];c=af(c);"anonymous"===b||"password"===b?setTimeout(function(){B(d,V("TRANSPORT_UNAVAILABLE"))},0):(c.Sd.window_features="menubar=yes,modal=yes,alwaysRaised=yeslocation=yes,resizable=yes,scrollbars=yes,status=yes,height=625,width=625,top="+("object"===typeof screen?.5*(screen.height-625):0)+",left="+("object"===typeof screen?.5*(screen.width-625):0),c.Sd.relay_url=jf()+"/"+a.Q.yb+"/auth/channel",c.Sd.requestWithCredential=q(a.Vc,a),Df(a,e,"/auth/"+b,c,d))}
function vf(a){var b=Ba.get("redirect_request_id");if(b){var c=Ba.get("redirect_client_options");Ba.remove("redirect_request_id");Ba.remove("redirect_client_options");var d=[mf,pf],b={requestId:b,requestKey:gf(document.location.hash)},c=new Ze(c,{},b);try{document.location.hash=document.location.hash.replace(/&__firebase_request_key=([a-zA-z0-9]*)/,"")}catch(e){}Df(a,d,"/auth/session",c)}}h.je=function(a,b){Cf(this);var c=af(a);c.lc._method="POST";this.Vc("/users",c,function(a){B(b,a)})};
h.Ie=function(a,b){var c=this;Cf(this);var d="/users/"+encodeURIComponent(a.email),e=af(a);e.lc._method="DELETE";this.Vc(d,e,function(a,d){!a&&d&&d.uid&&c.jb&&c.jb.uid&&c.jb.uid===d.uid&&Af(c);B(b,a)})};h.ee=function(a,b){Cf(this);var c="/users/"+encodeURIComponent(a.email)+"/password",d=af(a);d.lc._method="PUT";d.lc.password=a.newPassword;this.Vc(c,d,function(a){B(b,a)})};
h.Je=function(a,b){Cf(this);var c="/users/"+encodeURIComponent(a.email)+"/password",d=af(a);d.lc._method="POST";this.Vc(c,d,function(a){B(b,a)})};h.Vc=function(a,b,c){Ff(this,[mf,pf],a,b,c)};function Df(a,b,c,d,e){Ff(a,b,c,d,function(b,c){!b&&c&&c.token&&c.uid?zf(a,c.token,c,d.ed,function(a,b){a?B(e,a):B(e,null,b)}):B(e,b||V("UNKNOWN_ERROR"))})}
function Ff(a,b,c,d,e){b=Ka(b,function(a){return"function"===typeof a.isAvailable&&a.isAvailable()});0===b.length?setTimeout(function(){B(e,V("TRANSPORT_UNAVAILABLE"))},0):(b=new (b.shift())(d.Sd),d=wa(d.lc),d.v="js-2.0.4",d.transport=b.uc(),d.suppress_status_codes=!0,a=jf()+"/"+a.Q.yb+c,b.open(a,d,function(a,b){if(a)B(e,a);else if(b&&b.error){var c=Error(b.error.message);c.code=b.error.code;c.details=b.error.details;B(e,c)}else B(e,null,b)}))}
function wf(a,b){var c=null!==a.jb||null!==b;a.jb=b;c&&a.Td("auth_status",b);a.Be(null!==b)}h.pe=function(a){x("auth_status"===a,'initial event must be of type "auth_status"');return[this.jb]};function Cf(a){var b=a.Q;if("firebaseio.com"!==b.domain&&"firebaseio-demo.com"!==b.domain&&"auth.firebase.com"===Ye)throw Error("This custom Firebase server ('"+a.Q.domain+"') does not support delegated login.");};function Gf(a,b){return a&&"object"===typeof a?(x(".sv"in a,"Unexpected leaf node or priority contents"),b[a[".sv"]]):a}function Hf(a,b){var c=new Pe;Re(a,new P(""),function(a,e){c.ic(a,If(e,b))});return c}function If(a,b){var c=a.O().N(),c=Gf(c,b),d;if(a.P()){var e=Gf(a.ta(),b);return e!==a.ta()||c!==a.O().N()?new Zc(e,J(c)):a}d=a;c!==a.O().N()&&(d=d.ib(new Zc(c)));a.ea(L,function(a,c){var e=If(c,b);e!==c&&(d=d.I(a,e))});return d};function W(a,b,c,d){this.type=a;this.Wa=b;this.nb=c;this.Rc=null;this.$f=d};function Jf(){}var Kf=new Jf;function Lf(a,b,c,d){var e,f;f=X(c);e=X(b);if(d.e())return c.u?(a=[],e?e.da(f)||(e.P()?a=Mf(f):f.P()?(a=[],e.P()||e.e()||a.push(new W("children_removed",e))):a=Nf(e,f),a.push(new W("value",f))):(a=Mf(f),a.push(new W("value",f))),0!==a.length||b.u||a.push(new W("value",f)),a):e?Nf(e,f):Mf(f);if(".priority"===G(d))return!c.u||e&&e.da(f)?[]:[new W("value",f)];if(c.u||1===Q(d))return e=G(d),f=f.B(e),a.kd(b,c,e,f);e=G(d);return f.Y(e)?(f=f.B(e),a.kd(b,c,e,f)):[]}
Jf.prototype.kd=function(a,b,c,d){(a=X(a))?a.Y(c)?(a=a.B(c),c=a.da(d)?[]:d.e()?[new W("child_removed",a,c)]:[new W("child_changed",d,c,a)]):c=d.e()?[]:[new W("child_added",d,c)]:c=d.e()?[]:[new W("child_added",d,c)];0<c.length&&b.u&&c.push(new W("value",X(b)));return c};function Mf(a){var b=[];a.P()||a.e()||b.push(new W("children_added",a));return b}
function Nf(a,b){var c=[],d=[],e=[],f=[],g={},k={},l,m,r,s;l=a.Aa(L);r=U(l);m=b.Aa(L);s=U(m);for(var y=H(L);null!==r||null!==s;){var N;N=r?s?y(r,s):-1:1;0>N?(N=v(g,r.name),n(N)?(f.push(d[N]),d[N]=null):(k[r.name]=e.length,e.push(r)),r=U(l)):(0<N?(N=v(k,s.name),n(N)?(f.push(s),e[N]=null):(g[s.name]=d.length,d.push(s))):((r=r.K.hash()!==s.K.hash())&&f.push(s),r=U(l)),s=U(m))}for(g=0;g<e.length;g++)(k=e[g])&&c.push(new W("child_removed",k.K,k.name));for(g=0;g<d.length;g++)(e=d[g])&&c.push(new W("child_added",
e.K,e.name));for(g=0;g<f.length;g++)d=f[g],c.push(new W("child_changed",d.K,d.name,a.B(d.name)));return c}function Of(a,b,c){this.bb=a;this.Ma=c;this.m=b}na(Of,Jf);
Of.prototype.kd=function(a,b,c,d){var e=X(a)||K,f=X(b)||K;if(e.Ua()<this.bb||f.Ua()<this.bb)return Of.oc.kd.call(this,a,b,c,d);x(!e.P()&&!f.P(),"If it's a leaf node, we should have hit the above case.");a=[];var g=e.B(c);g.e()?f.Y(c)&&(e=this.Ma?ld(e,this.m):md(e,this.m),a.push(new W("child_removed",e.K,e.name)),a.push(new W("child_added",d,c))):f.Y(c)?d.da(g)||a.push(new W("child_changed",d,c,e.B(c))):(a.push(new W("child_removed",g,c)),e=this.Ma?ld(f,this.m):md(f,this.m),a.push(new W("child_added",
e.K,e.name)));0<a.length&&b.u&&a.push(new W("value",f));return a};function Pf(){}h=Pf.prototype;
h.Xa=function(a,b,c,d){var e;if(b.type===Qf){if(b.source.$e)return this.Fa(a,b.path,b.Oa,c,d);x(b.source.Ze,"Unknown source.");e=b.source.wf;return this.Sa(a,b.path,b.Oa,c,d,e)}if(b.type===Rf){if(b.source.$e)return this.ae(a,b.path,b.children,c,d);x(b.source.Ze,"Unknown source.");e=b.source.wf;return this.$d(a,b.path,b.children,c,d,e)}if(b.type===Sf){if(b.sf)a:{var f=b.path;Tf(this,a);b=a.u;e=a.X;if(a.F){x(a.u,"Must have event snap if we have server snap");var g=c.Ya(f,a.u,a.F);if(g)if(b=a.u.L(f,
g),f.e())b=this.G(b);else{e=G(f);b=b.B(e);a=this.Ra(a,e,b,a.F,a.o,c,d);break a}}else if(a.o)if(a.u)(d=c.Ob())?b=this.G(d):(c=c.Ya(f,a.u,a.o))&&(b=this.G(b.L(f,c)));else{if(x(a.X,"We must at least have complete children"),x(!f.e(),"If the path were empty, we would have an event snap from the set"),c=c.Ya(f,a.X,a.o))e=a.X.L(f,c),e=this.G(e)}else if(a.u)(c=c.Ob())&&(b=this.G(c));else if(a.X){x(!f.e(),"If the path was empty, we would have an event snap");g=G(f);if(a.X.Y(g)){a=(b=c.Ib.Ob(c.Gb.k(g)))?this.Ra(a,
g,b,a.F,a.o,c,d):this.Ra(a,g,K,a.F,a.o,c,null);break a}x(1<Q(f),"Must be a deep set being reverted")}a=new Uf(a.F,a.o,b,e)}else a=this.Ea(a,b.path,c,d);return a}if(b.type===Vf)return b=b.path,Tf(this,a),this.Sa(a,b,(a.ab()||K).$(b),c,d,!1);throw ib("Unknown operation type: "+b.type);};function Tf(a,b){Wf(a,b.F);Wf(a,b.o);Wf(a,b.u);Wf(a,b.X)}function Wf(a,b){x(!b||a.Yb(b),"Expected an indexed snap")}
h.Fa=function(a,b,c,d,e){Tf(this,a);if(b.e())return b=this.G(c),new Uf(a.F,a.o,b,null);var f=X(a)||K,g=G(b);return 1===Q(b)||a.u||f.Y(g)?(c=f.B(G(b)).L(R(b),c),this.Ra(a,G(b),c,a.F,a.o,d,e)):a};h.ae=function(a,b,c,d,e){Tf(this,a);var f=this,g=a;Xf(c,function(c,l){var m=b.k(c);Yf(a,G(m))&&(g=f.Fa(g,m,l,d,e))});Xf(c,function(c,l){var m=b.k(c);Yf(a,G(m))||(g=f.Fa(g,m,l,d,e))});return g};
h.Ea=function(a,b,c,d){var e=a.u,f=a.X,g;Tf(this,a);if(a.F){x(e,"If we have a server snap, we must have an event snap");var k=c.Ya(b,a.u,a.F);if(k)if(b.e())e=this.G(k);else return g=G(b),b=e.L(b,k).B(g),this.Ra(a,g,b,a.F,a.o,c,d)}else if(a.o)if(e){var l=!1;a.o.ea(L,function(a,b){l||e.B(a).da(b)||(l=!0);l&&(e=e.I(a,b))});l&&(e=this.G(e))}else if(f&&(x(0<Q(b),"If it were an empty path, we would have an event snap"),g=G(b),1===Q(b)||f.Y(g))&&(k=c.Ya(b,f,a.o)))return b=f.L(b,k).B(g),this.Ra(a,g,b,a.F,
a.o,c,d);return new Uf(a.F,a.o,e,f)};
h.Sa=function(a,b,c,d,e,f){var g;Tf(this,a);var k=a.F,l=a.o;if(a.F)k=b.e()?this.G(c,f):this.G(a.F.L(b,c),f);else if(b.e())k=this.G(c,f),l=null;else if(1===Q(b)&&(a.o||!c.e()))l=a.o||this.Ia(K),l=this.G(l.L(b,c),f);else if(a.o&&(g=G(b),a.o.Y(g)))var m=a.o.B(g).L(R(b),c),l=this.G(a.o.I(g,m),f);g=!1;f=a.u;m=a.X;if(k!==a.F||l!==a.o)if(k&&!f)f=this.G(d.xa(k)),m=null;else if(k&&f&&!c.e()&&k.$(b).da(f.$(b)))g=!0;else if(c=d.Ya(b,f,k||l))if(b.e())f=this.G(c),m=null;else{g=G(b);b=R(b);a:{f=g;if(a.u)m=a.u.B(f);
else if(a.X)a.X.Y(f)?m=a.X.B(f):(x(b.e(),"According to precondition, this must be true"),m=K);else{if(b.e()){m=c;break a}x(a.F||a.o,"If we do not have event data, we must have server data");m=(a.F||a.o).B(f)}m=m.e()&&a.ab()?a.ab().B(f).L(b,c):m.L(b,c)}return this.Ra(a,g,m,k,l,d,e)}else g=!0;x(!g||f===a.u&&m===a.X,"We thought we could skip diffing, but we changed the eventCache.");return new Uf(k,l,f,m)};
h.$d=function(a,b,c,d,e,f){if(!a.F&&!a.o&&b.e())return a;Tf(this,a);var g=this,k=a;Xf(c,function(c,m){var r=b.k(c);Yf(a,G(r))&&(k=g.Sa(k,r,m,d,e,f))});Xf(c,function(c,m){var r=b.k(c);Yf(a,G(r))||(k=g.Sa(k,r,m,d,e,f))});return k};h.Ra=function(a,b,c,d,e){var f=a.u;a=a.X;f?f=this.G(f.I(b,c)):(a||(a=this.Ia(K)),a=this.G(a.I(b,c)));return new Uf(d,e,f,a)};h.G=function(a){return this.Ia(a)};function Yf(a,b){var c=X(a),d=a.ab();return!!(c&&c.Y(b)||d&&d.Y(b))};function Zf(a){this.gb=a;this.index=a.m;this.gb.ha&&n(pc(this.gb))?(a=qc(this.gb),a=this.index.ye(pc(this.gb),a)):a=this.index.Ae();this.Fb=a;this.gb.na&&n(rc(this.gb))?(a=sc(this.gb),a=this.index.ye(rc(this.gb),a)):a=this.index.ze();this.pb=a}na(Zf,Pf);Zf.prototype.Ia=function(a){return a.Wd(this.index)};Zf.prototype.Yb=function(a){return a.Yb(this.index)};
Zf.prototype.G=function(a,b){if(!1===b)return Zf.oc.G.call(this,a,!1);if(a.P())return this.Ia(K);for(var c=this.Ia(a),d=this.Fb,e=this.pb,f=H(this.index),g=c.Aa(this.index),k=U(g);k&&0<f(d,k);)c=c.I(k.name,K),k=U(g);g=c.rb(e,this.index);for((k=U(g))&&0>=f(k,e)&&(k=U(g));k;)c=c.I(k.name,K),k=U(g);return c};
Zf.prototype.Fa=function(a,b,c,d,e){Tf(this,a);if(1<Q(b)){var f=G(b);if((null!==X(a)?X(a):K).Y(f))return Zf.oc.Fa.call(this,a,b,c,d,e);var g=null!==e?e:a.ab(),g=null!==g&&g.Y(f)?g.B(f):null,g=d.k(f).xa(g);return null!==g?(b=g.L(R(b),c),this.Ra(a,f,b,a.F,a.o,d,e)):a}return Zf.oc.Fa.call(this,a,b,c,d,e)};function $f(a){Zf.call(this,a);this.Ma=!(""===a.Hb?a.ha:"l"===a.Hb);this.bb=tc(a)}na($f,Zf);
$f.prototype.G=function(a,b){if(!1===b)return $f.oc.G.call(this,a,!1);if(a.P())return this.Ia(K);var c=this.Ia(a),d,e,f,g;if(2*this.bb<a.Ua())for(d=this.Ia(K.ib(a.O())),c=this.Ma?c.Sb(this.pb,this.index):c.rb(this.Fb,this.index),e=U(c),f=0;e&&f<this.bb;)if(g=this.Ma?0>=H(this.index)(this.Fb,e):0>=H(this.index)(e,this.pb))d=d.I(e.name,e.K),f++,e=U(c);else break;else{d=this.Ia(a);var k,l,m=H(this.index);if(this.Ma){c=c.bf(this.index);k=this.pb;l=this.Fb;var r=m,m=function(a,b){return-1*r(a,b)}}else c=
c.Aa(this.index),k=this.Fb,l=this.pb;f=0;var s=!1;for(e=U(c);e;)!s&&0>=m(k,e)&&(s=!0),(g=s&&f<this.bb&&0>=m(e,l))?f++:d=d.I(e.name,K),e=U(c)}return d};$f.prototype.Ra=function(a,b,c,d,e,f,g){var k=X(a);return!k||k.Ua()<this.bb?$f.oc.Ra.call(this,a,b,c,d,e,f,g):(b=ag(this,a,b,c,f,g||d))?a.u?new Uf(d,e,b,null):new Uf(d,e,null,b):new Uf(d,e,a.u,a.X)};
function ag(a,b,c,d,e,f){var g=H(a.index),k;k=a.Ma?function(a,b){return-1*g(a,b)}:g;b=X(b);x(b.Ua()===a.bb,"Limit should be full.");var l=new I(c,d),m=a.Ma?ld(b,a.index):md(b,a.index);x(null!=m,"Shouldn't be null, since oldEventCache shouldn't be empty.");var r=0>=H(a.index)(a.Fb,l)&&0>=H(a.index)(l,a.pb);if(b.Y(c)){f=e.de(f,m,1,a.Ma,a.index);e=null;0<f.length&&(e=f[0],e.name===c&&(e=2<=f.length?f[1]:null));k=null==e?1:k(e,l);if(r&&!d.e()&&0<=k)return b.I(c,d);c=b.I(c,K);return null!=e&&0>=H(a.index)(a.Fb,
e)&&0>=H(a.index)(e,a.pb)?c.I(e.name,e.K):c}return d.e()?null:r?0<=k(m,l)?b.I(c,d).I(m.name,K):null:null};function bg(a){this.m=a}na(bg,Pf);bg.prototype.Ia=function(a){return a.Wd(this.m)};bg.prototype.Yb=function(a){return a.Yb(this.m)};function cg(a){this.U=a;this.m=a.w.m}
function dg(a,b,c,d){var e=[],f=a.m,g=La(Ka(b,function(a){return"child_changed"===a.type&&f.df(a.$f,a.Wa)}),function(a){return new W("child_moved",a.Wa,a.nb)}),k=Pa(b,function(a){return"child_removed"!==a.type&&"child_added"!==a.type});for(la(Ra,b,k,0).apply(null,g);0<b.length;){var g=b[0].type,k=eg(b,g),l=b.slice(0,k);b=b.slice(k);"value"===g||"children_added"===g||"children_removed"===g?x(1===l.length,"We should not have more than one of these at a view"):Ta(l,q(a.Lf,a));e=e.concat(fg(a,d,l,c))}return e}
function eg(a,b){var c=Pa(a,function(a){return a.type!==b});return-1===c?a.length:c}
function fg(a,b,c,d){for(var e=[],f=0;f<c.length;++f)for(var g=c[f],k=null,l=null,m=0;m<b.length;++m){var r=b[m];if(r.pf(g.type)){if(!k&&!l)if("children_added"===g.type){var s=a,y=g.Wa,l=[];if(!y.P()&&!y.e())for(var s=y.Aa(s.m),y=null,N=U(s);N;){var Je=new W("child_added",N.K,N.name);Je.Rc=y;l.push(Je);y=N.name;N=U(s)}}else if("children_removed"===g.type){if(s=a,y=g.Wa,l=[],!y.P()&&!y.e())for(s=y.Aa(s.m),y=U(s);y;)l.push(new W("child_removed",y.K,y.name)),y=U(s)}else k=g,"value"!==k.type&&"child_removed"!==
k.type&&(k.Rc=d.af(k.nb,k.Wa,a.m));if(k)e.push(r.createEvent(k,a.U));else for(s=0;s<l.length;++s)e.push(r.createEvent(l[s],a.U))}}return e}cg.prototype.Lf=function(a,b){if(null==a.nb||null==b.nb)throw ib("Should only compare child_ events.");return this.m.compare(new I(a.nb,a.Wa),new I(b.nb,b.Wa))};function gg(a,b){this.U=a;var c=a.w;wc(c)?(this.ec=new bg(c.m),this.ld=Kf):c.ka?(this.ec=new $f(c),this.ld=new Of(tc(c),c.m,this.ec.Ma)):(this.ec=new Zf(c),this.ld=Kf);c=this.ec;this.ia=new Uf(b.F&&c.G(b.F,!1),b.o&&c.G(b.o,!1),b.u&&c.G(b.u),b.X&&c.G(b.X));this.ya=[];this.le=new cg(a)}function hg(a){return a.U}h=gg.prototype;h.ab=function(){return this.ia.ab()};h.za=function(a){var b=this.ia.za();return b&&(wc(this.U.w)||!a.e()&&!b.B(G(a)).e())?b.$(a):null};h.e=function(){return 0===this.ya.length};
h.Jb=function(a){this.ya.push(a)};h.hb=function(a,b){var c=[];if(b){x(null==a,"A cancel should cancel all event registrations.");var d=this.U.path;Ja(this.ya,function(a){(a=a.Te(b,d))&&c.push(a)})}if(a){for(var e=[],f=0;f<this.ya.length;++f){var g=this.ya[f];if(!g.matches(a))e.push(g);else if(a.cf()){e=e.concat(this.ya.slice(f+1));break}}this.ya=e}else this.ya=[];return c};
h.Xa=function(a,b,c){a.type===Rf&&null!==a.source.fc&&(x(this.ia.za(),"We should always have a full cache before handling merges"),x(!!this.ia.u,"Missing event cache, even though we have a server cache"));var d=this.ia;b=this.ec.Xa(d,a,b,c);Tf(this.ec,b);this.ia=b;return X(b)!==X(d)?(a=Lf(this.ld,d,b,a.path),d=X(b),dg(this.le,a,d,this.ya)):b.u&&!d.u?(x(X(b)===X(d),"Caches should be the same."),d=X(b),dg(this.le,[new W("value",d)],d,this.ya)):[]};function Uf(a,b,c,d){this.F=a;this.o=b;this.u=c;this.X=d;x(null==a||null==b,"Only one of serverSnap / serverChildren can be non-null.");x(null==c||null==d,"Only one of eventSnap / eventChildren can be non-null.")}function X(a){return a.u||a.X}Uf.prototype.ab=function(){return this.F||this.o};Uf.prototype.za=function(){return this.F};var ig=new Uf(null,null,null,null);function jg(a,b){this.value=a;this.children=b||kg}var kg=new Lc(function(a,b){return a===b?0:a<b?-1:1}),lg=new jg(null);function mg(a){var b=lg;A(a,function(a,d){b=b.set(new P(d),a)});return b}h=jg.prototype;h.e=function(){return null===this.value&&this.children.e()};function ng(a,b,c){if(null!=a.value&&c(a.value))return{path:S,value:a.value};if(b.e())return null;var d=G(b);a=a.children.get(d);return null!==a?(b=ng(a,R(b),c),null!=b?{path:(new P(d)).k(b.path),value:b.value}:null):null}
function og(a,b){return ng(a,b,function(){return!0})}h.subtree=function(a){if(a.e())return this;var b=this.children.get(G(a));return null!==b?b.subtree(R(a)):lg};h.set=function(a,b){if(a.e())return new jg(b,this.children);var c=G(a),d=(this.children.get(c)||lg).set(R(a),b),c=this.children.Ja(c,d);return new jg(this.value,c)};
h.remove=function(a){if(a.e())return this.children.e()?lg:new jg(null,this.children);var b=G(a),c=this.children.get(b);return c?(a=c.remove(R(a)),b=a.e()?this.children.remove(b):this.children.Ja(b,a),null===this.value&&b.e()?lg:new jg(this.value,b)):this};h.get=function(a){if(a.e())return this.value;var b=this.children.get(G(a));return b?b.get(R(a)):null};
function pg(a,b,c){if(b.e())return c;var d=G(b);b=pg(a.children.get(d)||lg,R(b),c);d=b.e()?a.children.remove(d):a.children.Ja(d,b);return new jg(a.value,d)}function qg(a,b){return rg(a,S,b)}function rg(a,b,c){var d={};a.children.Ba(function(a,f){d[a]=rg(f,b.k(a),c)});return c(b,a.value,d)}function sg(a,b,c){return tg(a,b,S,c)}function tg(a,b,c,d){var e=a.value?d(c,a.value):!1;if(e)return e;if(b.e())return null;e=G(b);return(a=a.children.get(e))?tg(a,R(b),c.k(e),d):null}
function ug(a,b,c){if(!b.e()){var d=!0;a.value&&(d=c(S,a.value));!0===d&&(d=G(b),(a=a.children.get(d))&&vg(a,R(b),S.k(d),c))}}function vg(a,b,c,d){if(b.e())return a;a.value&&d(c,a.value);var e=G(b);return(a=a.children.get(e))?vg(a,R(b),c.k(e),d):lg}function Xf(a,b){wg(a,S,b)}function wg(a,b,c){a.children.Ba(function(a,e){wg(e,b.k(a),c)});a.value&&c(b,a.value)}function xg(a,b){a.children.Ba(function(a,d){d.value&&b(a,d.value)})};function yg(){this.qa={}}h=yg.prototype;h.e=function(){return Bd(this.qa)};h.Xa=function(a,b,c){var d=a.source.fc;if(null!==d)return d=v(this.qa,d),x(null!=d,"SyncTree gave us an op for an invalid query."),d.Xa(a,b,c);var e=[];A(this.qa,function(d){e=e.concat(d.Xa(a,b,c))});return e};h.Jb=function(a,b,c,d,e){var f=a.Da(),g=v(this.qa,f);g||(c=(g=c.xa(d))?null:c.ce(e),d=new Uf(d,e,g,c),g=new gg(a,d),this.qa[f]=g);g.Jb(b);a=g;(f=X(a.ia))?(d=Lf(a.ld,ig,a.ia,S),b=dg(a.le,d,f,b?[b]:a.ya)):b=[];return b};
h.hb=function(a,b,c){var d=a.Da(),e=[],f=[],g=null!=zg(this);if("default"===d){var k=this;A(this.qa,function(a,d){f=f.concat(a.hb(b,c));a.e()&&(delete k.qa[d],wc(a.U.w)||e.push(a.U))})}else{var l=v(this.qa,d);l&&(f=f.concat(l.hb(b,c)),l.e()&&(delete this.qa[d],wc(l.U.w)||e.push(l.U)))}g&&null==zg(this)&&e.push(new O(a.g,a.path));return{mg:e,Pf:f}};function Ag(a){return Ka(xd(a.qa),function(a){return!wc(a.U.w)})}h.za=function(a){var b=null;A(this.qa,function(c){b=b||c.za(a)});return b};
function Bg(a,b){if(wc(b.w))return zg(a);var c=b.Da();return v(a.qa,c)}function zg(a){return Ad(a.qa,function(a){return wc(a.U.w)})||null};function Cg(){this.V=lg;this.ra=[];this.Ec=-1}
function Dg(a,b){var c=Pa(a.ra,function(a){return a.Xd===b});x(0<=c,"removeWrite called with nonexistent writeId.");var d=a.ra[c];a.ra.splice(c,1);for(var e=!1,f=!1,g=!1,k=a.ra.length-1;!e&&0<=k;){var l=a.ra[k];k>=c&&Eg(l,d.path)?e=!0:!f&&d.path.contains(l.path)&&(k>=c?f=!0:g=!0);k--}e||(f||g?Fg(a):d.Oa?a.V=a.V.remove(d.path):A(d.children,function(b,c){a.V=a.V.remove(d.path.k(c))}));c=d.path;if(og(a.V,c)){if(g)return c;x(e,"Must have found a shadow");return null}return c}h=Cg.prototype;
h.Ob=function(a){var b=og(this.V,a);if(b){var c=b.value;a=T(b.path,a);return c.$(a)}return null};
h.xa=function(a,b,c,d){var e,f;if(c||d)return e=this.V.subtree(a),!d&&e.e()?b:d||null!==b||null!==e.value?(e=Gg(this.ra,function(b){return(b.visible||d)&&(!c||!(0<=Ia(c,b.Xd)))&&(b.path.contains(a)||a.contains(b.path))},a),f=b||K,Xf(e,function(a,b){f=f.L(a,b)}),f):null;if(e=og(this.V,a))return b=T(e.path,a),e.value.$(b);e=this.V.subtree(a);return e.e()?b:b||e.value?(f=b||K,Xf(e,function(a,b){f=f.L(a,b)}),f):null};
h.ce=function(a,b){var c=!1,d=K,e=this.Ob(a);if(e)return e.P()||e.ea(L,function(a,b){d=d.I(a,b)}),d;if(b)return d=b,xg(this.V.subtree(a),function(a,b){d=d.I(a,b)}),d;xg(this.V.subtree(a),function(a,b){c=!0;d=d.I(a,b)});return c?d:null};
h.Ya=function(a,b,c,d){x(c||d,"Either existingEventSnap or existingServerSnap must exist");a=a.k(b);if(og(this.V,a))return null;a=this.V.subtree(a);if(a.e())return d.$(b);var e;c?(e=!1,Xf(a,function(a,b){e||c.$(a).da(b)||(e=!0)})):e=!0;if(e){var f=d.$(b);Xf(a,function(a,b){f=f.L(a,b)});return f}return null};
h.de=function(a,b,c,d,e,f){var g;a=this.V.subtree(a);a.value?g=a.value:b&&(g=b,Xf(a,function(a,b){g=g.L(a,b)}));if(g){b=[];g=g.Wd(f);a=H(f);e=e?g.Sb(c,f):g.rb(c,f);for(f=U(e);f&&b.length<d;)0!==a(f,c)&&b.push(f),f=U(e);return b}return[]};function Eg(a,b){return a.Oa?a.path.contains(b):!!zd(a.children,function(c,d){return a.path.k(d).contains(b)})}function Fg(a){a.V=Gg(a.ra,Hg,S);a.Ec=0<a.ra.length?a.ra[a.ra.length-1].Xd:-1}function Hg(a){return a.visible}
function Gg(a,b,c){for(var d=lg,e=0;e<a.length;++e){var f=a[e];if(b(f)){var g=f.path,k;f.Oa?(c.contains(g)?(k=T(c,g),f=f.Oa):(k=S,f=f.Oa.$(T(g,c))),d=Ig(d,k,f)):d=Jg(d,f.path,f.children)}}return d}function Ig(a,b,c){var d=og(a,b);if(d){var e=d.value,d=d.path;b=T(d,b);c=e.L(b,c);a=pg(a,d,new jg(c))}else a=pg(a,b,new jg(c));return a}
function Jg(a,b,c){var d=og(a,b);if(d){var e=d.value,d=d.path,f=T(d,b),g=e;A(c,function(a,b){g=g.L(f.k(b),a)});a=pg(a,d,new jg(g))}else A(c,function(c,d){a=pg(a,b.k(d),new jg(c))});return a}function Kg(a,b){this.Gb=a;this.Ib=b}h=Kg.prototype;h.Ob=function(){return this.Ib.Ob(this.Gb)};h.xa=function(a,b,c){return this.Ib.xa(this.Gb,a,b,c)};h.ce=function(a){return this.Ib.ce(this.Gb,a)};h.Ya=function(a,b,c){return this.Ib.Ya(this.Gb,a,b,c)};
h.de=function(a,b,c,d,e){return this.Ib.de(this.Gb,a,b,c,d,e)};h.k=function(a){return new Kg(this.Gb.k(a),this.Ib)};function Lg(a,b,c){this.type=Qf;this.source=a;this.path=b;this.Oa=c}Lg.prototype.Mc=function(a){return this.path.e()?new Lg(this.source,S,this.Oa.B(a)):new Lg(this.source,R(this.path),this.Oa)};function Mg(a,b){this.type=Sf;this.source=Ng;this.path=a;this.sf=b}Mg.prototype.Mc=function(){return this.path.e()?this:new Mg(R(this.path),this.sf)};function Og(a,b){this.type=Vf;this.source=a;this.path=b}Og.prototype.Mc=function(){return this.path.e()?new Og(this.source,S):new Og(this.source,R(this.path))};function Pg(a,b,c){this.type=Rf;this.source=a;this.path=b;this.children=c}Pg.prototype.Mc=function(a){if(this.path.e())return a=this.children.subtree(new P(a)),a.e()?null:a.value?new Lg(this.source,S,a.value):new Pg(this.source,S,a);x(G(this.path)===a,"Can't get a merge for a child not on the path of the operation");return new Pg(this.source,R(this.path),this.children)};var Qf=0,Rf=1,Sf=2,Vf=3;function Qg(a,b,c,d){this.$e=a;this.Ze=b;this.fc=c;this.wf=d;x(!d||b,"Tagged queries must be from server.")}var Ng=new Qg(!0,!1,null,!1),Rg=new Qg(!1,!0,null,!1);function Sg(a){this.ma=lg;this.Bb=new Cg;this.Zc={};this.gc={};this.Fc=a}h=Sg.prototype;h.Fa=function(a,b,c,d){var e=this.Bb,f=d;x(c>e.Ec,"Stacking an older write on top of newer ones");n(f)||(f=!0);e.ra.push({path:a,Oa:b,Xd:c,visible:f});f&&(e.V=Ig(e.V,a,b));e.Ec=c;return d?Tg(this,new Lg(Ng,a,b)):[]};
h.ae=function(a,b,c){var d=this.Bb;x(c>d.Ec,"Stacking an older merge on top of newer ones");d.ra.push({path:a,children:b,Xd:c,visible:!0});d.V=Jg(d.V,a,b);d.Ec=c;b=mg(b);return Tg(this,new Pg(Ng,a,b))};h.Ea=function(a,b){b=b||!1;var c=Dg(this.Bb,a);return null==c?[]:Tg(this,new Mg(c,b))};h.Sa=function(a,b){return Tg(this,new Lg(Rg,a,b))};h.$d=function(a,b){var c=mg(b);return Tg(this,new Pg(Rg,a,c))};
function Ug(a,b,c,d){d=Cd(a.Zc,"_"+d);if(null!=d){var e=Vg(d);d=e.path;e=e.fc;b=T(d,b);c=new Lg(new Qg(!1,!0,e,!0),b,c);return Wg(a,d,c)}return[]}function Xg(a,b,c,d){if(d=Cd(a.Zc,"_"+d)){var e=Vg(d);d=e.path;e=e.fc;b=T(d,b);c=mg(c);c=new Pg(new Qg(!1,!0,e,!0),b,c);return Wg(a,d,c)}return[]}
h.Jb=function(a,b){var c=a.path,d=null,e=!1;ug(this.ma,c,function(a,b){var f=T(a,c);d=b.za(f);e=e||null!=zg(b);return!d});var f=this.ma.get(c);f?(e=e||null!=zg(f),d=d||f.za(S)):(f=new yg,this.ma=this.ma.set(c,f));var g=null;if(!d){var k=!1,g=K;xg(this.ma.subtree(c),function(a,b){var c=b.za(S);c&&(k=!0,g=g.I(a,c))});k||(g=null)}var l=null!=Bg(f,a);if(!l&&!wc(a.w)){var m=Yg(a);x(!(m in this.gc),"View does not exist, but we have a tag");var r=Zg++;this.gc[m]=r;this.Zc["_"+r]=m}m=f.Jb(a,b,new Kg(c,this.Bb),
d,g);l||e||(f=Bg(f,a),m=m.concat($g(this,a,f)));return m};
h.hb=function(a,b,c){var d=a.path,e=this.ma.get(d),f=[];if(e&&("default"===a.Da()||null!=Bg(e,a))){f=e.hb(a,b,c);e.e()&&(this.ma=this.ma.remove(d));e=f.mg;f=f.Pf;b=-1!==Pa(e,function(a){return wc(a.w)});var g=sg(this.ma,d,function(a,b){return null!=zg(b)});if(b&&!g&&(d=this.ma.subtree(d),!d.e()))for(var d=ah(d),k=0;k<d.length;++k){var l=d[k],m=l.U,l=bh(this,l);this.Fc.Le(m,ch(this,m),l.qd,l.H)}if(!g&&0<e.length&&!c)if(b)this.Fc.Od(a,null);else{var r=this;Ja(e,function(a){a.Da();var b=r.gc[Yg(a)];
r.Fc.Od(a,b)})}dh(this,e)}return f};h.xa=function(a,b){var c=this.Bb,d=sg(this.ma,a,function(b,c){var d=T(b,a);if(d=c.za(d))return d});return c.xa(a,d,b,!0)};function ah(a){return qg(a,function(a,c,d){if(c&&null!=zg(c))return[zg(c)];var e=[];c&&(e=Ag(c));A(d,function(a){e=e.concat(a)});return e})}function dh(a,b){for(var c=0;c<b.length;++c){var d=b[c];if(!wc(d.w)){var d=Yg(d),e=a.gc[d];delete a.gc[d];delete a.Zc["_"+e]}}}
function $g(a,b,c){var d=b.path,e=ch(a,b);c=bh(a,c);b=a.Fc.Le(b,e,c.qd,c.H);d=a.ma.subtree(d);if(e)x(null==zg(d.value),"If we're adding a query, it shouldn't be shadowed");else for(e=qg(d,function(a,b,c){if(!a.e()&&b&&null!=zg(b))return[hg(zg(b))];var d=[];b&&(d=d.concat(La(Ag(b),function(a){return a.U})));A(c,function(a){d=d.concat(a)});return d}),d=0;d<e.length;++d)c=e[d],a.Fc.Od(c,ch(a,c));return b}
function bh(a,b){var c=b.U,d=ch(a,c);return{qd:function(){return(b.ab()||K).hash()},H:function(b,f){if("ok"===b){if(f&&"object"===typeof f&&u(f,"w")){var g=v(f,"w");ea(g)&&0<=Ia(g,"no_index")&&z("Using an unspecified index. Consider adding "+('".indexOn": "'+c.w.m.toString()+'"')+" at "+c.path.toString()+" to your security rules for better performance")}if(d){var k=c.path;if(g=Cd(a.Zc,"_"+d))var l=Vg(g),g=l.path,l=l.fc,k=T(g,k),k=new Og(new Qg(!1,!0,l,!0),k),g=Wg(a,g,k);else g=[]}else g=Tg(a,new Og(Rg,
c.path));return g}g="Unknown Error";"too_big"===b?g="The data requested exceeds the maximum size that can be accessed with a single request.":"permission_denied"==b?g="Client doesn't have permission to access the desired data.":"unavailable"==b&&(g="The service is unavailable");g=Error(b+": "+g);g.code=b.toUpperCase();return a.hb(c,null,g)}}}function Yg(a){return a.path.toString()+"$"+a.Da()}
function Vg(a){var b=a.indexOf("$");x(-1!==b&&b<a.length-1,"Bad queryKey.");return{fc:a.substr(b+1),path:new P(a.substr(0,b))}}function ch(a,b){var c=Yg(b);return v(a.gc,c)}var Zg=1;function Wg(a,b,c){var d=a.ma.get(b);x(d,"Missing sync point for query tag that we're tracking");return d.Xa(c,new Kg(b,a.Bb),null)}function Tg(a,b){return eh(a,b,a.ma,null,new Kg(S,a.Bb))}
function eh(a,b,c,d,e){if(b.path.e())return fh(a,b,c,d,e);var f=c.get(S);null==d&&null!=f&&(d=f.za(S));var g=[],k=G(b.path),l=b.Mc(k);if((c=c.children.get(k))&&l)var m=d?d.B(k):null,k=e.k(k),g=g.concat(eh(a,l,c,m,k));f&&(g=g.concat(f.Xa(b,e,d)));return g}function fh(a,b,c,d,e){var f=c.get(S);null==d&&null!=f&&(d=f.za(S));var g=[];c.children.Ba(function(c,f){var m=d?d.B(c):null,r=e.k(c),s=b.Mc(c);s&&(g=g.concat(fh(a,s,f,m,r)))});f&&(g=g.concat(f.Xa(b,e,d)));return g};function gh(a){this.Q=a;this.Qa=Ld(a);this.Z=new Te;this.zd=1;this.S=new xe(this.Q,q(this.Cd,this),q(this.Ad,this),q(this.Ee,this));this.ug=Md(a,q(function(){return new Id(this.Qa,this.S)},this));this.pc=new Fc;this.qe=new Se;var b=this;this.ud=new Sg({Le:function(a,d,e,f){d=[];e=b.qe.Wc.$(a.path);e.e()||(d=b.ud.Sa(a.path,e),setTimeout(function(){f("ok")},0));return d},Od:ba});hh(this,"connected",!1);this.fa=new Pe;this.T=new tf(a,q(this.S.T,this.S),q(this.S.Pe,this.S),q(this.Be,this));this.jd=0;
this.re=null;this.M=new Sg({Le:function(a,d,e,f){Be(b.S,a,e,d,function(d,e){var l=f(d,e);Xe(b.Z,a.path,l)});return[]},Od:function(a,d){var e=b.S,f=a.path.toString(),g=a.Da();e.f("Unlisten called for "+f+" "+g);if(De(e,f,g)&&e.ja){var k=Dc(a);e.f("Unlisten on "+f+" for "+g);f={p:f};d&&(f.q=k,f.t=d);e.wa("n",f)}}})}h=gh.prototype;h.toString=function(){return(this.Q.Cb?"https://":"http://")+this.Q.host};h.name=function(){return this.Q.yb};
function ih(a){var b=new P(".info/serverTimeOffset");a=a.qe.Wc.$(b).N()||0;return(new Date).getTime()+a}function jh(a){a=a={timestamp:ih(a)};a.timestamp=a.timestamp||(new Date).getTime();return a}h.Cd=function(a,b,c,d){this.jd++;var e=new P(a);b=this.re?this.re(a,b):b;a=[];d?c?(b=fd(b,function(a){return J(a)}),a=Xg(this.M,e,b,d)):(b=J(b),a=Ug(this.M,e,b,d)):c?(d=fd(b,function(a){return J(a)}),a=this.M.$d(e,d)):(d=J(b),a=this.M.Sa(e,d));d=e;0<a.length&&(d=kh(this,e));Xe(this.Z,d,a)};
h.Ad=function(a){hh(this,"connected",a);!1===a&&lh(this)};h.Ee=function(a){var b=this;Cb(a,function(a,d){hh(b,d,a)})};h.Be=function(a){hh(this,"authenticated",a)};function hh(a,b,c){b=new P("/.info/"+b);c=J(c);var d=a.qe;d.Wc=d.Wc.L(b,c);c=a.ud.Sa(b,c);Xe(a.Z,b,c)}
h.Db=function(a,b,c,d){this.f("set",{path:a.toString(),value:b,Cg:c});var e=jh(this);b=J(b,c);var e=If(b,e),f=this.zd++,e=this.M.Fa(a,e,f,!0);Ue(this.Z,e);var g=this;this.S.put(a.toString(),b.N(!0),function(b,c){var e="ok"===b;e||z("set at "+a+" failed: "+b);e=g.M.Ea(f,!e);Xe(g.Z,a,e);mh(d,b,c)});e=nh(this,a);kh(this,e);Xe(this.Z,e,[])};
h.update=function(a,b,c){this.f("update",{path:a.toString(),value:b});var d=!0,e=jh(this),f={};A(b,function(a,b){d=!1;var c=J(a);f[b]=If(c,e)});if(d)kb("update() called with empty data.  Don't do anything."),mh(c,"ok");else{var g=this.zd++,k=this.M.ae(a,f,g);Ue(this.Z,k);var l=this;Ke(this.S,a.toString(),b,function(b,d){x("ok"===b||"permission_denied"===b,"merge at "+a+" failed.");var e="ok"===b;e||z("update at "+a+" failed: "+b);var e=l.M.Ea(g,!e),f=a;0<e.length&&(f=kh(l,a));Xe(l.Z,f,e);mh(c,b,d)});
b=nh(this,a);kh(this,b);Xe(this.Z,a,[])}};function lh(a){a.f("onDisconnectEvents");var b=jh(a),c=[];Re(Hf(a.fa,b),S,function(b,e){c=c.concat(a.M.Sa(b,e));var f=nh(a,b);kh(a,f)});a.fa=new Pe;Xe(a.Z,S,c)}h.Ce=function(a,b){var c=this;this.S.Ce(a.toString(),function(d,e){"ok"===d&&Qe(c.fa,a);mh(b,d,e)})};function oh(a,b,c,d){var e=J(c);Fe(a.S,b.toString(),e.N(!0),function(c,g){"ok"===c&&a.fa.ic(b,e);mh(d,c,g)})}
function ph(a,b,c,d,e){var f=J(c,d);Fe(a.S,b.toString(),f.N(!0),function(c,d){"ok"===c&&a.fa.ic(b,f);mh(e,c,d)})}function qh(a,b,c,d){var e=!0,f;for(f in c)e=!1;e?(kb("onDisconnect().update() called with empty data.  Don't do anything."),mh(d,"ok")):He(a.S,b.toString(),c,function(e,f){if("ok"===e)for(var l in c){var m=J(c[l]);a.fa.ic(b.k(l),m)}mh(d,e,f)})}function Bc(a,b,c){c=".info"===G(b.path)?a.ud.Jb(b,c):a.M.Jb(b,c);Cc(a.Z,b.path,c)}h.tb=function(){this.S.tb()};h.kc=function(){this.S.kc()};
h.Me=function(a){if("undefined"!==typeof console){a?(this.Nd||(this.Nd=new Hd(this.Qa)),a=this.Nd.get()):a=this.Qa.get();var b=Ma(yd(a),function(a,b){return Math.max(b.length,a)},0),c;for(c in a){for(var d=a[c],e=c.length;e<b+2;e++)c+=" ";console.log(c+d)}}};h.Ne=function(a){Gd(this.Qa,a);this.ug.uf[a]=!0};h.f=function(a){kb("r:"+this.S.id+":",arguments)};function mh(a,b,c){a&&Fb(function(){if("ok"==b)a(null);else{var d=(b||"error").toUpperCase(),e=d;c&&(e+=": "+c);e=Error(e);e.code=d;a(e)}})};function rh(a,b,c,d,e){function f(){}a.f("transaction on "+b);var g=new O(a,b);g.zb("value",f);c={path:b,update:c,H:d,status:null,lf:hb(),Qe:e,rf:0,Vd:function(){g.bc("value",f)},Yd:null,sa:null,fd:null,gd:null,hd:null};d=a.M.xa(b,void 0)||K;c.fd=d;d=c.update(d.N());if(n(d)){Tb("transaction failed: Data returned ",d);c.status=1;e=Gc(a.pc,b);var k=e.ta()||[];k.push(c);Hc(e,k);"object"===typeof d&&null!==d&&u(d,".priority")?(k=v(d,".priority"),x(Rb(k),"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.")):
k=(a.M.xa(b)||K).O().N();e=jh(a);d=J(d,k);e=If(d,e);c.gd=d;c.hd=e;c.sa=a.zd++;c=a.M.Fa(b,e,c.sa,c.Qe);Xe(a.Z,b,c);sh(a)}else c.Vd(),c.gd=null,c.hd=null,c.H&&(a=new C(c.fd,new O(a,c.path),L),c.H(null,!1,a))}function sh(a,b){var c=b||a.pc;b||th(a,c);if(null!==c.ta()){var d=uh(a,c);x(0<d.length,"Sending zero length transaction queue");Na(d,function(a){return 1===a.status})&&vh(a,c.path(),d)}else c.pd()&&c.ea(function(b){sh(a,b)})}
function vh(a,b,c){for(var d=La(c,function(a){return a.sa}),e=a.M.xa(b,d)||K,d=e,e=e.hash(),f=0;f<c.length;f++){var g=c[f];x(1===g.status,"tryToSendTransactionQueue_: items in queue should all be run.");g.status=2;g.rf++;var k=T(b,g.path),d=d.L(k,g.gd)}d=d.N(!0);a.S.put(b.toString(),d,function(d){a.f("transaction put response",{path:b.toString(),status:d});var e=[];if("ok"===d){d=[];for(f=0;f<c.length;f++){c[f].status=3;e=e.concat(a.M.Ea(c[f].sa));if(c[f].H){var g=c[f].hd,k=new O(a,c[f].path);d.push(q(c[f].H,
null,null,!0,new C(g,k,L)))}c[f].Vd()}th(a,Gc(a.pc,b));sh(a);Xe(a.Z,b,e);for(f=0;f<d.length;f++)Fb(d[f])}else{if("datastale"===d)for(f=0;f<c.length;f++)c[f].status=4===c[f].status?5:1;else for(z("transaction at "+b.toString()+" failed: "+d),f=0;f<c.length;f++)c[f].status=5,c[f].Yd=d;kh(a,b)}},e)}function kh(a,b){var c=wh(a,b),d=c.path(),c=uh(a,c);xh(a,c,d);return d}
function xh(a,b,c){if(0!==b.length){for(var d=[],e=[],f=La(b,function(a){return a.sa}),g=0;g<b.length;g++){var k=b[g],l=T(c,k.path),m=!1,r;x(null!==l,"rerunTransactionsUnderNode_: relativePath should not be null.");if(5===k.status)m=!0,r=k.Yd,e=e.concat(a.M.Ea(k.sa,!0));else if(1===k.status)if(25<=k.rf)m=!0,r="maxretry",e=e.concat(a.M.Ea(k.sa,!0));else{var s=a.M.xa(k.path,f)||K;k.fd=s;var y=b[g].update(s.N());n(y)?(Tb("transaction failed: Data returned ",y),l=J(y),"object"===typeof y&&null!=y&&u(y,
".priority")||(l=l.ib(s.O())),s=k.sa,y=jh(a),y=If(l,y),k.gd=l,k.hd=y,k.sa=a.zd++,Qa(f,s),e=e.concat(a.M.Fa(k.path,y,k.sa,k.Qe)),e=e.concat(a.M.Ea(s,!0))):(m=!0,r="nodata",e=e.concat(a.M.Ea(k.sa,!0)))}Xe(a.Z,c,e);e=[];m&&(b[g].status=3,setTimeout(b[g].Vd,Math.floor(0)),b[g].H&&("nodata"===r?(k=new O(a,b[g].path),d.push(q(b[g].H,null,null,!1,new C(b[g].fd,k,L)))):d.push(q(b[g].H,null,Error(r),!1,null))))}th(a,a.pc);for(g=0;g<d.length;g++)Fb(d[g]);sh(a)}}
function wh(a,b){for(var c,d=a.pc;null!==(c=G(b))&&null===d.ta();)d=Gc(d,c),b=R(b);return d}function uh(a,b){var c=[];yh(a,b,c);c.sort(function(a,b){return a.lf-b.lf});return c}function yh(a,b,c){var d=b.ta();if(null!==d)for(var e=0;e<d.length;e++)c.push(d[e]);b.ea(function(b){yh(a,b,c)})}function th(a,b){var c=b.ta();if(c){for(var d=0,e=0;e<c.length;e++)3!==c[e].status&&(c[d]=c[e],d++);c.length=d;Hc(b,0<c.length?c:null)}b.ea(function(b){th(a,b)})}
function nh(a,b){var c=wh(a,b).path(),d=Gc(a.pc,b);Kc(d,function(b){zh(a,b)});zh(a,d);Jc(d,function(b){zh(a,b)});return c}
function zh(a,b){var c=b.ta();if(null!==c){for(var d=[],e=[],f=-1,g=0;g<c.length;g++)4!==c[g].status&&(2===c[g].status?(x(f===g-1,"All SENT items should be at beginning of queue."),f=g,c[g].status=4,c[g].Yd="set"):(x(1===c[g].status,"Unexpected transaction status in abort"),c[g].Vd(),e=e.concat(a.M.Ea(c[g].sa,!0)),c[g].H&&d.push(q(c[g].H,null,Error("set"),!1,null))));-1===f?Hc(b,null):c.length=f+1;Xe(a.Z,b.path(),e);for(g=0;g<d.length;g++)Fb(d[g])}};function Ah(){this.jc={}}ca(Ah);Ah.prototype.tb=function(){for(var a in this.jc)this.jc[a].tb()};Ah.prototype.interrupt=Ah.prototype.tb;Ah.prototype.kc=function(){for(var a in this.jc)this.jc[a].kc()};Ah.prototype.resume=Ah.prototype.kc;function Bh(a){var b=this;this.tc=a;this.Qd="*";lf()?this.Hc=this.sd=cf():(this.Hc=window.opener,this.sd=window);if(!b.Hc)throw"Unable to find relay frame";df(this.sd,"message",q(this.cc,this));df(this.sd,"message",q(this.hf,this));try{Ch(this,{a:"ready"})}catch(c){df(this.Hc,"load",function(){Ch(b,{a:"ready"})})}df(window,"unload",q(this.eg,this))}function Ch(a,b){b=t(b);lf()?a.Hc.doPost(b,a.Qd):a.Hc.postMessage(b,a.Qd)}
Bh.prototype.cc=function(a){var b=this,c;try{c=ua(a.data)}catch(d){}c&&"request"===c.a&&(ef(window,"message",this.cc),this.Qd=a.origin,this.tc&&setTimeout(function(){b.tc(b.Qd,c.d,function(a,c){b.If=!c;b.tc=void 0;Ch(b,{a:"response",d:a,forceKeepWindowOpen:c})})},0))};Bh.prototype.eg=function(){try{ef(this.sd,"message",this.hf)}catch(a){}this.tc&&(Ch(this,{a:"error",d:"unknown closed window"}),this.tc=void 0);try{window.close()}catch(b){}};Bh.prototype.hf=function(a){if(this.If&&"die"===a.data)try{window.close()}catch(b){}};var Y={Rf:function(){Yd=Pd=!0}};Y.forceLongPolling=Y.Rf;Y.Sf=function(){Zd=!0};Y.forceWebSockets=Y.Sf;Y.rg=function(a,b){a.g.S.Ke=b};Y.setSecurityDebugCallback=Y.rg;Y.Me=function(a,b){a.g.Me(b)};Y.stats=Y.Me;Y.Ne=function(a,b){a.g.Ne(b)};Y.statsIncrementCounter=Y.Ne;Y.jd=function(a){return a.g.jd};Y.dataUpdateCount=Y.jd;Y.Vf=function(a,b){a.g.re=b};Y.interceptServerData=Y.Vf;Y.bg=function(a){new Bh(a)};Y.onPopupOpen=Y.bg;Y.pg=function(a){Ye=a};Y.setAuthenticationServer=Y.pg;function Z(a,b){this.Sc=a;this.Ca=b}Z.prototype.cancel=function(a){D("Firebase.onDisconnect().cancel",0,1,arguments.length);F("Firebase.onDisconnect().cancel",1,a,!0);this.Sc.Ce(this.Ca,a||null)};Z.prototype.cancel=Z.prototype.cancel;Z.prototype.remove=function(a){D("Firebase.onDisconnect().remove",0,1,arguments.length);$b("Firebase.onDisconnect().remove",this.Ca);F("Firebase.onDisconnect().remove",1,a,!0);oh(this.Sc,this.Ca,null,a)};Z.prototype.remove=Z.prototype.remove;
Z.prototype.set=function(a,b){D("Firebase.onDisconnect().set",1,2,arguments.length);$b("Firebase.onDisconnect().set",this.Ca);Sb("Firebase.onDisconnect().set",a,!1);F("Firebase.onDisconnect().set",2,b,!0);oh(this.Sc,this.Ca,a,b)};Z.prototype.set=Z.prototype.set;
Z.prototype.Db=function(a,b,c){D("Firebase.onDisconnect().setWithPriority",2,3,arguments.length);$b("Firebase.onDisconnect().setWithPriority",this.Ca);Sb("Firebase.onDisconnect().setWithPriority",a,!1);Wb("Firebase.onDisconnect().setWithPriority",2,b);F("Firebase.onDisconnect().setWithPriority",3,c,!0);ph(this.Sc,this.Ca,a,b,c)};Z.prototype.setWithPriority=Z.prototype.Db;
Z.prototype.update=function(a,b){D("Firebase.onDisconnect().update",1,2,arguments.length);$b("Firebase.onDisconnect().update",this.Ca);if(ea(a)){for(var c={},d=0;d<a.length;++d)c[""+d]=a[d];a=c;z("Passing an Array to Firebase.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}Vb("Firebase.onDisconnect().update",a);F("Firebase.onDisconnect().update",2,b,!0);qh(this.Sc,
this.Ca,a,b)};Z.prototype.update=Z.prototype.update;var $={};$.rc=xe;$.DataConnection=$.rc;xe.prototype.tg=function(a,b){this.wa("q",{p:a},b)};$.rc.prototype.simpleListen=$.rc.prototype.tg;xe.prototype.Nf=function(a,b){this.wa("echo",{d:a},b)};$.rc.prototype.echo=$.rc.prototype.Nf;xe.prototype.interrupt=xe.prototype.tb;$.zf=ie;$.RealTimeConnection=$.zf;ie.prototype.sendRequest=ie.prototype.wa;ie.prototype.close=ie.prototype.close;
$.Uf=function(a){var b=xe.prototype.put;xe.prototype.put=function(c,d,e,f){n(f)&&(f=a());b.call(this,c,d,e,f)};return function(){xe.prototype.put=b}};$.hijackHash=$.Uf;$.yf=Ca;$.ConnectionTarget=$.yf;$.Da=function(a){return a.Da()};$.queryIdentifier=$.Da;$.Wf=function(a){return a.g.S.ua};$.listens=$.Wf;var Dh=function(){var a=0,b=[];return function(c){var d=c===a;a=c;for(var e=Array(8),f=7;0<=f;f--)e[f]="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(c%64),c=Math.floor(c/64);x(0===c,"Cannot push at time == 0");c=e.join("");if(d){for(f=11;0<=f&&63===b[f];f--)b[f]=0;b[f]++}else for(f=0;12>f;f++)b[f]=Math.floor(64*Math.random());for(f=0;12>f;f++)c+="-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[f]);x(20===c.length,"NextPushId: Length should be 20.");
return c}}();function O(a,b){var c,d,e;if(a instanceof gh)c=a,d=b;else{D("new Firebase",1,2,arguments.length);d=ub(arguments[0]);c=d.vg;"firebase"===d.domain&&tb(d.host+" is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead");c||tb("Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com");d.Cb||"undefined"!==typeof window&&window.location&&window.location.protocol&&-1!==window.location.protocol.indexOf("https:")&&z("Insecure Firebase access from a secure page. Please use https in calls to new Firebase().");
c=new Ca(d.host,d.Cb,c,"ws"===d.scheme||"wss"===d.scheme);d=new P(d.Pc);e=d.toString();var f;!(f=!p(c.host)||0===c.host.length||!Qb(c.yb))&&(f=0!==e.length)&&(e&&(e=e.replace(/^\/*\.info(\/|$)/,"/")),f=!(p(e)&&0!==e.length&&!Pb.test(e)));if(f)throw Error(E("new Firebase",1,!1)+'must be a valid firebase URL and the path can\'t contain ".", "#", "$", "[", or "]".');if(b)if(b instanceof Ah)e=b;else if(p(b))e=Ah.Qb(),c.Gd=b;else throw Error("Expected a valid Firebase.Context for second argument to new Firebase()");
else e=Ah.Qb();f=c.toString();var g=v(e.jc,f);g||(g=new gh(c),e.jc[f]=g);c=g}M.call(this,c,d,oc,!1)}na(O,M);var Eh=O,Fh=["Firebase"],Gh=aa;Fh[0]in Gh||!Gh.execScript||Gh.execScript("var "+Fh[0]);for(var Hh;Fh.length&&(Hh=Fh.shift());)!Fh.length&&n(Eh)?Gh[Hh]=Eh:Gh=Gh[Hh]?Gh[Hh]:Gh[Hh]={};O.prototype.name=function(){z("Firebase.name() being deprecated. Please use Firebase.key() instead.");D("Firebase.name",0,0,arguments.length);return this.key()};O.prototype.name=O.prototype.name;
O.prototype.key=function(){D("Firebase.key",0,0,arguments.length);var a;this.path.e()?a=null:(a=this.path,a=a.ba<a.n.length?a.n[a.n.length-1]:null);return a};O.prototype.key=O.prototype.key;O.prototype.k=function(a){D("Firebase.child",1,1,arguments.length);if(ga(a))a=String(a);else if(!(a instanceof P))if(null===G(this.path)){var b=a;b&&(b=b.replace(/^\/*\.info(\/|$)/,"/"));Zb("Firebase.child",b)}else Zb("Firebase.child",a);return new O(this.g,this.path.k(a))};O.prototype.child=O.prototype.k;
O.prototype.parent=function(){D("Firebase.parent",0,0,arguments.length);var a=this.path.parent();return null===a?null:new O(this.g,a)};O.prototype.parent=O.prototype.parent;O.prototype.root=function(){D("Firebase.ref",0,0,arguments.length);for(var a=this;null!==a.parent();)a=a.parent();return a};O.prototype.root=O.prototype.root;
O.prototype.toString=function(){D("Firebase.toString",0,0,arguments.length);var a;if(null===this.parent())a=this.g.toString();else{a=this.parent().toString()+"/";var b=this.key();a+=encodeURIComponent(String(b))}return a};O.prototype.toString=O.prototype.toString;O.prototype.set=function(a,b){D("Firebase.set",1,2,arguments.length);$b("Firebase.set",this.path);Sb("Firebase.set",a,!1);F("Firebase.set",2,b,!0);this.g.Db(this.path,a,null,b||null)};O.prototype.set=O.prototype.set;
O.prototype.update=function(a,b){D("Firebase.update",1,2,arguments.length);$b("Firebase.update",this.path);if(ea(a)){for(var c={},d=0;d<a.length;++d)c[""+d]=a[d];a=c;z("Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.")}Vb("Firebase.update",a);F("Firebase.update",2,b,!0);if(u(a,".priority"))throw Error("update() does not currently support updating .priority.");
this.g.update(this.path,a,b||null)};O.prototype.update=O.prototype.update;O.prototype.Db=function(a,b,c){D("Firebase.setWithPriority",2,3,arguments.length);$b("Firebase.setWithPriority",this.path);Sb("Firebase.setWithPriority",a,!1);Wb("Firebase.setWithPriority",2,b);F("Firebase.setWithPriority",3,c,!0);if(".length"===this.key()||".keys"===this.key())throw"Firebase.setWithPriority failed: "+this.key()+" is a read-only object.";this.g.Db(this.path,a,b,c||null)};O.prototype.setWithPriority=O.prototype.Db;
O.prototype.remove=function(a){D("Firebase.remove",0,1,arguments.length);$b("Firebase.remove",this.path);F("Firebase.remove",1,a,!0);this.set(null,a)};O.prototype.remove=O.prototype.remove;
O.prototype.transaction=function(a,b,c){D("Firebase.transaction",1,3,arguments.length);$b("Firebase.transaction",this.path);F("Firebase.transaction",1,a,!1);F("Firebase.transaction",2,b,!0);if(n(c)&&"boolean"!=typeof c)throw Error(E("Firebase.transaction",3,!0)+"must be a boolean.");if(".length"===this.key()||".keys"===this.key())throw"Firebase.transaction failed: "+this.key()+" is a read-only object.";"undefined"===typeof c&&(c=!0);rh(this.g,this.path,a,b||null,c)};O.prototype.transaction=O.prototype.transaction;
O.prototype.qg=function(a,b){D("Firebase.setPriority",1,2,arguments.length);$b("Firebase.setPriority",this.path);Wb("Firebase.setPriority",1,a);F("Firebase.setPriority",2,b,!0);this.g.Db(this.path.k(".priority"),a,null,b)};O.prototype.setPriority=O.prototype.qg;O.prototype.push=function(a,b){D("Firebase.push",0,2,arguments.length);$b("Firebase.push",this.path);Sb("Firebase.push",a,!0);F("Firebase.push",2,b,!0);var c=ih(this.g),c=Dh(c),c=this.k(c);"undefined"!==typeof a&&null!==a&&c.set(a,b);return c};
O.prototype.push=O.prototype.push;O.prototype.fb=function(){$b("Firebase.onDisconnect",this.path);return new Z(this.g,this.path)};O.prototype.onDisconnect=O.prototype.fb;O.prototype.T=function(a,b,c){z("FirebaseRef.auth() being deprecated. Please use FirebaseRef.authWithCustomToken() instead.");D("Firebase.auth",1,3,arguments.length);ac("Firebase.auth",a);F("Firebase.auth",2,b,!0);F("Firebase.auth",3,b,!0);zf(this.g.T,a,{},{remember:"none"},b,c)};O.prototype.auth=O.prototype.T;
O.prototype.Pe=function(a){D("Firebase.unauth",0,1,arguments.length);F("Firebase.unauth",1,a,!0);Af(this.g.T,a)};O.prototype.unauth=O.prototype.Pe;O.prototype.ne=function(){D("Firebase.getAuth",0,0,arguments.length);return this.g.T.ne()};O.prototype.getAuth=O.prototype.ne;O.prototype.ag=function(a,b){D("Firebase.onAuth",1,2,arguments.length);F("Firebase.onAuth",1,a,!1);Nb("Firebase.onAuth",2,b);this.g.T.zb("auth_status",a,b)};O.prototype.onAuth=O.prototype.ag;
O.prototype.Zf=function(a,b){D("Firebase.offAuth",1,2,arguments.length);F("Firebase.offAuth",1,a,!1);Nb("Firebase.offAuth",2,b);this.g.T.bc("auth_status",a,b)};O.prototype.offAuth=O.prototype.Zf;O.prototype.Df=function(a,b,c){D("Firebase.authWithCustomToken",2,3,arguments.length);ac("Firebase.authWithCustomToken",a);F("Firebase.authWithCustomToken",2,b,!1);cc("Firebase.authWithCustomToken",3,c,!0);zf(this.g.T,a,{},c||{},b)};O.prototype.authWithCustomToken=O.prototype.Df;
O.prototype.Ef=function(a,b,c){D("Firebase.authWithOAuthPopup",2,3,arguments.length);bc("Firebase.authWithOAuthPopup",1,a);F("Firebase.authWithOAuthPopup",2,b,!1);cc("Firebase.authWithOAuthPopup",3,c,!0);Ef(this.g.T,a,c,b)};O.prototype.authWithOAuthPopup=O.prototype.Ef;
O.prototype.Ff=function(a,b,c){D("Firebase.authWithOAuthRedirect",2,3,arguments.length);bc("Firebase.authWithOAuthRedirect",1,a);F("Firebase.authWithOAuthRedirect",2,b,!1);cc("Firebase.authWithOAuthRedirect",3,c,!0);var d=this.g.T;Cf(d);var e=[sf],f=af(c);"anonymous"===a||"firebase"===a?B(b,V("TRANSPORT_UNAVAILABLE")):(Ba.set("redirect_client_options",f.ed),Df(d,e,"/auth/"+a,f,b))};O.prototype.authWithOAuthRedirect=O.prototype.Ff;
O.prototype.Gf=function(a,b,c,d){D("Firebase.authWithOAuthToken",3,4,arguments.length);bc("Firebase.authWithOAuthToken",1,a);F("Firebase.authWithOAuthToken",3,c,!1);cc("Firebase.authWithOAuthToken",4,d,!0);p(b)?(bc("Firebase.authWithOAuthToken",2,b),Bf(this.g.T,a+"/token",{access_token:b},d,c)):(cc("Firebase.authWithOAuthToken",2,b,!1),Bf(this.g.T,a+"/token",b,d,c))};O.prototype.authWithOAuthToken=O.prototype.Gf;
O.prototype.Cf=function(a,b){D("Firebase.authAnonymously",1,2,arguments.length);F("Firebase.authAnonymously",1,a,!1);cc("Firebase.authAnonymously",2,b,!0);Bf(this.g.T,"anonymous",{},b,a)};O.prototype.authAnonymously=O.prototype.Cf;
O.prototype.Hf=function(a,b,c){D("Firebase.authWithPassword",2,3,arguments.length);cc("Firebase.authWithPassword",1,a,!1);dc("Firebase.authWithPassword",a,"email");dc("Firebase.authWithPassword",a,"password");F("Firebase.authAnonymously",2,b,!1);cc("Firebase.authAnonymously",3,c,!0);Bf(this.g.T,"password",a,c,b)};O.prototype.authWithPassword=O.prototype.Hf;
O.prototype.je=function(a,b){D("Firebase.createUser",2,2,arguments.length);cc("Firebase.createUser",1,a,!1);dc("Firebase.createUser",a,"email");dc("Firebase.createUser",a,"password");F("Firebase.createUser",2,b,!1);this.g.T.je(a,b)};O.prototype.createUser=O.prototype.je;O.prototype.Ie=function(a,b){D("Firebase.removeUser",2,2,arguments.length);cc("Firebase.removeUser",1,a,!1);dc("Firebase.removeUser",a,"email");dc("Firebase.removeUser",a,"password");F("Firebase.removeUser",2,b,!1);this.g.T.Ie(a,b)};
O.prototype.removeUser=O.prototype.Ie;O.prototype.ee=function(a,b){D("Firebase.changePassword",2,2,arguments.length);cc("Firebase.changePassword",1,a,!1);dc("Firebase.changePassword",a,"email");dc("Firebase.changePassword",a,"oldPassword");dc("Firebase.changePassword",a,"newPassword");F("Firebase.changePassword",2,b,!1);this.g.T.ee(a,b)};O.prototype.changePassword=O.prototype.ee;
O.prototype.Je=function(a,b){D("Firebase.resetPassword",2,2,arguments.length);cc("Firebase.resetPassword",1,a,!1);dc("Firebase.resetPassword",a,"email");F("Firebase.resetPassword",2,b,!1);this.g.T.Je(a,b)};O.prototype.resetPassword=O.prototype.Je;O.goOffline=function(){D("Firebase.goOffline",0,0,arguments.length);Ah.Qb().tb()};O.goOnline=function(){D("Firebase.goOnline",0,0,arguments.length);Ah.Qb().kc()};
function qb(a,b){x(!b||!0===a||!1===a,"Can't turn on custom loggers persistently.");!0===a?("undefined"!==typeof console&&("function"===typeof console.log?ob=q(console.log,console):"object"===typeof console.log&&(ob=function(a){console.log(a)})),b&&Ba.set("logging_enabled",!0)):a?ob=a:(ob=null,Ba.remove("logging_enabled"))}O.enableLogging=qb;O.ServerValue={TIMESTAMP:{".sv":"timestamp"}};O.SDK_VERSION="2.0.4";O.INTERNAL=Y;O.Context=Ah;O.TEST_ACCESS=$;})();
module.exports = Firebase;

},{}],102:[function(require,module,exports){
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    define(function() {
      return (root.languageMappingList = factory());
    });
  } else if (typeof exports === 'object') {
    module.exports = factory();
  } else {
    root.languageMappingList = factory();
  }
}(this, function() {
  return {
    'ach': {
      nativeName: "Lwo",
      englishName: "Acholi"
    },
    'ady': {
      nativeName: "Адыгэбзэ",
      englishName: "Adyghe"
    },
    'af': {
      nativeName: "Afrikaans",
      englishName: "Afrikaans"
    },
    'af-NA': {
      nativeName: "Afrikaans (Namibia)",
      englishName: "Afrikaans (Namibia)"
    },
    'af-ZA': {
      nativeName: "Afrikaans (South Africa)",
      englishName: "Afrikaans (South Africa)"
    },
    'ak': {
      nativeName: "Tɕɥi",
      englishName: "Akan"
    },
    'ar': {
      nativeName: "العربية",
      englishName: "Arabic"
    },
    'ar-AR': {
      nativeName: "العربية",
      englishName: "Arabic"
    },
    'ay-BO': {
      nativeName: "Aymar aru",
      englishName: "Aymara"
    },
    'az-AZ': {
      nativeName: "Azərbaycan dili",
      englishName: "Azerbaijani"
    },
    'be-BY': {
      nativeName: "Беларуская",
      englishName: "Belarusian"
    },
    'bg-BG': {
      nativeName: "Български",
      englishName: "Bulgarian"
    },
    'bn': {
      nativeName: "বাংলা",
      englishName: "Bengali"
    },
    'bn-IN': {
      nativeName: "বাংলা (ভারত)",
      englishName: "Bengali (India)"
    },
    'bn-BD': {
      nativeName: "বাংলা(বাংলাদেশ)",
      englishName: "Bengali (Bangladesh)"
    },
    'bs-BA': {
      nativeName: "Bosanski",
      englishName: "Bosnian"
    },
    'ca': {
      nativeName: "Català",
      englishName: "Catalan"
    },
    'ca-ES': {
      nativeName: "Català",
      englishName: "Catalan"
    },
    'ck-US': {
      nativeName: "ᏣᎳᎩ (tsalagi)",
      englishName: "Cherokee"
    },
    'cs': {
      nativeName: "Čeština",
      englishName: "Czech"
    },
    'cs-CZ': {
      nativeName: "Čeština",
      englishName: "Czech"
    },
    'cy-GB': {
      nativeName: "Cymraeg",
      englishName: "Welsh"
    },
    'da-DK': {
      nativeName: "Dansk",
      englishName: "Danish"
    },
    'de': {
      nativeName: "Deutsch",
      englishName: "German"
    },
    'de-AT': {
      nativeName: "Deutsch (Austria)",
      englishName: "German (Austria)"
    },
    'de-DE': {
      nativeName: "Deutsch (German)",
      englishName: "German (German)"
    },
    'de-CH': {
      nativeName: "Deutsch (Switzerland)",
      englishName: "German (Switzerland)"
    },
    'el': {
      nativeName: "Ελληνικά",
      englishName: "Greek"
    },
    'el-GR': {
      nativeName: "Ελληνικά",
      englishName: "Greek (Greece)"
    },
    'en': {
      nativeName: "English",
      englishName: "English"
    },
    'en-GB': {
      nativeName: "English (UK)",
      englishName: "English (UK)"
    },
    'en-CA': {
      nativeName: "English (Canada)",
      englishName: "English (Canada)"
    },
    'en-IN': {
      nativeName: "English (India)",
      englishName: "English (India)"
    },
    'en-PI': {
      nativeName: "English (Pirate)",
      englishName: "English (Pirate)"
    },
    'en-UD': {
      nativeName: "English (Upside Down)",
      englishName: "English (Upside Down)"
    },
    'en-US': {
      nativeName: "English (US)",
      englishName: "English (US)"
    },
    'en@pirate': {
      nativeName: "English (Pirate)",
      englishName: "English (Pirate)"
    },
    'eo': {
      nativeName: "Esperanto",
      englishName: "Esperanto"
    },
    'eo-EO': {
      nativeName: "Esperanto",
      englishName: "Esperanto"
    },
    'es': {
      nativeName: "Español",
      englishName: "Spanish"
    },
    'es-AR': {
      nativeName: "Español (Argentine)",
      englishName: "Spanish (Argentina)"
    },
    'es-419': {
      nativeName: "Español (Latino America)",
      englishName: "Spanish (Latin America)"
    },
    'es-CL': {
      nativeName: "Español (Chile)",
      englishName: "Spanish (Chile)"
    },
    'es-CO': {
      nativeName: "Español (Colombia)",
      englishName: "Spanish (Colombia)"
    },
    'es-EC': {
      nativeName: "Español (Ecuador)",
      englishName: "Spanish (Ecuador)"
    },
    'es-ES': {
      nativeName: "Español (España)",
      englishName: "Spanish (Spain)"
    },
    'es-LA': {
      nativeName: "Español",
      englishName: "Spanish (Latin)"
    },
    'es-NI': {
      nativeName: "Español Nicaragüense",
      englishName: "Spanish (Nicaragua)"
    },
    'es-MX': {
      nativeName: "Español (México)",
      englishName: "Spanish (Mexico)"
    },
    'es-VE': {
      nativeName: "Español (Venezuela)",
      englishName: "Spanish (Venezuela)"
    },
    'et': {
      nativeName: "eesti keel",
      englishName: "Estonian"
    },
    'et-EE': {
      nativeName: "Eesti (Estonia)",
      englishName: "Estonian (Estonia)"
    },
    'eu': {
      nativeName: "Euskara",
      englishName: "Basque"
    },
    'eu-ES': {
      nativeName: "Euskara",
      englishName: "Basque"
    },
    'fa': {
      nativeName: "فارسی",
      englishName: "Persian"
    },
    'fa-IR': {
      nativeName: "فارسی",
      englishName: "Persian"
    },
    'fb-LT': {
      nativeName: "Leet Speak",
      englishName: "Leet"
    },
    'ff': {
      nativeName: "Fulah",
      englishName: "Fulah"
    },
    'fi': {
      nativeName: "Suomi",
      englishName: "Finnish"
    },
    'fi-FI': {
      nativeName: "Suomi",
      englishName: "Finnish"
    },
    'fo-FO': {
      nativeName: "Føroyskt",
      englishName: "Faroese"
    },
    'fr': {
      nativeName: "Français",
      englishName: "French"
    },
    'fr-CA': {
      nativeName: "Français (Canada)",
      englishName: "French (Canada)"
    },
    'fr-FR': {
      nativeName: "Français (France)",
      englishName: "French (France)"
    },
    'fy-NL': {
      nativeName: "Frysk",
      englishName: "Frisian (West)"
    },
    'ga': {
      nativeName: "Gaeilge",
      englishName: "Irish"
    },
    'ga-IE': {
      nativeName: "Gaeilge (Gaelic)",
      englishName: "Irish (Gaelic)"
    },
    'gl': {
      nativeName: "Galego",
      englishName: "Galician"
    },
    'gl-ES': {
      nativeName: "Galego",
      englishName: "Galician"
    },
    'gn-PY': {
      nativeName: "Avañe'ẽ",
      englishName: "Guarani"
    },
    'gu-IN': {
      nativeName: "ગુજરાતી",
      englishName: "Gujarati"
    },
    'gx-GR': {
      nativeName: "Ἑλληνική ἀρχαία",
      englishName: "Classical Greek"
    },
    'he': {
      nativeName: "עברית‏",
      englishName: "Hebrew"
    },
    'he-IL': {
      nativeName: "עברית‏",
      englishName: "Hebrew"
    },
    'hi': {
      nativeName: "हिन्दी",
      englishName: "Hindi"
    },
    'hi-IN': {
      nativeName: "हिन्दी",
      englishName: "Hindi"
    },
    'hr-HR': {
      nativeName: "Hrvatski",
      englishName: "Croatian"
    },
    'hu': {
      nativeName: "Magyar",
      englishName: "Hungarian"
    },
    'hu-HU': {
      nativeName: "Magyar",
      englishName: "Hungarian"
    },
    'hy-AM': {
      nativeName: "Հայերեն",
      englishName: "Armenian"
    },
    'id': {
      nativeName: "Bahasa Indonesia",
      englishName: "Indonesian"
    },
    'id-ID': {
      nativeName: "Bahasa Indonesia",
      englishName: "Indonesian"
    },
    'is': {
      nativeName: "Íslenska",
      englishName: "Icelandic"
    },
    'is-IS': {
      nativeName: "Íslenska (Iceland)",
      englishName: "Icelandic (Iceland)"
    },
    'it': {
      nativeName: "Italiano",
      englishName: "Italian"
    },
    'it-IT': {
      nativeName: "Italiano",
      englishName: "Italian"
    },
    'ja': {
      nativeName: "日本語",
      englishName: "Japanese"
    },
    'ja-JP': {
      nativeName: "日本語",
      englishName: "Japanese"
    },
    'jv-ID': {
      nativeName: "Basa Jawa",
      englishName: "Javanese"
    },
    'ka-GE': {
      nativeName: "ქართული",
      englishName: "Georgian"
    },
    'kk-KZ': {
      nativeName: "Қазақша",
      englishName: "Kazakh"
    },
    'km': {
      nativeName: "ភាសាខ្មែរ",
      englishName: "Khmer"
    },
    'km-KH': {
      nativeName: "ភាសាខ្មែរ",
      englishName: "Khmer"
    },
    'kn': {
      nativeLanguage: "ಕನ್ನಡ",
      englishName: "Kannada"
    },
    'kn-IN': {
      nativeName: "ಕನ್ನಡ (India)",
      englishName: "Kannada (India)"
    },
    'ko': {
      nativeName: "한국어",
      englishName: "Korean"
    },
    'ko-KR': {
      nativeName: "한국어 (韩国)",
      englishName: "Korean (Korea)"
    },
    'ku-TR': {
      nativeName: "Kurdî",
      englishName: "Kurdish"
    },
    'la': {
      nativeName: "Latin",
      englishName: "Latin"
    },
    'la-VA': {
      nativeName: "Latin",
      englishName: "Latin"
    },
    'li-NL': {
      nativeName: "Lèmbörgs",
      englishName: "Limburgish"
    },
    'lt-LT': {
      nativeName: "Lietuvių",
      englishName: "Lithuanian"
    },
    'lv-LV': {
      nativeName: "Latviešu",
      englishName: "Latvian"
    },
    'mai': {
      nativeName: "मैथिली, মৈথিলী",
      englishName: "Maithili"
    },
    'mg-MG': {
      nativeName: "Malagasy",
      englishName: "Malagasy"
    },
    'mk': {
      nativeName: "Македонски",
      englishName: "Macedonian"
    },
    'mk-MK': {
      nativeName: "Македонски (Македонски)",
      englishName: "Macedonian (Macedonian)"
    },
    'ml': {
      nativeName: "മലയാളം",
      englishName: "Malayalam"
    },
    'ml-IN': {
      nativeName: "മലയാളം",
      englishName: "Malayalam"
    },
    'mn-MN': {
      nativeName: "Монгол",
      englishName: "Mongolian"
    },
    'mr': {
      nativeName: "मराठी",
      englishName: "Marathi"
    },
    'mr-IN': {
      nativeName: "मराठी",
      englishName: "Marathi"
    },
    'ms': {
      nativeName: "Bahasa Melayu",
      englishName: "Malay"
    },
    'ms-MY': {
      nativeName: "Bahasa Melayu",
      englishName: "Malay"
    },
    'mt-MT': {
      nativeName: "Malti",
      englishName: "Maltese"
    },
    'my': {
      nativeName: "ဗမာစကာ",
      englishName: "Burmese"
    },
    'nb': {
      nativeName: "Norsk (bokmål)",
      englishName: "Norwegian (bokmal)"
    },
    'nb-NO': {
      nativeName: "Norsk (bokmål)",
      englishName: "Norwegian (bokmal)"
    },
    'ne': {
      nativeName: "नेपाली",
      englishName: "Nepali"
    },
    'ne-NP': {
      nativeName: "नेपाली",
      englishName: "Nepali"
    },
    'nl': {
      nativeName: "Nederlands",
      englishName: "Dutch"
    },
    'nl-BE': {
      nativeName: "Nederlands (België)",
      englishName: "Dutch (België)"
    },
    'nl-NL': {
      nativeName: "Nederlands, Dutch",
      englishName: "Netherlands, Dutch"
    },
    'nn-NO': {
      nativeName: "Norsk (nynorsk)",
      englishName: "Norwegian (nynorsk)"
    },
    'oc': {
      nativeName: "Occitan",
      englishName: "Occitan"
    },
    'or-IN': {
      nativeName: "ଓଡ଼ିଆ",
      englishName: "Oriya"
    },
    'pa': {
      nativeName: "ਪੰਜਾਬੀ",
      englishName: "Punjabi"
    },
    'pa-IN': {
      nativeName: "ਪੰਜਾਬੀ (ਭਾਰਤ ਨੂੰ)",
      englishName: "Punjabi (India)"
    },
    'pl-PL': {
      nativeName: "Polski",
      englishName: "Polish"
    },
    'ps-AF': {
      nativeName: "پښتو",
      englishName: "Pashto"
    },
    'pt': {
      nativeName: "Português",
      englishName: "Portuguese"
    },
    'pt-BR': {
      nativeName: "Português (Brasil)",
      englishName: "Portuguese (Brazil)"
    },
    'pt-PT': {
      nativeName: "Português (Portugal)",
      englishName: "Portuguese (Portugal)"
    },
    'qu-PE': {
      nativeName: "Qhichwa",
      englishName: "Quechua"
    },
    'rm-CH': {
      nativeName: "Rumantsch",
      englishName: "Romansh"
    },
    'ro': {
      nativeName: "Română",
      englishName: "Romanian"
    },
    'ro-RO': {
      nativeName: "Română",
      englishName: "Romanian"
    },
    'ru': {
      nativeName: "Русский",
      englishName: "Russian"
    },
    'ru-RU': {
      nativeName: "Русский",
      englishName: "Russian"
    },
    'sa-IN': {
      nativeName: "संस्कृतम्",
      englishName: "Sanskrit"
    },
    'se-NO': {
      nativeName: "Davvisámegiella",
      englishName: "Northern Sámi"
    },
    'si-LK': {
      nativeName: "පළාත",
      englishName: "Sinhala (Sri Lanka)"
    },
    'sk': {
      nativeName: "Slovenčina",
      englishName: "Slovak"
    },
    'sk-SK': {
      nativeName: "Slovenčina (Slovakia)",
      englishName: "Slovak (Slovakia)"
    },
    'sl': {
      nativeName: "Slovenščina",
      englishName: "Slovenian"
    },
    'sl-SI': {
      nativeName: "Slovenščina",
      englishName: "Slovenian"
    },
    'so-SO': {
      nativeName: "Soomaaliga",
      englishName: "Somali"
    },
    'sq': {
      nativeName: "Shqip",
      englishName: "Albanian"
    },
    'sq-AL': {
      nativeName: "Shqip",
      englishName: "Albanian"
    },
    'sr': {
      nativeName: "Српски",
      englishName: "Serbian"
    },
    'sr-RS': {
      nativeName: "Српски (Serbia)",
      englishName: "Serbian (Serbia)"
    },
    'su': {
      nativeName: "Basa Sunda",
      englishName: "Sundanese"
    },
    'sv': {
      nativeName: "Svenska",
      englishName: "Swedish"
    },
    'sv-SE': {
      nativeName: "Svenska",
      englishName: "Swedish"
    },
    'sw': {
      nativeName: "Kiswahili",
      englishName: "Swahili"
    },
    'sw-KE': {
      nativeName: "Kiswahili",
      englishName: "Swahili (Kenya)"
    },
    'ta': {
      nativeName: "தமிழ்",
      englishName: "Tamil"
    },
    'ta-IN': {
      nativeName: "தமிழ்",
      englishName: "Tamil"
    },
    'te': {
      nativeName: "తెలుగు",
      englishName: "Telugu"
    },
    'te-IN': {
      nativeName: "తెలుగు",
      englishName: "Telugu"
    },
    'tg-TJ': {
      nativeName: "тоҷикӣ",
      englishName: "Tajik"
    },
    'th': {
      nativeName: "ภาษาไทย",
      englishName: "Thai"
    },
    'th-TH': {
      nativeName: "ภาษาไทย (ประเทศไทย)",
      englishName: "Thai (Thailand)"
    },
    'tl': {
      nativeName: "Filipino",
      englishName: "Filipino"
    },
    'tl-PH': {
      nativeName: "Filipino",
      englishName: "Filipino"
    },
    'tl-ST': {
      nativeName: "tlhIngan-Hol",
      englishName: "Klingon"
    },
    'tr-TR': {
      nativeName: "Türkçe",
      englishName: "Turkish"
    },
    'tt-RU': {
      nativeName: "татарча",
      englishName: "Tatar"
    },
    'uk': {
      nativeName: "Українська",
      englishName: "Ukrainian"
    },
    'uk-UA': {
      nativeName: "Українська",
      englishName: "Ukrainian"
    },
    'ur': {
      nativeName: "اردو",
      englishName: "Urdu"
    },
    'ur-PK': {
      nativeName: "اردو",
      englishName: "Urdu"
    },
    'uz': {
      nativeName: "O'zbek",
      englishName: "Uzbek"
    },
    'uz-UZ': {
      nativeName: "O'zbek",
      englishName: "Uzbek"
    },
    'vi-VN': {
      nativeName: "Tiếng Việt",
      englishName: "Vietnamese"
    },
    'xh-ZA': {
      nativeName: "isiXhosa",
      englishName: "Xhosa"
    },
    'yi': {
      nativeName: "ייִדיש",
      englishName: "Yiddish"
    },
    'yi-DE': {
      nativeName: "ייִדיש (German)",
      englishName: "Yiddish (German)"
    },
    'zh-CN': {
      nativeName: "中文(简体)",
      englishName: "Simplified Chinese (China)"
    },
    'zh-HK': {
      nativeName: "中文(香港)",
      englishName: "Traditional Chinese (Hong Kong)"
    },
    'zh-TW': {
      nativeName: "中文(台灣)",
      englishName: "Traditional Chinese (Taiwan)"
    },
    'zu-ZA': {
      nativeName: "isiZulu",
      englishName: "Zulu"
    }
  };
}));

},{}],103:[function(require,module,exports){
'use strict';

var asap = require('asap')

module.exports = Promise
function Promise(fn) {
  if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new')
  if (typeof fn !== 'function') throw new TypeError('not a function')
  var state = null
  var value = null
  var deferreds = []
  var self = this

  this.then = function(onFulfilled, onRejected) {
    return new Promise(function(resolve, reject) {
      handle(new Handler(onFulfilled, onRejected, resolve, reject))
    })
  }

  function handle(deferred) {
    if (state === null) {
      deferreds.push(deferred)
      return
    }
    asap(function() {
      var cb = state ? deferred.onFulfilled : deferred.onRejected
      if (cb === null) {
        (state ? deferred.resolve : deferred.reject)(value)
        return
      }
      var ret
      try {
        ret = cb(value)
      }
      catch (e) {
        deferred.reject(e)
        return
      }
      deferred.resolve(ret)
    })
  }

  function resolve(newValue) {
    try { //Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.')
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then
        if (typeof then === 'function') {
          doResolve(then.bind(newValue), resolve, reject)
          return
        }
      }
      state = true
      value = newValue
      finale()
    } catch (e) { reject(e) }
  }

  function reject(newValue) {
    state = false
    value = newValue
    finale()
  }

  function finale() {
    for (var i = 0, len = deferreds.length; i < len; i++)
      handle(deferreds[i])
    deferreds = null
  }

  doResolve(fn, resolve, reject)
}


function Handler(onFulfilled, onRejected, resolve, reject){
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null
  this.onRejected = typeof onRejected === 'function' ? onRejected : null
  this.resolve = resolve
  this.reject = reject
}

/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */
function doResolve(fn, onFulfilled, onRejected) {
  var done = false;
  try {
    fn(function (value) {
      if (done) return
      done = true
      onFulfilled(value)
    }, function (reason) {
      if (done) return
      done = true
      onRejected(reason)
    })
  } catch (ex) {
    if (done) return
    done = true
    onRejected(ex)
  }
}

},{"asap":105}],104:[function(require,module,exports){
'use strict';

//This file contains then/promise specific extensions to the core promise API

var Promise = require('./core.js')
var asap = require('asap')

module.exports = Promise

/* Static Functions */

function ValuePromise(value) {
  this.then = function (onFulfilled) {
    if (typeof onFulfilled !== 'function') return this
    return new Promise(function (resolve, reject) {
      asap(function () {
        try {
          resolve(onFulfilled(value))
        } catch (ex) {
          reject(ex);
        }
      })
    })
  }
}
ValuePromise.prototype = Object.create(Promise.prototype)

var TRUE = new ValuePromise(true)
var FALSE = new ValuePromise(false)
var NULL = new ValuePromise(null)
var UNDEFINED = new ValuePromise(undefined)
var ZERO = new ValuePromise(0)
var EMPTYSTRING = new ValuePromise('')

Promise.resolve = function (value) {
  if (value instanceof Promise) return value

  if (value === null) return NULL
  if (value === undefined) return UNDEFINED
  if (value === true) return TRUE
  if (value === false) return FALSE
  if (value === 0) return ZERO
  if (value === '') return EMPTYSTRING

  if (typeof value === 'object' || typeof value === 'function') {
    try {
      var then = value.then
      if (typeof then === 'function') {
        return new Promise(then.bind(value))
      }
    } catch (ex) {
      return new Promise(function (resolve, reject) {
        reject(ex)
      })
    }
  }

  return new ValuePromise(value)
}

Promise.from = Promise.cast = function (value) {
  var err = new Error('Promise.from and Promise.cast are deprecated, use Promise.resolve instead')
  err.name = 'Warning'
  console.warn(err.stack)
  return Promise.resolve(value)
}

Promise.denodeify = function (fn, argumentCount) {
  argumentCount = argumentCount || Infinity
  return function () {
    var self = this
    var args = Array.prototype.slice.call(arguments)
    return new Promise(function (resolve, reject) {
      while (args.length && args.length > argumentCount) {
        args.pop()
      }
      args.push(function (err, res) {
        if (err) reject(err)
        else resolve(res)
      })
      fn.apply(self, args)
    })
  }
}
Promise.nodeify = function (fn) {
  return function () {
    var args = Array.prototype.slice.call(arguments)
    var callback = typeof args[args.length - 1] === 'function' ? args.pop() : null
    try {
      return fn.apply(this, arguments).nodeify(callback)
    } catch (ex) {
      if (callback === null || typeof callback == 'undefined') {
        return new Promise(function (resolve, reject) { reject(ex) })
      } else {
        asap(function () {
          callback(ex)
        })
      }
    }
  }
}

Promise.all = function () {
  var calledWithArray = arguments.length === 1 && Array.isArray(arguments[0])
  var args = Array.prototype.slice.call(calledWithArray ? arguments[0] : arguments)

  if (!calledWithArray) {
    var err = new Error('Promise.all should be called with a single array, calling it with multiple arguments is deprecated')
    err.name = 'Warning'
    console.warn(err.stack)
  }

  return new Promise(function (resolve, reject) {
    if (args.length === 0) return resolve([])
    var remaining = args.length
    function res(i, val) {
      try {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          var then = val.then
          if (typeof then === 'function') {
            then.call(val, function (val) { res(i, val) }, reject)
            return
          }
        }
        args[i] = val
        if (--remaining === 0) {
          resolve(args);
        }
      } catch (ex) {
        reject(ex)
      }
    }
    for (var i = 0; i < args.length; i++) {
      res(i, args[i])
    }
  })
}

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) { 
    reject(value);
  });
}

Promise.race = function (values) {
  return new Promise(function (resolve, reject) { 
    values.forEach(function(value){
      Promise.resolve(value).then(resolve, reject);
    })
  });
}

/* Prototype Methods */

Promise.prototype.done = function (onFulfilled, onRejected) {
  var self = arguments.length ? this.then.apply(this, arguments) : this
  self.then(null, function (err) {
    asap(function () {
      throw err
    })
  })
}

Promise.prototype.nodeify = function (callback) {
  if (typeof callback != 'function') return this

  this.then(function (value) {
    asap(function () {
      callback(null, value)
    })
  }, function (err) {
    asap(function () {
      callback(err)
    })
  })
}

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
}

},{"./core.js":103,"asap":105}],105:[function(require,module,exports){
(function (process){

// Use the fastest possible means to execute a task in a future turn
// of the event loop.

// linked list of tasks (single, with head node)
var head = {task: void 0, next: null};
var tail = head;
var flushing = false;
var requestFlush = void 0;
var isNodeJS = false;

function flush() {
    /* jshint loopfunc: true */

    while (head.next) {
        head = head.next;
        var task = head.task;
        head.task = void 0;
        var domain = head.domain;

        if (domain) {
            head.domain = void 0;
            domain.enter();
        }

        try {
            task();

        } catch (e) {
            if (isNodeJS) {
                // In node, uncaught exceptions are considered fatal errors.
                // Re-throw them synchronously to interrupt flushing!

                // Ensure continuation if the uncaught exception is suppressed
                // listening "uncaughtException" events (as domains does).
                // Continue in next event to avoid tick recursion.
                if (domain) {
                    domain.exit();
                }
                setTimeout(flush, 0);
                if (domain) {
                    domain.enter();
                }

                throw e;

            } else {
                // In browsers, uncaught exceptions are not fatal.
                // Re-throw them asynchronously to avoid slow-downs.
                setTimeout(function() {
                   throw e;
                }, 0);
            }
        }

        if (domain) {
            domain.exit();
        }
    }

    flushing = false;
}

if (typeof process !== "undefined" && process.nextTick) {
    // Node.js before 0.9. Note that some fake-Node environments, like the
    // Mocha test runner, introduce a `process` global without a `nextTick`.
    isNodeJS = true;

    requestFlush = function () {
        process.nextTick(flush);
    };

} else if (typeof setImmediate === "function") {
    // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate
    if (typeof window !== "undefined") {
        requestFlush = setImmediate.bind(window, flush);
    } else {
        requestFlush = function () {
            setImmediate(flush);
        };
    }

} else if (typeof MessageChannel !== "undefined") {
    // modern browsers
    // http://www.nonblocking.io/2011/06/windownexttick.html
    var channel = new MessageChannel();
    channel.port1.onmessage = flush;
    requestFlush = function () {
        channel.port2.postMessage(0);
    };

} else {
    // old browsers
    requestFlush = function () {
        setTimeout(flush, 0);
    };
}

function asap(task) {
    tail = tail.next = {
        task: task,
        domain: isNodeJS && process.domain,
        next: null
    };

    if (!flushing) {
        flushing = true;
        requestFlush();
    }
};

module.exports = asap;


}).call(this,require('_process'))
},{"_process":96}],106:[function(require,module,exports){
// Some code originally from async_storage.js in
// [Gaia](https://github.com/mozilla-b2g/gaia).
(function() {
    'use strict';

    // Originally found in https://github.com/mozilla-b2g/gaia/blob/e8f624e4cc9ea945727278039b3bc9bcb9f8667a/shared/js/async_storage.js

    // Promises!
    var Promise = (typeof module !== 'undefined' && module.exports) ?
                  require('promise') : this.Promise;

    // Initialize IndexedDB; fall back to vendor-prefixed versions if needed.
    var indexedDB = indexedDB || this.indexedDB || this.webkitIndexedDB ||
                    this.mozIndexedDB || this.OIndexedDB ||
                    this.msIndexedDB;

    // If IndexedDB isn't available, we get outta here!
    if (!indexedDB) {
        return;
    }

    // Open the IndexedDB database (automatically creates one if one didn't
    // previously exist), using any options set in the config.
    function _initStorage(options) {
        var self = this;
        var dbInfo = {
            db: null
        };

        if (options) {
            for (var i in options) {
                dbInfo[i] = options[i];
            }
        }

        return new Promise(function(resolve, reject) {
            var openreq = indexedDB.open(dbInfo.name, dbInfo.version);
            openreq.onerror = function() {
                reject(openreq.error);
            };
            openreq.onupgradeneeded = function() {
                // First time setup: create an empty object store
                openreq.result.createObjectStore(dbInfo.storeName);
            };
            openreq.onsuccess = function() {
                dbInfo.db = openreq.result;
                self._dbInfo = dbInfo;
                resolve();
            };
        });
    }

    function getItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')
                              .objectStore(dbInfo.storeName);
                var req = store.get(key);

                req.onsuccess = function() {
                    var value = req.result;
                    if (value === undefined) {
                        value = null;
                    }

                    resolve(value);
                };

                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeDeferedCallback(promise, callback);
        return promise;
    }

    function setItem(key, value, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readwrite')
                              .objectStore(dbInfo.storeName);

                // The reason we don't _save_ null is because IE 10 does
                // not support saving the `null` type in IndexedDB. How
                // ironic, given the bug below!
                // See: https://github.com/mozilla/localForage/issues/161
                if (value === null) {
                    value = undefined;
                }

                var req = store.put(value, key);
                req.onsuccess = function() {
                    // Cast to undefined so the value passed to
                    // callback/promise is the same as what one would get out
                    // of `getItem()` later. This leads to some weirdness
                    // (setItem('foo', undefined) will return `null`), but
                    // it's not my fault localStorage is our baseline and that
                    // it's weird.
                    if (value === undefined) {
                        value = null;
                    }

                    resolve(value);
                };
                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeDeferedCallback(promise, callback);
        return promise;
    }

    function removeItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readwrite')
                              .objectStore(dbInfo.storeName);

                // We use a Grunt task to make this safe for IE and some
                // versions of Android (including those used by Cordova).
                // Normally IE won't like `.delete()` and will insist on
                // using `['delete']()`, but we have a build step that
                // fixes this for us now.
                var req = store.delete(key);
                req.onsuccess = function() {
                    resolve();
                };

                req.onerror = function() {
                    reject(req.error);
                };

                // The request will be aborted if we've exceeded our storage
                // space. In this case, we will reject with a specific
                // "QuotaExceededError".
                req.onabort = function(event) {
                    var error = event.target.error;
                    if (error === 'QuotaExceededError') {
                        reject(error);
                    }
                };
            }).catch(reject);
        });

        executeDeferedCallback(promise, callback);
        return promise;
    }

    function clear(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readwrite')
                              .objectStore(dbInfo.storeName);
                var req = store.clear();

                req.onsuccess = function() {
                    resolve();
                };

                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeDeferedCallback(promise, callback);
        return promise;
    }

    function length(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')
                              .objectStore(dbInfo.storeName);
                var req = store.count();

                req.onsuccess = function() {
                    resolve(req.result);
                };

                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function key(n, callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            if (n < 0) {
                resolve(null);

                return;
            }

            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')
                              .objectStore(dbInfo.storeName);

                var advanced = false;
                var req = store.openCursor();
                req.onsuccess = function() {
                    var cursor = req.result;
                    if (!cursor) {
                        // this means there weren't enough keys
                        resolve(null);

                        return;
                    }

                    if (n === 0) {
                        // We have the first key, return it if that's what they
                        // wanted.
                        resolve(cursor.key);
                    } else {
                        if (!advanced) {
                            // Otherwise, ask the cursor to skip ahead n
                            // records.
                            advanced = true;
                            cursor.advance(n);
                        } else {
                            // When we get here, we've got the nth key.
                            resolve(cursor.key);
                        }
                    }
                };

                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function keys(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')
                              .objectStore(dbInfo.storeName);

                var req = store.openCursor();
                var keys = [];

                req.onsuccess = function() {
                    var cursor = req.result;

                    if (!cursor) {
                        resolve(keys);
                        return;
                    }

                    keys.push(cursor.key);
                    cursor.continue();
                };

                req.onerror = function() {
                    reject(req.error);
                };
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function executeCallback(promise, callback) {
        if (callback) {
            promise.then(function(result) {
                callback(null, result);
            }, function(error) {
                callback(error);
            });
        }
    }

    function executeDeferedCallback(promise, callback) {
        if (callback) {
            promise.then(function(result) {
                deferCallback(callback, result);
            }, function(error) {
                callback(error);
            });
        }
    }

    // Under Chrome the callback is called before the changes (save, clear)
    // are actually made. So we use a defer function which wait that the
    // call stack to be empty.
    // For more info : https://github.com/mozilla/localForage/issues/175
    // Pull request : https://github.com/mozilla/localForage/pull/178
    function deferCallback(callback, result) {
        if (callback) {
            return setTimeout(function() {
                return callback(null, result);
            }, 0);
        }
    }

    var asyncStorage = {
        _driver: 'asyncStorage',
        _initStorage: _initStorage,
        getItem: getItem,
        setItem: setItem,
        removeItem: removeItem,
        clear: clear,
        length: length,
        key: key,
        keys: keys
    };

    if (typeof define === 'function' && define.amd) {
        define('asyncStorage', function() {
            return asyncStorage;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = asyncStorage;
    } else {
        this.asyncStorage = asyncStorage;
    }
}).call(window);

},{"promise":104}],107:[function(require,module,exports){
// If IndexedDB isn't available, we'll fall back to localStorage.
// Note that this will have considerable performance and storage
// side-effects (all data will be serialized on save and only data that
// can be converted to a string via `JSON.stringify()` will be saved).
(function() {
    'use strict';

    // Promises!
    var Promise = (typeof module !== 'undefined' && module.exports) ?
                  require('promise') : this.Promise;
    var localStorage = null;

    // If the app is running inside a Google Chrome packaged webapp, or some
    // other context where localStorage isn't available, we don't use
    // localStorage. This feature detection is preferred over the old
    // `if (window.chrome && window.chrome.runtime)` code.
    // See: https://github.com/mozilla/localForage/issues/68
    try {
        // If localStorage isn't available, we get outta here!
        // This should be inside a try catch
        if (!this.localStorage || !('setItem' in this.localStorage)) {
            return;
        }
        // Initialize localStorage and create a variable to use throughout
        // the code.
        localStorage = this.localStorage;
    } catch (e) {
        return;
    }

    // Config the localStorage backend, using options set in the config.
    function _initStorage(options) {
        var self = this;
        var dbInfo = {};
        if (options) {
            for (var i in options) {
                dbInfo[i] = options[i];
            }
        }

        dbInfo.keyPrefix = dbInfo.name + '/';

        self._dbInfo = dbInfo;
        return Promise.resolve();
    }

    var SERIALIZED_MARKER = '__lfsc__:';
    var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;

    // OMG the serializations!
    var TYPE_ARRAYBUFFER = 'arbf';
    var TYPE_BLOB = 'blob';
    var TYPE_INT8ARRAY = 'si08';
    var TYPE_UINT8ARRAY = 'ui08';
    var TYPE_UINT8CLAMPEDARRAY = 'uic8';
    var TYPE_INT16ARRAY = 'si16';
    var TYPE_INT32ARRAY = 'si32';
    var TYPE_UINT16ARRAY = 'ur16';
    var TYPE_UINT32ARRAY = 'ui32';
    var TYPE_FLOAT32ARRAY = 'fl32';
    var TYPE_FLOAT64ARRAY = 'fl64';
    var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH +
                                        TYPE_ARRAYBUFFER.length;

    // Remove all keys from the datastore, effectively destroying all data in
    // the app's key/value store!
    function clear(callback) {
        var self = this;
        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var keyPrefix = self._dbInfo.keyPrefix;

                for (var i = localStorage.length - 1; i >= 0; i--) {
                    var key = localStorage.key(i);

                    if (key.indexOf(keyPrefix) === 0) {
                        localStorage.removeItem(key);
                    }
                }

                resolve();
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Retrieve an item from the store. Unlike the original async_storage
    // library in Gaia, we don't modify return values at all. If a key's value
    // is `undefined`, we pass that value to the callback function.
    function getItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                try {
                    var dbInfo = self._dbInfo;
                    var result = localStorage.getItem(dbInfo.keyPrefix + key);

                    // If a result was found, parse it from the serialized
                    // string into a JS object. If result isn't truthy, the key
                    // is likely undefined and we'll pass it straight to the
                    // callback.
                    if (result) {
                        result = _deserialize(result);
                    }

                    resolve(result);
                } catch (e) {
                    reject(e);
                }
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Same as localStorage's key() method, except takes a callback.
    function key(n, callback) {
        var self = this;
        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var result;
                try {
                    result = localStorage.key(n);
                } catch (error) {
                    result = null;
                }

                // Remove the prefix from the key, if a key is found.
                if (result) {
                    result = result.substring(dbInfo.keyPrefix.length);
                }

                resolve(result);
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function keys(callback) {
        var self = this;
        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                var length = localStorage.length;
                var keys = [];

                for (var i = 0; i < length; i++) {
                    if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {
                        keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));
                    }
                }

                resolve(keys);
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Supply the number of keys in the datastore to the callback function.
    function length(callback) {
        var self = this;
        var promise = new Promise(function(resolve, reject) {
            self.keys().then(function(keys) {
                resolve(keys.length);
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Remove an item from the store, nice and simple.
    function removeItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                localStorage.removeItem(dbInfo.keyPrefix + key);

                resolve();
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Deserialize data we've inserted into a value column/field. We place
    // special markers into our strings to mark them as encoded; this isn't
    // as nice as a meta field, but it's the only sane thing we can do whilst
    // keeping localStorage support intact.
    //
    // Oftentimes this will just deserialize JSON content, but if we have a
    // special marker (SERIALIZED_MARKER, defined above), we will extract
    // some kind of arraybuffer/binary data/typed array out of the string.
    function _deserialize(value) {
        // If we haven't marked this string as being specially serialized (i.e.
        // something other than serialized JSON), we can just return it and be
        // done with it.
        if (value.substring(0,
            SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {
            return JSON.parse(value);
        }

        // The following code deals with deserializing some kind of Blob or
        // TypedArray. First we separate out the type of data we're dealing
        // with from the data itself.
        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);
        var type = value.substring(SERIALIZED_MARKER_LENGTH,
                                   TYPE_SERIALIZED_MARKER_LENGTH);

        // Fill the string into a ArrayBuffer.
        // 2 bytes for each char.
        var buffer = new ArrayBuffer(serializedString.length * 2);
        var bufferView = new Uint16Array(buffer);
        for (var i = serializedString.length - 1; i >= 0; i--) {
            bufferView[i] = serializedString.charCodeAt(i);
        }

        // Return the right type based on the code/type set during
        // serialization.
        switch (type) {
            case TYPE_ARRAYBUFFER:
                return buffer;
            case TYPE_BLOB:
                return new Blob([buffer]);
            case TYPE_INT8ARRAY:
                return new Int8Array(buffer);
            case TYPE_UINT8ARRAY:
                return new Uint8Array(buffer);
            case TYPE_UINT8CLAMPEDARRAY:
                return new Uint8ClampedArray(buffer);
            case TYPE_INT16ARRAY:
                return new Int16Array(buffer);
            case TYPE_UINT16ARRAY:
                return new Uint16Array(buffer);
            case TYPE_INT32ARRAY:
                return new Int32Array(buffer);
            case TYPE_UINT32ARRAY:
                return new Uint32Array(buffer);
            case TYPE_FLOAT32ARRAY:
                return new Float32Array(buffer);
            case TYPE_FLOAT64ARRAY:
                return new Float64Array(buffer);
            default:
                throw new Error('Unkown type: ' + type);
        }
    }

    // Converts a buffer to a string to store, serialized, in the backend
    // storage library.
    function _bufferToString(buffer) {
        var str = '';
        var uint16Array = new Uint16Array(buffer);

        try {
            str = String.fromCharCode.apply(null, uint16Array);
        } catch (e) {
            // This is a fallback implementation in case the first one does
            // not work. This is required to get the phantomjs passing...
            for (var i = 0; i < uint16Array.length; i++) {
                str += String.fromCharCode(uint16Array[i]);
            }
        }

        return str;
    }

    // Serialize a value, afterwards executing a callback (which usually
    // instructs the `setItem()` callback/promise to be executed). This is how
    // we store binary data with localStorage.
    function _serialize(value, callback) {
        var valueString = '';
        if (value) {
            valueString = value.toString();
        }

        // Cannot use `value instanceof ArrayBuffer` or such here, as these
        // checks fail when running the tests using casper.js...
        //
        // TODO: See why those tests fail and use a better solution.
        if (value && (value.toString() === '[object ArrayBuffer]' ||
                      value.buffer &&
                      value.buffer.toString() === '[object ArrayBuffer]')) {
            // Convert binary arrays to a string and prefix the string with
            // a special marker.
            var buffer;
            var marker = SERIALIZED_MARKER;

            if (value instanceof ArrayBuffer) {
                buffer = value;
                marker += TYPE_ARRAYBUFFER;
            } else {
                buffer = value.buffer;

                if (valueString === '[object Int8Array]') {
                    marker += TYPE_INT8ARRAY;
                } else if (valueString === '[object Uint8Array]') {
                    marker += TYPE_UINT8ARRAY;
                } else if (valueString === '[object Uint8ClampedArray]') {
                    marker += TYPE_UINT8CLAMPEDARRAY;
                } else if (valueString === '[object Int16Array]') {
                    marker += TYPE_INT16ARRAY;
                } else if (valueString === '[object Uint16Array]') {
                    marker += TYPE_UINT16ARRAY;
                } else if (valueString === '[object Int32Array]') {
                    marker += TYPE_INT32ARRAY;
                } else if (valueString === '[object Uint32Array]') {
                    marker += TYPE_UINT32ARRAY;
                } else if (valueString === '[object Float32Array]') {
                    marker += TYPE_FLOAT32ARRAY;
                } else if (valueString === '[object Float64Array]') {
                    marker += TYPE_FLOAT64ARRAY;
                } else {
                    callback(new Error('Failed to get type for BinaryArray'));
                }
            }

            callback(marker + _bufferToString(buffer));
        } else if (valueString === '[object Blob]') {
            // Conver the blob to a binaryArray and then to a string.
            var fileReader = new FileReader();

            fileReader.onload = function() {
                var str = _bufferToString(this.result);

                callback(SERIALIZED_MARKER + TYPE_BLOB + str);
            };

            fileReader.readAsArrayBuffer(value);
        } else {
            try {
                callback(JSON.stringify(value));
            } catch (e) {
                window.console.error("Couldn't convert value into a JSON " +
                                     'string: ', value);

                callback(e);
            }
        }
    }

    // Set a key's value and run an optional callback once the value is set.
    // Unlike Gaia's implementation, the callback function is passed the value,
    // in case you want to operate on that value only after you're sure it
    // saved, or something like that.
    function setItem(key, value, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                // Convert undefined values to null.
                // https://github.com/mozilla/localForage/pull/42
                if (value === undefined) {
                    value = null;
                }

                // Save the original value to pass to the callback.
                var originalValue = value;

                _serialize(value, function(value, error) {
                    if (error) {
                        reject(error);
                    } else {
                        try {
                            var dbInfo = self._dbInfo;
                            localStorage.setItem(dbInfo.keyPrefix + key, value);
                        } catch (e) {
                            // localStorage capacity exceeded.
                            // TODO: Make this a specific error/event.
                            if (e.name === 'QuotaExceededError' ||
                                e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {
                                reject(e);
                            }
                        }

                        resolve(originalValue);
                    }
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function executeCallback(promise, callback) {
        if (callback) {
            promise.then(function(result) {
                callback(null, result);
            }, function(error) {
                callback(error);
            });
        }
    }

    var localStorageWrapper = {
        _driver: 'localStorageWrapper',
        _initStorage: _initStorage,
        // Default API, from Gaia/localStorage.
        getItem: getItem,
        setItem: setItem,
        removeItem: removeItem,
        clear: clear,
        length: length,
        key: key,
        keys: keys
    };

    if (typeof define === 'function' && define.amd) {
        define('localStorageWrapper', function() {
            return localStorageWrapper;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = localStorageWrapper;
    } else {
        this.localStorageWrapper = localStorageWrapper;
    }
}).call(window);

},{"promise":104}],108:[function(require,module,exports){
/*
 * Includes code from:
 *
 * base64-arraybuffer
 * https://github.com/niklasvh/base64-arraybuffer
 *
 * Copyright (c) 2012 Niklas von Hertzen
 * Licensed under the MIT license.
 */
(function() {
    'use strict';

    // Sadly, the best way to save binary data in WebSQL is Base64 serializing
    // it, so this is how we store it to prevent very strange errors with less
    // verbose ways of binary <-> string data storage.
    var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

    // Promises!
    var Promise = (typeof module !== 'undefined' && module.exports) ?
                  require('promise') : this.Promise;

    var openDatabase = this.openDatabase;

    var SERIALIZED_MARKER = '__lfsc__:';
    var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;

    // OMG the serializations!
    var TYPE_ARRAYBUFFER = 'arbf';
    var TYPE_BLOB = 'blob';
    var TYPE_INT8ARRAY = 'si08';
    var TYPE_UINT8ARRAY = 'ui08';
    var TYPE_UINT8CLAMPEDARRAY = 'uic8';
    var TYPE_INT16ARRAY = 'si16';
    var TYPE_INT32ARRAY = 'si32';
    var TYPE_UINT16ARRAY = 'ur16';
    var TYPE_UINT32ARRAY = 'ui32';
    var TYPE_FLOAT32ARRAY = 'fl32';
    var TYPE_FLOAT64ARRAY = 'fl64';
    var TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH +
                                        TYPE_ARRAYBUFFER.length;

    // If WebSQL methods aren't available, we can stop now.
    if (!openDatabase) {
        return;
    }

    // Open the WebSQL database (automatically creates one if one didn't
    // previously exist), using any options set in the config.
    function _initStorage(options) {
        var self = this;
        var dbInfo = {
            db: null
        };

        if (options) {
            for (var i in options) {
                dbInfo[i] = typeof(options[i]) !== 'string' ?
                            options[i].toString() : options[i];
            }
        }

        return new Promise(function(resolve, reject) {
            // Open the database; the openDatabase API will automatically
            // create it for us if it doesn't exist.
            try {
                dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version),
                                         dbInfo.description, dbInfo.size);
            } catch (e) {
                return self.setDriver('localStorageWrapper')
                    .then(function() {
                        return self._initStorage(options);
                    })
                    .then(resolve)
                    .catch(reject);
            }

            // Create our key/value table if it doesn't exist.
            dbInfo.db.transaction(function(t) {
                t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName +
                             ' (id INTEGER PRIMARY KEY, key unique, value)', [],
                             function() {
                    self._dbInfo = dbInfo;
                    resolve();
                }, function(t, error) {
                    reject(error);
                });
            });
        });
    }

    function getItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    t.executeSql('SELECT * FROM ' + dbInfo.storeName +
                                 ' WHERE key = ? LIMIT 1', [key],
                                 function(t, results) {
                        var result = results.rows.length ?
                                     results.rows.item(0).value : null;

                        // Check to see if this is serialized content we need to
                        // unpack.
                        if (result) {
                            result = _deserialize(result);
                        }

                        resolve(result);
                    }, function(t, error) {

                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function setItem(key, value, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                // The localStorage API doesn't return undefined values in an
                // "expected" way, so undefined is always cast to null in all
                // drivers. See: https://github.com/mozilla/localForage/pull/42
                if (value === undefined) {
                    value = null;
                }

                // Save the original value to pass to the callback.
                var originalValue = value;

                _serialize(value, function(value, error) {
                    if (error) {
                        reject(error);
                    } else {
                        var dbInfo = self._dbInfo;
                        dbInfo.db.transaction(function(t) {
                            t.executeSql('INSERT OR REPLACE INTO ' +
                                         dbInfo.storeName +
                                         ' (key, value) VALUES (?, ?)',
                                         [key, value], function() {
                                resolve(originalValue);
                            }, function(t, error) {
                                reject(error);
                            });
                        }, function(sqlError) { // The transaction failed; check
                                                // to see if it's a quota error.
                            if (sqlError.code === sqlError.QUOTA_ERR) {
                                // We reject the callback outright for now, but
                                // it's worth trying to re-run the transaction.
                                // Even if the user accepts the prompt to use
                                // more storage on Safari, this error will
                                // be called.
                                //
                                // TODO: Try to re-run the transaction.
                                reject(sqlError);
                            }
                        });
                    }
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function removeItem(key, callback) {
        var self = this;

        // Cast the key to a string, as that's all we can set as a key.
        if (typeof key !== 'string') {
            window.console.warn(key +
                                ' used as a key, but it is not a string.');
            key = String(key);
        }

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    t.executeSql('DELETE FROM ' + dbInfo.storeName +
                                 ' WHERE key = ?', [key], function() {

                        resolve();
                    }, function(t, error) {

                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Deletes every item in the table.
    // TODO: Find out if this resets the AUTO_INCREMENT number.
    function clear(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    t.executeSql('DELETE FROM ' + dbInfo.storeName, [],
                                 function() {
                        resolve();
                    }, function(t, error) {
                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Does a simple `COUNT(key)` to get the number of items stored in
    // localForage.
    function length(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    // Ahhh, SQL makes this one soooooo easy.
                    t.executeSql('SELECT COUNT(key) as c FROM ' +
                                 dbInfo.storeName, [], function(t, results) {
                        var result = results.rows.item(0).c;

                        resolve(result);
                    }, function(t, error) {

                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Return the key located at key index X; essentially gets the key from a
    // `WHERE id = ?`. This is the most efficient way I can think to implement
    // this rarely-used (in my experience) part of the API, but it can seem
    // inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so
    // the ID of each key will change every time it's updated. Perhaps a stored
    // procedure for the `setItem()` SQL would solve this problem?
    // TODO: Don't change ID on `setItem()`.
    function key(n, callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    t.executeSql('SELECT key FROM ' + dbInfo.storeName +
                                 ' WHERE id = ? LIMIT 1', [n + 1],
                                 function(t, results) {
                        var result = results.rows.length ?
                                     results.rows.item(0).key : null;
                        resolve(result);
                    }, function(t, error) {
                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    function keys(callback) {
        var self = this;

        var promise = new Promise(function(resolve, reject) {
            self.ready().then(function() {
                var dbInfo = self._dbInfo;
                dbInfo.db.transaction(function(t) {
                    t.executeSql('SELECT key FROM ' + dbInfo.storeName, [],
                                 function(t, results) {
                        var keys = [];

                        for (var i = 0; i < results.rows.length; i++) {
                            keys.push(results.rows.item(i).key);
                        }

                        resolve(keys);
                    }, function(t, error) {

                        reject(error);
                    });
                });
            }).catch(reject);
        });

        executeCallback(promise, callback);
        return promise;
    }

    // Converts a buffer to a string to store, serialized, in the backend
    // storage library.
    function _bufferToString(buffer) {
        // base64-arraybuffer
        var bytes = new Uint8Array(buffer);
        var i;
        var base64String = '';

        for (i = 0; i < bytes.length; i += 3) {
            /*jslint bitwise: true */
            base64String += BASE_CHARS[bytes[i] >> 2];
            base64String += BASE_CHARS[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
            base64String += BASE_CHARS[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
            base64String += BASE_CHARS[bytes[i + 2] & 63];
        }

        if ((bytes.length % 3) === 2) {
            base64String = base64String.substring(0, base64String.length - 1) + '=';
        } else if (bytes.length % 3 === 1) {
            base64String = base64String.substring(0, base64String.length - 2) + '==';
        }

        return base64String;
    }

    // Deserialize data we've inserted into a value column/field. We place
    // special markers into our strings to mark them as encoded; this isn't
    // as nice as a meta field, but it's the only sane thing we can do whilst
    // keeping localStorage support intact.
    //
    // Oftentimes this will just deserialize JSON content, but if we have a
    // special marker (SERIALIZED_MARKER, defined above), we will extract
    // some kind of arraybuffer/binary data/typed array out of the string.
    function _deserialize(value) {
        // If we haven't marked this string as being specially serialized (i.e.
        // something other than serialized JSON), we can just return it and be
        // done with it.
        if (value.substring(0,
                            SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {
            return JSON.parse(value);
        }

        // The following code deals with deserializing some kind of Blob or
        // TypedArray. First we separate out the type of data we're dealing
        // with from the data itself.
        var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);
        var type = value.substring(SERIALIZED_MARKER_LENGTH,
                                   TYPE_SERIALIZED_MARKER_LENGTH);

        // Fill the string into a ArrayBuffer.
        var bufferLength = serializedString.length * 0.75;
        var len = serializedString.length;
        var i;
        var p = 0;
        var encoded1, encoded2, encoded3, encoded4;

        if (serializedString[serializedString.length - 1] === '=') {
            bufferLength--;
            if (serializedString[serializedString.length - 2] === '=') {
                bufferLength--;
            }
        }

        var buffer = new ArrayBuffer(bufferLength);
        var bytes = new Uint8Array(buffer);

        for (i = 0; i < len; i+=4) {
            encoded1 = BASE_CHARS.indexOf(serializedString[i]);
            encoded2 = BASE_CHARS.indexOf(serializedString[i+1]);
            encoded3 = BASE_CHARS.indexOf(serializedString[i+2]);
            encoded4 = BASE_CHARS.indexOf(serializedString[i+3]);

            /*jslint bitwise: true */
            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
        }

        // Return the right type based on the code/type set during
        // serialization.
        switch (type) {
            case TYPE_ARRAYBUFFER:
                return buffer;
            case TYPE_BLOB:
                return new Blob([buffer]);
            case TYPE_INT8ARRAY:
                return new Int8Array(buffer);
            case TYPE_UINT8ARRAY:
                return new Uint8Array(buffer);
            case TYPE_UINT8CLAMPEDARRAY:
                return new Uint8ClampedArray(buffer);
            case TYPE_INT16ARRAY:
                return new Int16Array(buffer);
            case TYPE_UINT16ARRAY:
                return new Uint16Array(buffer);
            case TYPE_INT32ARRAY:
                return new Int32Array(buffer);
            case TYPE_UINT32ARRAY:
                return new Uint32Array(buffer);
            case TYPE_FLOAT32ARRAY:
                return new Float32Array(buffer);
            case TYPE_FLOAT64ARRAY:
                return new Float64Array(buffer);
            default:
                throw new Error('Unkown type: ' + type);
        }
    }

    // Serialize a value, afterwards executing a callback (which usually
    // instructs the `setItem()` callback/promise to be executed). This is how
    // we store binary data with localStorage.
    function _serialize(value, callback) {
        var valueString = '';
        if (value) {
            valueString = value.toString();
        }

        // Cannot use `value instanceof ArrayBuffer` or such here, as these
        // checks fail when running the tests using casper.js...
        //
        // TODO: See why those tests fail and use a better solution.
        if (value && (value.toString() === '[object ArrayBuffer]' ||
                      value.buffer &&
                      value.buffer.toString() === '[object ArrayBuffer]')) {
            // Convert binary arrays to a string and prefix the string with
            // a special marker.
            var buffer;
            var marker = SERIALIZED_MARKER;

            if (value instanceof ArrayBuffer) {
                buffer = value;
                marker += TYPE_ARRAYBUFFER;
            } else {
                buffer = value.buffer;

                if (valueString === '[object Int8Array]') {
                    marker += TYPE_INT8ARRAY;
                } else if (valueString === '[object Uint8Array]') {
                    marker += TYPE_UINT8ARRAY;
                } else if (valueString === '[object Uint8ClampedArray]') {
                    marker += TYPE_UINT8CLAMPEDARRAY;
                } else if (valueString === '[object Int16Array]') {
                    marker += TYPE_INT16ARRAY;
                } else if (valueString === '[object Uint16Array]') {
                    marker += TYPE_UINT16ARRAY;
                } else if (valueString === '[object Int32Array]') {
                    marker += TYPE_INT32ARRAY;
                } else if (valueString === '[object Uint32Array]') {
                    marker += TYPE_UINT32ARRAY;
                } else if (valueString === '[object Float32Array]') {
                    marker += TYPE_FLOAT32ARRAY;
                } else if (valueString === '[object Float64Array]') {
                    marker += TYPE_FLOAT64ARRAY;
                } else {
                    callback(new Error('Failed to get type for BinaryArray'));
                }
            }

            callback(marker + _bufferToString(buffer));
        } else if (valueString === '[object Blob]') {
            // Conver the blob to a binaryArray and then to a string.
            var fileReader = new FileReader();

            fileReader.onload = function() {
                var str = _bufferToString(this.result);

                callback(SERIALIZED_MARKER + TYPE_BLOB + str);
            };

            fileReader.readAsArrayBuffer(value);
        } else {
            try {
                callback(JSON.stringify(value));
            } catch (e) {
                window.console.error("Couldn't convert value into a JSON " +
                                     'string: ', value);

                callback(null, e);
            }
        }
    }

    function executeCallback(promise, callback) {
        if (callback) {
            promise.then(function(result) {
                callback(null, result);
            }, function(error) {
                callback(error);
            });
        }
    }

    var webSQLStorage = {
        _driver: 'webSQLStorage',
        _initStorage: _initStorage,
        getItem: getItem,
        setItem: setItem,
        removeItem: removeItem,
        clear: clear,
        length: length,
        key: key,
        keys: keys
    };

    if (typeof define === 'function' && define.amd) {
        define('webSQLStorage', function() {
            return webSQLStorage;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = webSQLStorage;
    } else {
        this.webSQLStorage = webSQLStorage;
    }
}).call(window);

},{"promise":104}],109:[function(require,module,exports){
(function() {
    'use strict';

    // Promises!
    var Promise = (typeof module !== 'undefined' && module.exports) ?
                  require('promise') : this.Promise;

    // Custom drivers are stored here when `defineDriver()` is called.
    // They are shared across all instances of localForage.
    var CustomDrivers = {};

    var DriverType = {
        INDEXEDDB: 'asyncStorage',
        LOCALSTORAGE: 'localStorageWrapper',
        WEBSQL: 'webSQLStorage'
    };

    var DefaultDriverOrder = [
        DriverType.INDEXEDDB,
        DriverType.WEBSQL,
        DriverType.LOCALSTORAGE
    ];

    var LibraryMethods = [
        'clear',
        'getItem',
        'key',
        'keys',
        'length',
        'removeItem',
        'setItem'
    ];

    var ModuleType = {
        DEFINE: 1,
        EXPORT: 2,
        WINDOW: 3
    };

    var DefaultConfig = {
        description: '',
        driver: DefaultDriverOrder.slice(),
        name: 'localforage',
        // Default DB size is _JUST UNDER_ 5MB, as it's the highest size
        // we can use without a prompt.
        size: 4980736,
        storeName: 'keyvaluepairs',
        version: 1.0
    };

    // Attaching to window (i.e. no module loader) is the assumed,
    // simple default.
    var moduleType = ModuleType.WINDOW;

    // Find out what kind of module setup we have; if none, we'll just attach
    // localForage to the main window.
    if (typeof define === 'function' && define.amd) {
        moduleType = ModuleType.DEFINE;
    } else if (typeof module !== 'undefined' && module.exports) {
        moduleType = ModuleType.EXPORT;
    }

    // Check to see if IndexedDB is available and if it is the latest
    // implementation; it's our preferred backend library. We use "_spec_test"
    // as the name of the database because it's not the one we'll operate on,
    // but it's useful to make sure its using the right spec.
    // See: https://github.com/mozilla/localForage/issues/128
    var driverSupport = (function(self) {
        // Initialize IndexedDB; fall back to vendor-prefixed versions
        // if needed.
        var indexedDB = indexedDB || self.indexedDB || self.webkitIndexedDB ||
                        self.mozIndexedDB || self.OIndexedDB ||
                        self.msIndexedDB;

        var result = {};

        result[DriverType.WEBSQL] = !!self.openDatabase;
        result[DriverType.INDEXEDDB] = !!(function() {
            // We mimic PouchDB here; just UA test for Safari (which, as of
            // iOS 8/Yosemite, doesn't properly support IndexedDB).
            // IndexedDB support is broken and different from Blink's.
            // This is faster than the test case (and it's sync), so we just
            // do this. *SIGH*
            // http://bl.ocks.org/nolanlawson/raw/c83e9039edf2278047e9/
            //
            // We test for openDatabase because IE Mobile identifies itself
            // as Safari. Oh the lulz...
            if (typeof self.openDatabase !== 'undefined' && self.navigator &&
                self.navigator.userAgent &&
                /Safari/.test(self.navigator.userAgent) &&
                !/Chrome/.test(self.navigator.userAgent)) {
                return false;
            }
            try {
                return indexedDB &&
                       typeof indexedDB.open === 'function' &&
                       // Some Samsung/HTC Android 4.0-4.3 devices
                       // have older IndexedDB specs; if this isn't available
                       // their IndexedDB is too old for us to use.
                       // (Replaces the onupgradeneeded test.)
                       typeof self.IDBKeyRange !== 'undefined';
            } catch (e) {
                return false;
            }
        })();

        result[DriverType.LOCALSTORAGE] = !!(function() {
            try {
                return (self.localStorage &&
                        ('setItem' in self.localStorage) &&
                        (self.localStorage.setItem));
            } catch (e) {
                return false;
            }
        })();

        return result;
    })(this);

    var isArray = Array.isArray || function(arg) {
        return Object.prototype.toString.call(arg) === '[object Array]';
    };

    function callWhenReady(localForageInstance, libraryMethod) {
        localForageInstance[libraryMethod] = function() {
            var _args = arguments;
            return localForageInstance.ready().then(function() {
                return localForageInstance[libraryMethod].apply(localForageInstance, _args);
            });
        };
    }

    function extend() {
        for (var i = 1; i < arguments.length; i++) {
            var arg = arguments[i];

            if (arg) {
                for (var key in arg) {
                    if (arg.hasOwnProperty(key)) {
                        if (isArray(arg[key])) {
                            arguments[0][key] = arg[key].slice();
                        } else {
                            arguments[0][key] = arg[key];
                        }
                    }
                }
            }
        }

        return arguments[0];
    }

    function isLibraryDriver(driverName) {
        for (var driver in DriverType) {
            if (DriverType.hasOwnProperty(driver) &&
                DriverType[driver] === driverName) {
                return true;
            }
        }

        return false;
    }

    var globalObject = this;

    function LocalForage(options) {
        this._config = extend({}, DefaultConfig, options);
        this._driverSet = null;
        this._ready = false;
        this._dbInfo = null;

        // Add a stub for each driver API method that delays the call to the
        // corresponding driver method until localForage is ready. These stubs
        // will be replaced by the driver methods as soon as the driver is
        // loaded, so there is no performance impact.
        for (var i = 0; i < LibraryMethods.length; i++) {
            callWhenReady(this, LibraryMethods[i]);
        }

        this.setDriver(this._config.driver);
    }

    LocalForage.prototype.INDEXEDDB = DriverType.INDEXEDDB;
    LocalForage.prototype.LOCALSTORAGE = DriverType.LOCALSTORAGE;
    LocalForage.prototype.WEBSQL = DriverType.WEBSQL;

    // Set any config values for localForage; can be called anytime before
    // the first API call (e.g. `getItem`, `setItem`).
    // We loop through options so we don't overwrite existing config
    // values.
    LocalForage.prototype.config = function(options) {
        // If the options argument is an object, we use it to set values.
        // Otherwise, we return either a specified config value or all
        // config values.
        if (typeof(options) === 'object') {
            // If localforage is ready and fully initialized, we can't set
            // any new configuration values. Instead, we return an error.
            if (this._ready) {
                return new Error("Can't call config() after localforage " +
                                 'has been used.');
            }

            for (var i in options) {
                if (i === 'storeName') {
                    options[i] = options[i].replace(/\W/g, '_');
                }

                this._config[i] = options[i];
            }

            // after all config options are set and
            // the driver option is used, try setting it
            if ('driver' in options && options.driver) {
                this.setDriver(this._config.driver);
            }

            return true;
        } else if (typeof(options) === 'string') {
            return this._config[options];
        } else {
            return this._config;
        }
    };

    // Used to define a custom driver, shared across all instances of
    // localForage.
    LocalForage.prototype.defineDriver = function(driverObject, callback,
                                                  errorCallback) {
        var defineDriver = new Promise(function(resolve, reject) {
            try {
                var driverName = driverObject._driver;
                var complianceError = new Error(
                    'Custom driver not compliant; see ' +
                    'https://mozilla.github.io/localForage/#definedriver'
                );
                var namingError = new Error(
                    'Custom driver name already in use: ' + driverObject._driver
                );

                // A driver name should be defined and not overlap with the
                // library-defined, default drivers.
                if (!driverObject._driver) {
                    reject(complianceError);
                    return;
                }
                if (isLibraryDriver(driverObject._driver)) {
                    reject(namingError);
                    return;
                }

                var customDriverMethods = LibraryMethods.concat('_initStorage');
                for (var i = 0; i < customDriverMethods.length; i++) {
                    var customDriverMethod = customDriverMethods[i];
                    if (!customDriverMethod ||
                        !driverObject[customDriverMethod] ||
                        typeof driverObject[customDriverMethod] !== 'function') {
                        reject(complianceError);
                        return;
                    }
                }

                var supportPromise = Promise.resolve(true);
                if ('_support'  in driverObject) {
                    if (driverObject._support && typeof driverObject._support === 'function') {
                        supportPromise = driverObject._support();
                    } else {
                        supportPromise = Promise.resolve(!!driverObject._support);
                    }
                }

                supportPromise.then(function(supportResult) {
                    driverSupport[driverName] = supportResult;
                    CustomDrivers[driverName] = driverObject;
                    resolve();
                }, reject);
            } catch (e) {
                reject(e);
            }
        });

        defineDriver.then(callback, errorCallback);
        return defineDriver;
    };

    LocalForage.prototype.driver = function() {
        return this._driver || null;
    };

    LocalForage.prototype.ready = function(callback) {
        var self = this;

        var ready = new Promise(function(resolve, reject) {
            self._driverSet.then(function() {
                if (self._ready === null) {
                    self._ready = self._initStorage(self._config);
                }

                self._ready.then(resolve, reject);
            }).catch(reject);
        });

        ready.then(callback, callback);
        return ready;
    };

    LocalForage.prototype.setDriver = function(drivers, callback,
                                               errorCallback) {
        var self = this;

        if (typeof drivers === 'string') {
            drivers = [drivers];
        }

        this._driverSet = new Promise(function(resolve, reject) {
            var driverName = self._getFirstSupportedDriver(drivers);
            var error = new Error('No available storage method found.');

            if (!driverName) {
                self._driverSet = Promise.reject(error);
                reject(error);
                return;
            }

            self._dbInfo = null;
            self._ready = null;

            if (isLibraryDriver(driverName)) {
                // We allow localForage to be declared as a module or as a
                // library available without AMD/require.js.
                if (moduleType === ModuleType.DEFINE) {
                    require([driverName], function(lib) {
                        self._extend(lib);

                        resolve();
                    });

                    return;
                } else if (moduleType === ModuleType.EXPORT) {
                    // Making it browserify friendly
                    var driver;
                    switch (driverName) {
                        case self.INDEXEDDB:
                            driver = require('./drivers/indexeddb');
                            break;
                        case self.LOCALSTORAGE:
                            driver = require('./drivers/localstorage');
                            break;
                        case self.WEBSQL:
                            driver = require('./drivers/websql');
                    }

                    self._extend(driver);
                } else {
                    self._extend(globalObject[driverName]);
                }
            } else if (CustomDrivers[driverName]) {
                self._extend(CustomDrivers[driverName]);
            } else {
                self._driverSet = Promise.reject(error);
                reject(error);
                return;
            }

            resolve();
        });

        function setDriverToConfig() {
            self._config.driver = self.driver();
        }
        this._driverSet.then(setDriverToConfig, setDriverToConfig);

        this._driverSet.then(callback, errorCallback);
        return this._driverSet;
    };

    LocalForage.prototype.supports = function(driverName) {
        return !!driverSupport[driverName];
    };

    LocalForage.prototype._extend = function(libraryMethodsAndProperties) {
        extend(this, libraryMethodsAndProperties);
    };

    // Used to determine which driver we should use as the backend for this
    // instance of localForage.
    LocalForage.prototype._getFirstSupportedDriver = function(drivers) {
        if (drivers && isArray(drivers)) {
            for (var i = 0; i < drivers.length; i++) {
                var driver = drivers[i];

                if (this.supports(driver)) {
                    return driver;
                }
            }
        }

        return null;
    };

    LocalForage.prototype.createInstance = function(options) {
        return new LocalForage(options);
    };

    // The actual localForage object that we expose as a module or via a
    // global. It's extended by pulling in one of our other libraries.
    var localForage = new LocalForage();

    // We allow localForage to be declared as a module or as a library
    // available without AMD/require.js.
    if (moduleType === ModuleType.DEFINE) {
        define('localforage', function() {
            return localForage;
        });
    } else if (moduleType === ModuleType.EXPORT) {
        module.exports = localForage;
    } else {
        this.localforage = localForage;
    }
}).call(window);

},{"./drivers/indexeddb":106,"./drivers/localstorage":107,"./drivers/websql":108,"promise":104}],110:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
var debounce = require('lodash.debounce'),
    isFunction = require('lodash.isfunction'),
    isObject = require('lodash.isobject');

/** Used as an internal `_.debounce` options object */
var debounceOptions = {
  'leading': false,
  'maxWait': 0,
  'trailing': false
};

/**
 * Creates a function that, when executed, will only call the `func` function
 * at most once per every `wait` milliseconds. Provide an options object to
 * indicate that `func` should be invoked on the leading and/or trailing edge
 * of the `wait` timeout. Subsequent calls to the throttled function will
 * return the result of the last `func` call.
 *
 * Note: If `leading` and `trailing` options are `true` `func` will be called
 * on the trailing edge of the timeout only if the the throttled function is
 * invoked more than once during the `wait` timeout.
 *
 * @static
 * @memberOf _
 * @category Functions
 * @param {Function} func The function to throttle.
 * @param {number} wait The number of milliseconds to throttle executions to.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // avoid excessively updating the position while scrolling
 * var throttled = _.throttle(updatePosition, 100);
 * jQuery(window).on('scroll', throttled);
 *
 * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
 * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
 *   'trailing': false
 * }));
 */
function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (!isFunction(func)) {
    throw new TypeError;
  }
  if (options === false) {
    leading = false;
  } else if (isObject(options)) {
    leading = 'leading' in options ? options.leading : leading;
    trailing = 'trailing' in options ? options.trailing : trailing;
  }
  debounceOptions.leading = leading;
  debounceOptions.maxWait = wait;
  debounceOptions.trailing = trailing;

  return debounce(func, wait, debounceOptions);
}

module.exports = throttle;

},{"lodash.debounce":111,"lodash.isfunction":114,"lodash.isobject":115}],111:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
var isFunction = require('lodash.isfunction'),
    isObject = require('lodash.isobject'),
    now = require('lodash.now');

/* Native method shortcuts for methods with the same name as other `lodash` methods */
var nativeMax = Math.max;

/**
 * Creates a function that will delay the execution of `func` until after
 * `wait` milliseconds have elapsed since the last time it was invoked.
 * Provide an options object to indicate that `func` should be invoked on
 * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
 * to the debounced function will return the result of the last `func` call.
 *
 * Note: If `leading` and `trailing` options are `true` `func` will be called
 * on the trailing edge of the timeout only if the the debounced function is
 * invoked more than once during the `wait` timeout.
 *
 * @static
 * @memberOf _
 * @category Functions
 * @param {Function} func The function to debounce.
 * @param {number} wait The number of milliseconds to delay.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
 * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
 * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // avoid costly calculations while the window size is in flux
 * var lazyLayout = _.debounce(calculateLayout, 150);
 * jQuery(window).on('resize', lazyLayout);
 *
 * // execute `sendMail` when the click event is fired, debouncing subsequent calls
 * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * });
 *
 * // ensure `batchLog` is executed once after 1 second of debounced calls
 * var source = new EventSource('/stream');
 * source.addEventListener('message', _.debounce(batchLog, 250, {
 *   'maxWait': 1000
 * }, false);
 */
function debounce(func, wait, options) {
  var args,
      maxTimeoutId,
      result,
      stamp,
      thisArg,
      timeoutId,
      trailingCall,
      lastCalled = 0,
      maxWait = false,
      trailing = true;

  if (!isFunction(func)) {
    throw new TypeError;
  }
  wait = nativeMax(0, wait) || 0;
  if (options === true) {
    var leading = true;
    trailing = false;
  } else if (isObject(options)) {
    leading = options.leading;
    maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
    trailing = 'trailing' in options ? options.trailing : trailing;
  }
  var delayed = function() {
    var remaining = wait - (now() - stamp);
    if (remaining <= 0) {
      if (maxTimeoutId) {
        clearTimeout(maxTimeoutId);
      }
      var isCalled = trailingCall;
      maxTimeoutId = timeoutId = trailingCall = undefined;
      if (isCalled) {
        lastCalled = now();
        result = func.apply(thisArg, args);
        if (!timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
      }
    } else {
      timeoutId = setTimeout(delayed, remaining);
    }
  };

  var maxDelayed = function() {
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    maxTimeoutId = timeoutId = trailingCall = undefined;
    if (trailing || (maxWait !== wait)) {
      lastCalled = now();
      result = func.apply(thisArg, args);
      if (!timeoutId && !maxTimeoutId) {
        args = thisArg = null;
      }
    }
  };

  return function() {
    args = arguments;
    stamp = now();
    thisArg = this;
    trailingCall = trailing && (timeoutId || !leading);

    if (maxWait === false) {
      var leadingCall = leading && !timeoutId;
    } else {
      if (!maxTimeoutId && !leading) {
        lastCalled = stamp;
      }
      var remaining = maxWait - (stamp - lastCalled),
          isCalled = remaining <= 0;

      if (isCalled) {
        if (maxTimeoutId) {
          maxTimeoutId = clearTimeout(maxTimeoutId);
        }
        lastCalled = stamp;
        result = func.apply(thisArg, args);
      }
      else if (!maxTimeoutId) {
        maxTimeoutId = setTimeout(maxDelayed, remaining);
      }
    }
    if (isCalled && timeoutId) {
      timeoutId = clearTimeout(timeoutId);
    }
    else if (!timeoutId && wait !== maxWait) {
      timeoutId = setTimeout(delayed, wait);
    }
    if (leadingCall) {
      isCalled = true;
      result = func.apply(thisArg, args);
    }
    if (isCalled && !timeoutId && !maxTimeoutId) {
      args = thisArg = null;
    }
    return result;
  };
}

module.exports = debounce;

},{"lodash.isfunction":114,"lodash.isobject":115,"lodash.now":112}],112:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
var isNative = require('lodash._isnative');

/**
 * Gets the number of milliseconds that have elapsed since the Unix epoch
 * (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @category Utilities
 * @example
 *
 * var stamp = _.now();
 * _.defer(function() { console.log(_.now() - stamp); });
 * // => logs the number of milliseconds it took for the deferred function to be called
 */
var now = isNative(now = Date.now) && now || function() {
  return new Date().getTime();
};

module.exports = now;

},{"lodash._isnative":113}],113:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/** Used for native method references */
var objectProto = Object.prototype;

/** Used to resolve the internal [[Class]] of values */
var toString = objectProto.toString;

/** Used to detect if a method is native */
var reNative = RegExp('^' +
  String(toString)
    .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
    .replace(/toString| for [^\]]+/g, '.*?') + '$'
);

/**
 * Checks if `value` is a native function.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
 */
function isNative(value) {
  return typeof value == 'function' && reNative.test(value);
}

module.exports = isNative;

},{}],114:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/**
 * Checks if `value` is a function.
 *
 * @static
 * @memberOf _
 * @category Objects
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 */
function isFunction(value) {
  return typeof value == 'function';
}

module.exports = isFunction;

},{}],115:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
var objectTypes = require('lodash._objecttypes');

/**
 * Checks if `value` is the language type of Object.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Objects
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // check if the value is the ECMAScript language type of Object
  // http://es5.github.io/#x8
  // and avoid a V8 bug
  // http://code.google.com/p/v8/issues/detail?id=2291
  return !!(value && objectTypes[typeof value]);
}

module.exports = isObject;

},{"lodash._objecttypes":116}],116:[function(require,module,exports){
/**
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modularize modern exports="npm" -o ./npm/`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */

/** Used to determine if values are of the language type Object */
var objectTypes = {
  'boolean': false,
  'function': true,
  'object': true,
  'number': false,
  'string': false,
  'undefined': false
};

module.exports = objectTypes;

},{}],117:[function(require,module,exports){
(function (global){
//! moment.js
//! version : 2.9.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

(function (undefined) {
    /************************************
        Constants
    ************************************/

    var moment,
        VERSION = '2.9.0',
        // the global-scope this is NOT the global object in Node.js
        globalScope = (typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window)) ? global : this,
        oldGlobalMoment,
        round = Math.round,
        hasOwnProperty = Object.prototype.hasOwnProperty,
        i,

        YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,

        // internal storage for locale config files
        locales = {},

        // extra moment internal properties (plugins register props here)
        momentProperties = [],

        // check for nodeJS
        hasModule = (typeof module !== 'undefined' && module && module.exports),

        // ASP.NET json date format regex
        aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
        aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,

        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,

        // format tokens
        formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,

        // parsing token regexes
        parseTokenOneOrTwoDigits = /\d\d?/, // 0 - 99
        parseTokenOneToThreeDigits = /\d{1,3}/, // 0 - 999
        parseTokenOneToFourDigits = /\d{1,4}/, // 0 - 9999
        parseTokenOneToSixDigits = /[+\-]?\d{1,6}/, // -999,999 - 999,999
        parseTokenDigits = /\d+/, // nonzero number of digits
        parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.
        parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        parseTokenT = /T/i, // T (ISO separator)
        parseTokenOffsetMs = /[\+\-]?\d+/, // 1234567890123
        parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123

        //strict parsing regexes
        parseTokenOneDigit = /\d/, // 0 - 9
        parseTokenTwoDigits = /\d\d/, // 00 - 99
        parseTokenThreeDigits = /\d{3}/, // 000 - 999
        parseTokenFourDigits = /\d{4}/, // 0000 - 9999
        parseTokenSixDigits = /[+-]?\d{6}/, // -999,999 - 999,999
        parseTokenSignedNumber = /[+-]?\d+/, // -inf - inf

        // iso 8601 regex
        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
        isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,

        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',

        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
            ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
            ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d{2}/],
            ['YYYY-DDD', /\d{4}-\d{3}/]
        ],

        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
            ['HH:mm', /(T| )\d\d:\d\d/],
            ['HH', /(T| )\d\d/]
        ],

        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']
        parseTimezoneChunker = /([\+\-]|\d\d)/gi,

        // getter and setter names
        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
        unitMillisecondFactors = {
            'Milliseconds' : 1,
            'Seconds' : 1e3,
            'Minutes' : 6e4,
            'Hours' : 36e5,
            'Days' : 864e5,
            'Months' : 2592e6,
            'Years' : 31536e6
        },

        unitAliases = {
            ms : 'millisecond',
            s : 'second',
            m : 'minute',
            h : 'hour',
            d : 'day',
            D : 'date',
            w : 'week',
            W : 'isoWeek',
            M : 'month',
            Q : 'quarter',
            y : 'year',
            DDD : 'dayOfYear',
            e : 'weekday',
            E : 'isoWeekday',
            gg: 'weekYear',
            GG: 'isoWeekYear'
        },

        camelFunctions = {
            dayofyear : 'dayOfYear',
            isoweekday : 'isoWeekday',
            isoweek : 'isoWeek',
            weekyear : 'weekYear',
            isoweekyear : 'isoWeekYear'
        },

        // format function strings
        formatFunctions = {},

        // default relative time thresholds
        relativeTimeThresholds = {
            s: 45,  // seconds to minute
            m: 45,  // minutes to hour
            h: 22,  // hours to day
            d: 26,  // days to month
            M: 11   // months to year
        },

        // tokens to ordinalize and pad
        ordinalizeTokens = 'DDD w W M D d'.split(' '),
        paddedTokens = 'M D H h m s w W'.split(' '),

        formatTokenFunctions = {
            M    : function () {
                return this.month() + 1;
            },
            MMM  : function (format) {
                return this.localeData().monthsShort(this, format);
            },
            MMMM : function (format) {
                return this.localeData().months(this, format);
            },
            D    : function () {
                return this.date();
            },
            DDD  : function () {
                return this.dayOfYear();
            },
            d    : function () {
                return this.day();
            },
            dd   : function (format) {
                return this.localeData().weekdaysMin(this, format);
            },
            ddd  : function (format) {
                return this.localeData().weekdaysShort(this, format);
            },
            dddd : function (format) {
                return this.localeData().weekdays(this, format);
            },
            w    : function () {
                return this.week();
            },
            W    : function () {
                return this.isoWeek();
            },
            YY   : function () {
                return leftZeroFill(this.year() % 100, 2);
            },
            YYYY : function () {
                return leftZeroFill(this.year(), 4);
            },
            YYYYY : function () {
                return leftZeroFill(this.year(), 5);
            },
            YYYYYY : function () {
                var y = this.year(), sign = y >= 0 ? '+' : '-';
                return sign + leftZeroFill(Math.abs(y), 6);
            },
            gg   : function () {
                return leftZeroFill(this.weekYear() % 100, 2);
            },
            gggg : function () {
                return leftZeroFill(this.weekYear(), 4);
            },
            ggggg : function () {
                return leftZeroFill(this.weekYear(), 5);
            },
            GG   : function () {
                return leftZeroFill(this.isoWeekYear() % 100, 2);
            },
            GGGG : function () {
                return leftZeroFill(this.isoWeekYear(), 4);
            },
            GGGGG : function () {
                return leftZeroFill(this.isoWeekYear(), 5);
            },
            e : function () {
                return this.weekday();
            },
            E : function () {
                return this.isoWeekday();
            },
            a    : function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), true);
            },
            A    : function () {
                return this.localeData().meridiem(this.hours(), this.minutes(), false);
            },
            H    : function () {
                return this.hours();
            },
            h    : function () {
                return this.hours() % 12 || 12;
            },
            m    : function () {
                return this.minutes();
            },
            s    : function () {
                return this.seconds();
            },
            S    : function () {
                return toInt(this.milliseconds() / 100);
            },
            SS   : function () {
                return leftZeroFill(toInt(this.milliseconds() / 10), 2);
            },
            SSS  : function () {
                return leftZeroFill(this.milliseconds(), 3);
            },
            SSSS : function () {
                return leftZeroFill(this.milliseconds(), 3);
            },
            Z    : function () {
                var a = this.utcOffset(),
                    b = '+';
                if (a < 0) {
                    a = -a;
                    b = '-';
                }
                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);
            },
            ZZ   : function () {
                var a = this.utcOffset(),
                    b = '+';
                if (a < 0) {
                    a = -a;
                    b = '-';
                }
                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
            },
            z : function () {
                return this.zoneAbbr();
            },
            zz : function () {
                return this.zoneName();
            },
            x    : function () {
                return this.valueOf();
            },
            X    : function () {
                return this.unix();
            },
            Q : function () {
                return this.quarter();
            }
        },

        deprecations = {},

        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'],

        updateInProgress = false;

    // Pick the first defined of two or three arguments. dfl comes from
    // default.
    function dfl(a, b, c) {
        switch (arguments.length) {
            case 2: return a != null ? a : b;
            case 3: return a != null ? a : b != null ? b : c;
            default: throw new Error('Implement me');
        }
    }

    function hasOwnProp(a, b) {
        return hasOwnProperty.call(a, b);
    }

    function defaultParsingFlags() {
        // We need to deep clone this object, and es5 standard is not very
        // helpful.
        return {
            empty : false,
            unusedTokens : [],
            unusedInput : [],
            overflow : -2,
            charsLeftOver : 0,
            nullInput : false,
            invalidMonth : null,
            invalidFormat : false,
            userInvalidated : false,
            iso: false
        };
    }

    function printMsg(msg) {
        if (moment.suppressDeprecationWarnings === false &&
                typeof console !== 'undefined' && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function () {
            if (firstTime) {
                printMsg(msg);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    function deprecateSimple(name, msg) {
        if (!deprecations[name]) {
            printMsg(msg);
            deprecations[name] = true;
        }
    }

    function padToken(func, count) {
        return function (a) {
            return leftZeroFill(func.call(this, a), count);
        };
    }
    function ordinalizeToken(func, period) {
        return function (a) {
            return this.localeData().ordinal(func.call(this, a), period);
        };
    }

    function monthDiff(a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        return -(wholeMonthDiff + adjust);
    }

    while (ordinalizeTokens.length) {
        i = ordinalizeTokens.pop();
        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
    }
    while (paddedTokens.length) {
        i = paddedTokens.pop();
        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
    }
    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);


    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // thie is not supposed to happen
            return hour;
        }
    }

    /************************************
        Constructors
    ************************************/

    function Locale() {
    }

    // Moment prototype object
    function Moment(config, skipOverflow) {
        if (skipOverflow !== false) {
            checkOverflow(config);
        }
        copyConfig(this, config);
        this._d = new Date(+config._d);
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            moment.updateOffset(this);
            updateInProgress = false;
        }
    }

    // Duration Constructor
    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 36e5; // 1000 * 60 * 60
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = moment.localeData();

        this._bubble();
    }

    /************************************
        Helpers
    ************************************/


    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function copyConfig(to, from) {
        var i, prop, val;

        if (typeof from._isAMomentObject !== 'undefined') {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (typeof from._i !== 'undefined') {
            to._i = from._i;
        }
        if (typeof from._f !== 'undefined') {
            to._f = from._f;
        }
        if (typeof from._l !== 'undefined') {
            to._l = from._l;
        }
        if (typeof from._strict !== 'undefined') {
            to._strict = from._strict;
        }
        if (typeof from._tzm !== 'undefined') {
            to._tzm = from._tzm;
        }
        if (typeof from._isUTC !== 'undefined') {
            to._isUTC = from._isUTC;
        }
        if (typeof from._offset !== 'undefined') {
            to._offset = from._offset;
        }
        if (typeof from._pf !== 'undefined') {
            to._pf = from._pf;
        }
        if (typeof from._locale !== 'undefined') {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (typeof val !== 'undefined') {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.ceil(number);
        } else {
            return Math.floor(number);
        }
    }

    // left zero fill a number
    // see http://jsperf.com/left-zero-filling for performance comparison
    function leftZeroFill(number, targetLength, forceSign) {
        var output = '' + Math.abs(number),
            sign = number >= 0;

        while (output.length < targetLength) {
            output = '0' + output;
        }
        return (sign ? (forceSign ? '+' : '') : '-') + output;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        other = makeAs(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = moment.duration(val, period);
            addOrSubtractDurationFromMoment(this, dur, direction);
            return this;
        };
    }

    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = duration._days,
            months = duration._months;
        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(+mom._d + milliseconds * isAdding);
        }
        if (days) {
            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
        }
        if (months) {
            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            moment.updateOffset(mom, days || months);
        }
    }

    // check if is an array
    function isArray(input) {
        return Object.prototype.toString.call(input) === '[object Array]';
    }

    function isDate(input) {
        return Object.prototype.toString.call(input) === '[object Date]' ||
            input instanceof Date;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function normalizeUnits(units) {
        if (units) {
            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
            units = unitAliases[units] || camelFunctions[lowered] || lowered;
        }
        return units;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    function makeList(field) {
        var count, setter;

        if (field.indexOf('week') === 0) {
            count = 7;
            setter = 'day';
        }
        else if (field.indexOf('month') === 0) {
            count = 12;
            setter = 'month';
        }
        else {
            return;
        }

        moment[field] = function (format, index) {
            var i, getter,
                method = moment._locale[field],
                results = [];

            if (typeof format === 'number') {
                index = format;
                format = undefined;
            }

            getter = function (i) {
                var m = moment().utc().set(setter, i);
                return method.call(moment._locale, m, format || '');
            };

            if (index != null) {
                return getter(index);
            }
            else {
                for (i = 0; i < count; i++) {
                    results.push(getter(i));
                }
                return results;
            }
        };
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            if (coercedNumber >= 0) {
                value = Math.floor(coercedNumber);
            } else {
                value = Math.ceil(coercedNumber);
            }
        }

        return value;
    }

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    function weeksInYear(year, dow, doy) {
        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;
    }

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function checkOverflow(m) {
        var overflow;
        if (m._a && m._pf.overflow === -2) {
            overflow =
                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :
                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :
                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||
                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||
                                           m._a[SECOND] !== 0 ||
                                           m._a[MILLISECOND] !== 0)) ? HOUR :
                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :
                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :
                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }

            m._pf.overflow = overflow;
        }
    }

    function isValid(m) {
        if (m._isValid == null) {
            m._isValid = !isNaN(m._d.getTime()) &&
                m._pf.overflow < 0 &&
                !m._pf.empty &&
                !m._pf.invalidMonth &&
                !m._pf.nullInput &&
                !m._pf.invalidFormat &&
                !m._pf.userInvalidated;

            if (m._strict) {
                m._isValid = m._isValid &&
                    m._pf.charsLeftOver === 0 &&
                    m._pf.unusedTokens.length === 0 &&
                    m._pf.bigHour === undefined;
            }
        }
        return m._isValid;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        if (!locales[name] && hasModule) {
            try {
                oldLocale = moment.locale();
                require('./locale/' + name);
                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales
                moment.locale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // Return a moment from input, that is local/utc/utcOffset equivalent to
    // model.
    function makeAs(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (moment.isMoment(input) || isDate(input) ?
                    +input : +moment(input)) - (+res);
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(+res._d + diff);
            moment.updateOffset(res, false);
            return res;
        } else {
            return moment(input).local();
        }
    }

    /************************************
        Locale
    ************************************/


    extend(Locale.prototype, {

        set : function (config) {
            var prop, i;
            for (i in config) {
                prop = config[i];
                if (typeof prop === 'function') {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
            // Lenient ordinal parsing accepts just a number in addition to
            // number + (possibly) stuff coming from _ordinalParseLenient.
            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
        },

        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        months : function (m) {
            return this._months[m.month()];
        },

        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        monthsShort : function (m) {
            return this._monthsShort[m.month()];
        },

        monthsParse : function (monthName, format, strict) {
            var i, mom, regex;

            if (!this._monthsParse) {
                this._monthsParse = [];
                this._longMonthsParse = [];
                this._shortMonthsParse = [];
            }

            for (i = 0; i < 12; i++) {
                // make the regex if we don't have it already
                mom = moment.utc([2000, i]);
                if (strict && !this._longMonthsParse[i]) {
                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
                }
                if (!strict && !this._monthsParse[i]) {
                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                    return i;
                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                    return i;
                } else if (!strict && this._monthsParse[i].test(monthName)) {
                    return i;
                }
            }
        },

        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdays : function (m) {
            return this._weekdays[m.day()];
        },

        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysShort : function (m) {
            return this._weekdaysShort[m.day()];
        },

        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        weekdaysMin : function (m) {
            return this._weekdaysMin[m.day()];
        },

        weekdaysParse : function (weekdayName) {
            var i, mom, regex;

            if (!this._weekdaysParse) {
                this._weekdaysParse = [];
            }

            for (i = 0; i < 7; i++) {
                // make the regex if we don't have it already
                if (!this._weekdaysParse[i]) {
                    mom = moment([2000, 1]).day(i);
                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
                }
                // test the regex
                if (this._weekdaysParse[i].test(weekdayName)) {
                    return i;
                }
            }
        },

        _longDateFormat : {
            LTS : 'h:mm:ss A',
            LT : 'h:mm A',
            L : 'MM/DD/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY LT',
            LLLL : 'dddd, MMMM D, YYYY LT'
        },
        longDateFormat : function (key) {
            var output = this._longDateFormat[key];
            if (!output && this._longDateFormat[key.toUpperCase()]) {
                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
                    return val.slice(1);
                });
                this._longDateFormat[key] = output;
            }
            return output;
        },

        isPM : function (input) {
            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
            // Using charAt should be more compatible.
            return ((input + '').toLowerCase().charAt(0) === 'p');
        },

        _meridiemParse : /[ap]\.?m?\.?/i,
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'pm' : 'PM';
            } else {
                return isLower ? 'am' : 'AM';
            }
        },


        _calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        calendar : function (key, mom, now) {
            var output = this._calendar[key];
            return typeof output === 'function' ? output.apply(mom, [now]) : output;
        },

        _relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },

        relativeTime : function (number, withoutSuffix, string, isFuture) {
            var output = this._relativeTime[string];
            return (typeof output === 'function') ?
                output(number, withoutSuffix, string, isFuture) :
                output.replace(/%d/i, number);
        },

        pastFuture : function (diff, output) {
            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
        },

        ordinal : function (number) {
            return this._ordinal.replace('%d', number);
        },
        _ordinal : '%d',
        _ordinalParse : /\d{1,2}/,

        preparse : function (string) {
            return string;
        },

        postformat : function (string) {
            return string;
        },

        week : function (mom) {
            return weekOfYear(mom, this._week.dow, this._week.doy).week;
        },

        _week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 1st is the first week of the year.
        },

        firstDayOfWeek : function () {
            return this._week.dow;
        },

        firstDayOfYear : function () {
            return this._week.doy;
        },

        _invalidDate: 'Invalid date',
        invalidDate: function () {
            return this._invalidDate;
        }
    });

    /************************************
        Formatting
    ************************************/


    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '';
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());

        if (!formatFunctions[format]) {
            formatFunctions[format] = makeFormatFunction(format);
        }

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }


    /************************************
        Parsing
    ************************************/


    // get the regex to find the next token
    function getParseRegexForToken(token, config) {
        var a, strict = config._strict;
        switch (token) {
        case 'Q':
            return parseTokenOneDigit;
        case 'DDDD':
            return parseTokenThreeDigits;
        case 'YYYY':
        case 'GGGG':
        case 'gggg':
            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
        case 'Y':
        case 'G':
        case 'g':
            return parseTokenSignedNumber;
        case 'YYYYYY':
        case 'YYYYY':
        case 'GGGGG':
        case 'ggggg':
            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
        case 'S':
            if (strict) {
                return parseTokenOneDigit;
            }
            /* falls through */
        case 'SS':
            if (strict) {
                return parseTokenTwoDigits;
            }
            /* falls through */
        case 'SSS':
            if (strict) {
                return parseTokenThreeDigits;
            }
            /* falls through */
        case 'DDD':
            return parseTokenOneToThreeDigits;
        case 'MMM':
        case 'MMMM':
        case 'dd':
        case 'ddd':
        case 'dddd':
            return parseTokenWord;
        case 'a':
        case 'A':
            return config._locale._meridiemParse;
        case 'x':
            return parseTokenOffsetMs;
        case 'X':
            return parseTokenTimestampMs;
        case 'Z':
        case 'ZZ':
            return parseTokenTimezone;
        case 'T':
            return parseTokenT;
        case 'SSSS':
            return parseTokenDigits;
        case 'MM':
        case 'DD':
        case 'YY':
        case 'GG':
        case 'gg':
        case 'HH':
        case 'hh':
        case 'mm':
        case 'ss':
        case 'ww':
        case 'WW':
            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
        case 'M':
        case 'D':
        case 'd':
        case 'H':
        case 'h':
        case 'm':
        case 's':
        case 'w':
        case 'W':
        case 'e':
        case 'E':
            return parseTokenOneOrTwoDigits;
        case 'Do':
            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;
        default :
            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), 'i'));
            return a;
        }
    }

    function utcOffsetFromString(string) {
        string = string || '';
        var possibleTzMatches = (string.match(parseTokenTimezone) || []),
            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],
            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
            minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? minutes : -minutes;
    }

    // function to convert string input to date
    function addTimeToArrayFromToken(token, input, config) {
        var a, datePartArray = config._a;

        switch (token) {
        // QUARTER
        case 'Q':
            if (input != null) {
                datePartArray[MONTH] = (toInt(input) - 1) * 3;
            }
            break;
        // MONTH
        case 'M' : // fall through to MM
        case 'MM' :
            if (input != null) {
                datePartArray[MONTH] = toInt(input) - 1;
            }
            break;
        case 'MMM' : // fall through to MMMM
        case 'MMMM' :
            a = config._locale.monthsParse(input, token, config._strict);
            // if we didn't find a month name, mark the date as invalid.
            if (a != null) {
                datePartArray[MONTH] = a;
            } else {
                config._pf.invalidMonth = input;
            }
            break;
        // DAY OF MONTH
        case 'D' : // fall through to DD
        case 'DD' :
            if (input != null) {
                datePartArray[DATE] = toInt(input);
            }
            break;
        case 'Do' :
            if (input != null) {
                datePartArray[DATE] = toInt(parseInt(
                            input.match(/\d{1,2}/)[0], 10));
            }
            break;
        // DAY OF YEAR
        case 'DDD' : // fall through to DDDD
        case 'DDDD' :
            if (input != null) {
                config._dayOfYear = toInt(input);
            }

            break;
        // YEAR
        case 'YY' :
            datePartArray[YEAR] = moment.parseTwoDigitYear(input);
            break;
        case 'YYYY' :
        case 'YYYYY' :
        case 'YYYYYY' :
            datePartArray[YEAR] = toInt(input);
            break;
        // AM / PM
        case 'a' : // fall through to A
        case 'A' :
            config._meridiem = input;
            // config._isPm = config._locale.isPM(input);
            break;
        // HOUR
        case 'h' : // fall through to hh
        case 'hh' :
            config._pf.bigHour = true;
            /* falls through */
        case 'H' : // fall through to HH
        case 'HH' :
            datePartArray[HOUR] = toInt(input);
            break;
        // MINUTE
        case 'm' : // fall through to mm
        case 'mm' :
            datePartArray[MINUTE] = toInt(input);
            break;
        // SECOND
        case 's' : // fall through to ss
        case 'ss' :
            datePartArray[SECOND] = toInt(input);
            break;
        // MILLISECOND
        case 'S' :
        case 'SS' :
        case 'SSS' :
        case 'SSSS' :
            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
            break;
        // UNIX OFFSET (MILLISECONDS)
        case 'x':
            config._d = new Date(toInt(input));
            break;
        // UNIX TIMESTAMP WITH MS
        case 'X':
            config._d = new Date(parseFloat(input) * 1000);
            break;
        // TIMEZONE
        case 'Z' : // fall through to ZZ
        case 'ZZ' :
            config._useUTC = true;
            config._tzm = utcOffsetFromString(input);
            break;
        // WEEKDAY - human
        case 'dd':
        case 'ddd':
        case 'dddd':
            a = config._locale.weekdaysParse(input);
            // if we didn't get a weekday name, mark the date as invalid
            if (a != null) {
                config._w = config._w || {};
                config._w['d'] = a;
            } else {
                config._pf.invalidWeekday = input;
            }
            break;
        // WEEK, WEEK DAY - numeric
        case 'w':
        case 'ww':
        case 'W':
        case 'WW':
        case 'd':
        case 'e':
        case 'E':
            token = token.substr(0, 1);
            /* falls through */
        case 'gggg':
        case 'GGGG':
        case 'GGGGG':
            token = token.substr(0, 2);
            if (input) {
                config._w = config._w || {};
                config._w[token] = toInt(input);
            }
            break;
        case 'gg':
        case 'GG':
            config._w = config._w || {};
            config._w[token] = moment.parseTwoDigitYear(input);
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);
            week = dfl(w.W, 1);
            weekday = dfl(w.E, 1);
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);
            week = dfl(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < dow) {
                    ++week;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function dateFromConfig(config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                config._pf._overflowDayOfYear = true;
            }

            date = makeUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }
    }

    function dateFromObject(config) {
        var normalizedInput;

        if (config._d) {
            return;
        }

        normalizedInput = normalizeObjectUnits(config._i);
        config._a = [
            normalizedInput.year,
            normalizedInput.month,
            normalizedInput.day || normalizedInput.date,
            normalizedInput.hour,
            normalizedInput.minute,
            normalizedInput.second,
            normalizedInput.millisecond
        ];

        dateFromConfig(config);
    }

    function currentDateArray(config) {
        var now = new Date();
        if (config._useUTC) {
            return [
                now.getUTCFullYear(),
                now.getUTCMonth(),
                now.getUTCDate()
            ];
        } else {
            return [now.getFullYear(), now.getMonth(), now.getDate()];
        }
    }

    // date from string and format string
    function makeDateFromStringAndFormat(config) {
        if (config._f === moment.ISO_8601) {
            parseISO(config);
            return;
        }

        config._a = [];
        config._pf.empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    config._pf.unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    config._pf.empty = false;
                }
                else {
                    config._pf.unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                config._pf.unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        config._pf.charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            config._pf.unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {
            config._pf.bigHour = undefined;
        }
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR],
                config._meridiem);
        dateFromConfig(config);
        checkOverflow(config);
    }

    function unescapeFormat(s) {
        return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        });
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function regexpEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    // date from string and array of format strings
    function makeDateFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            config._pf.invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._pf = defaultParsingFlags();
            tempConfig._f = config._f[i];
            makeDateFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += tempConfig._pf.charsLeftOver;

            //or tokens
            currentScore += tempConfig._pf.unusedTokens.length * 10;

            tempConfig._pf.score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    // date from iso format
    function parseISO(config) {
        var i, l,
            string = config._i,
            match = isoRegex.exec(string);

        if (match) {
            config._pf.iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(string)) {
                    // match[5] should be 'T' or undefined
                    config._f = isoDates[i][0] + (match[6] || ' ');
                    break;
                }
            }
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(string)) {
                    config._f += isoTimes[i][0];
                    break;
                }
            }
            if (string.match(parseTokenTimezone)) {
                config._f += 'Z';
            }
            makeDateFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function makeDateFromString(config) {
        parseISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            moment.createFromInputFallback(config);
        }
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function makeDateFromInput(config) {
        var input = config._i, matched;
        if (input === undefined) {
            config._d = new Date();
        } else if (isDate(input)) {
            config._d = new Date(+input);
        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {
            config._d = new Date(+matched[1]);
        } else if (typeof input === 'string') {
            makeDateFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            dateFromConfig(config);
        } else if (typeof(input) === 'object') {
            dateFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            moment.createFromInputFallback(config);
        }
    }

    function makeDate(y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor doesn't accept years < 1970
        if (y < 1970) {
            date.setFullYear(y);
        }
        return date;
    }

    function makeUTCDate(y) {
        var date = new Date(Date.UTC.apply(null, arguments));
        if (y < 1970) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    function parseWeekday(input, locale) {
        if (typeof input === 'string') {
            if (!isNaN(input)) {
                input = parseInt(input, 10);
            }
            else {
                input = locale.weekdaysParse(input);
                if (typeof input !== 'number') {
                    return null;
                }
            }
        }
        return input;
    }

    /************************************
        Relative Time
    ************************************/


    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime(posNegDuration, withoutSuffix, locale) {
        var duration = moment.duration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            years = round(duration.as('y')),

            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||
                minutes === 1 && ['m'] ||
                minutes < relativeTimeThresholds.m && ['mm', minutes] ||
                hours === 1 && ['h'] ||
                hours < relativeTimeThresholds.h && ['hh', hours] ||
                days === 1 && ['d'] ||
                days < relativeTimeThresholds.d && ['dd', days] ||
                months === 1 && ['M'] ||
                months < relativeTimeThresholds.M && ['MM', months] ||
                years === 1 && ['y'] || ['yy', years];

        args[2] = withoutSuffix;
        args[3] = +posNegDuration > 0;
        args[4] = locale;
        return substituteTimeAgo.apply({}, args);
    }


    /************************************
        Week of Year
    ************************************/


    // firstDayOfWeek       0 = sun, 6 = sat
    //                      the day of the week that starts the week
    //                      (usually sunday or monday)
    // firstDayOfWeekOfYear 0 = sun, 6 = sat
    //                      the first week is the week that contains the first
    //                      of this day of the week
    //                      (eg. ISO weeks use thursday (4))
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
        var end = firstDayOfWeekOfYear - firstDayOfWeek,
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
            adjustedMoment;


        if (daysToDayOfWeek > end) {
            daysToDayOfWeek -= 7;
        }

        if (daysToDayOfWeek < end - 7) {
            daysToDayOfWeek += 7;
        }

        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');
        return {
            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
            year: adjustedMoment.year()
        };
    }

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;

        d = d === 0 ? 7 : d;
        weekday = weekday != null ? weekday : firstDayOfWeek;
        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

        return {
            year: dayOfYear > 0 ? year : year - 1,
            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
        };
    }

    /************************************
        Top Level Functions
    ************************************/

    function makeMoment(config) {
        var input = config._i,
            format = config._f,
            res;

        config._locale = config._locale || moment.localeData(config._l);

        if (input === null || (format === undefined && input === '')) {
            return moment.invalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (moment.isMoment(input)) {
            return new Moment(input, true);
        } else if (format) {
            if (isArray(format)) {
                makeDateFromStringAndArray(config);
            } else {
                makeDateFromStringAndFormat(config);
            }
        } else {
            makeDateFromInput(config);
        }

        res = new Moment(config);
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    moment = function (input, format, locale, strict) {
        var c;

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c = {};
        c._isAMomentObject = true;
        c._i = input;
        c._f = format;
        c._l = locale;
        c._strict = strict;
        c._isUTC = false;
        c._pf = defaultParsingFlags();

        return makeMoment(c);
    };

    moment.suppressDeprecationWarnings = false;

    moment.createFromInputFallback = deprecate(
        'moment construction falls back to js Date. This is ' +
        'discouraged and will be removed in upcoming major ' +
        'release. Please refer to ' +
        'https://github.com/moment/moment/issues/1407 for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return moment();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    moment.min = function () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    };

    moment.max = function () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    };

    // creating with utc
    moment.utc = function (input, format, locale, strict) {
        var c;

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c = {};
        c._isAMomentObject = true;
        c._useUTC = true;
        c._isUTC = true;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        c._pf = defaultParsingFlags();

        return makeMoment(c).utc();
    };

    // creating with unix timestamp (in seconds)
    moment.unix = function (input) {
        return moment(input * 1000);
    };

    // duration
    moment.duration = function (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            parseIso,
            diffRes;

        if (moment.isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(match[MILLISECOND]) * sign
            };
        } else if (!!(match = isoDurationRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            parseIso = function (inp) {
                // We'd normally use ~~inp for this, but unfortunately it also
                // converts floats to ints.
                // inp may be undefined, so careful calling replace on it.
                var res = inp && parseFloat(inp.replace(',', '.'));
                // apply sign while we're at it
                return (isNaN(res) ? 0 : res) * sign;
            };
            duration = {
                y: parseIso(match[2]),
                M: parseIso(match[3]),
                d: parseIso(match[4]),
                h: parseIso(match[5]),
                m: parseIso(match[6]),
                s: parseIso(match[7]),
                w: parseIso(match[8])
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' &&
                ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(moment(duration.from), moment(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    };

    // version number
    moment.version = VERSION;

    // default format
    moment.defaultFormat = isoFormat;

    // constant that refers to the ISO standard
    moment.ISO_8601 = function () {};

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    moment.momentProperties = momentProperties;

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    moment.updateOffset = function () {};

    // This function allows you to set a threshold for relative time strings
    moment.relativeTimeThreshold = function (threshold, limit) {
        if (relativeTimeThresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return relativeTimeThresholds[threshold];
        }
        relativeTimeThresholds[threshold] = limit;
        return true;
    };

    moment.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        function (key, value) {
            return moment.locale(key, value);
        }
    );

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    moment.locale = function (key, values) {
        var data;
        if (key) {
            if (typeof(values) !== 'undefined') {
                data = moment.defineLocale(key, values);
            }
            else {
                data = moment.localeData(key);
            }

            if (data) {
                moment.duration._locale = moment._locale = data;
            }
        }

        return moment._locale._abbr;
    };

    moment.defineLocale = function (name, values) {
        if (values !== null) {
            values.abbr = name;
            if (!locales[name]) {
                locales[name] = new Locale();
            }
            locales[name].set(values);

            // backwards compat for now: also set the locale
            moment.locale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    };

    moment.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        function (key) {
            return moment.localeData(key);
        }
    );

    // returns locale data
    moment.localeData = function (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return moment._locale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    };

    // compare moment object
    moment.isMoment = function (obj) {
        return obj instanceof Moment ||
            (obj != null && hasOwnProp(obj, '_isAMomentObject'));
    };

    // for typechecking Duration objects
    moment.isDuration = function (obj) {
        return obj instanceof Duration;
    };

    for (i = lists.length - 1; i >= 0; --i) {
        makeList(lists[i]);
    }

    moment.normalizeUnits = function (units) {
        return normalizeUnits(units);
    };

    moment.invalid = function (flags) {
        var m = moment.utc(NaN);
        if (flags != null) {
            extend(m._pf, flags);
        }
        else {
            m._pf.userInvalidated = true;
        }

        return m;
    };

    moment.parseZone = function () {
        return moment.apply(null, arguments).parseZone();
    };

    moment.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    moment.isDate = isDate;

    /************************************
        Moment Prototype
    ************************************/


    extend(moment.fn = Moment.prototype, {

        clone : function () {
            return moment(this);
        },

        valueOf : function () {
            return +this._d - ((this._offset || 0) * 60000);
        },

        unix : function () {
            return Math.floor(+this / 1000);
        },

        toString : function () {
            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
        },

        toDate : function () {
            return this._offset ? new Date(+this) : this._d;
        },

        toISOString : function () {
            var m = moment(this).utc();
            if (0 < m.year() && m.year() <= 9999) {
                if ('function' === typeof Date.prototype.toISOString) {
                    // native implementation is ~50x faster, use it when we can
                    return this.toDate().toISOString();
                } else {
                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
                }
            } else {
                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        },

        toArray : function () {
            var m = this;
            return [
                m.year(),
                m.month(),
                m.date(),
                m.hours(),
                m.minutes(),
                m.seconds(),
                m.milliseconds()
            ];
        },

        isValid : function () {
            return isValid(this);
        },

        isDSTShifted : function () {
            if (this._a) {
                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
            }

            return false;
        },

        parsingFlags : function () {
            return extend({}, this._pf);
        },

        invalidAt: function () {
            return this._pf.overflow;
        },

        utc : function (keepLocalTime) {
            return this.utcOffset(0, keepLocalTime);
        },

        local : function (keepLocalTime) {
            if (this._isUTC) {
                this.utcOffset(0, keepLocalTime);
                this._isUTC = false;

                if (keepLocalTime) {
                    this.subtract(this._dateUtcOffset(), 'm');
                }
            }
            return this;
        },

        format : function (inputString) {
            var output = formatMoment(this, inputString || moment.defaultFormat);
            return this.localeData().postformat(output);
        },

        add : createAdder(1, 'add'),

        subtract : createAdder(-1, 'subtract'),

        diff : function (input, units, asFloat) {
            var that = makeAs(input, this),
                zoneDiff = (that.utcOffset() - this.utcOffset()) * 6e4,
                anchor, diff, output, daysAdjust;

            units = normalizeUnits(units);

            if (units === 'year' || units === 'month' || units === 'quarter') {
                output = monthDiff(this, that);
                if (units === 'quarter') {
                    output = output / 3;
                } else if (units === 'year') {
                    output = output / 12;
                }
            } else {
                diff = this - that;
                output = units === 'second' ? diff / 1e3 : // 1000
                    units === 'minute' ? diff / 6e4 : // 1000 * 60
                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60
                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                    diff;
            }
            return asFloat ? output : absRound(output);
        },

        from : function (time, withoutSuffix) {
            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        },

        fromNow : function (withoutSuffix) {
            return this.from(moment(), withoutSuffix);
        },

        calendar : function (time) {
            // We want to compare the start of today, vs this.
            // Getting start-of-today depends on whether we're locat/utc/offset
            // or not.
            var now = time || moment(),
                sod = makeAs(now, this).startOf('day'),
                diff = this.diff(sod, 'days', true),
                format = diff < -6 ? 'sameElse' :
                    diff < -1 ? 'lastWeek' :
                    diff < 0 ? 'lastDay' :
                    diff < 1 ? 'sameDay' :
                    diff < 2 ? 'nextDay' :
                    diff < 7 ? 'nextWeek' : 'sameElse';
            return this.format(this.localeData().calendar(format, this, moment(now)));
        },

        isLeapYear : function () {
            return isLeapYear(this.year());
        },

        isDST : function () {
            return (this.utcOffset() > this.clone().month(0).utcOffset() ||
                this.utcOffset() > this.clone().month(5).utcOffset());
        },

        day : function (input) {
            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            if (input != null) {
                input = parseWeekday(input, this.localeData());
                return this.add(input - day, 'd');
            } else {
                return day;
            }
        },

        month : makeAccessor('Month', true),

        startOf : function (units) {
            units = normalizeUnits(units);
            // the following switch intentionally omits break keywords
            // to utilize falling through the cases.
            switch (units) {
            case 'year':
                this.month(0);
                /* falls through */
            case 'quarter':
            case 'month':
                this.date(1);
                /* falls through */
            case 'week':
            case 'isoWeek':
            case 'day':
                this.hours(0);
                /* falls through */
            case 'hour':
                this.minutes(0);
                /* falls through */
            case 'minute':
                this.seconds(0);
                /* falls through */
            case 'second':
                this.milliseconds(0);
                /* falls through */
            }

            // weeks are a special case
            if (units === 'week') {
                this.weekday(0);
            } else if (units === 'isoWeek') {
                this.isoWeekday(1);
            }

            // quarters are also special
            if (units === 'quarter') {
                this.month(Math.floor(this.month() / 3) * 3);
            }

            return this;
        },

        endOf: function (units) {
            units = normalizeUnits(units);
            if (units === undefined || units === 'millisecond') {
                return this;
            }
            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
        },

        isAfter: function (input, units) {
            var inputMs;
            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
            if (units === 'millisecond') {
                input = moment.isMoment(input) ? input : moment(input);
                return +this > +input;
            } else {
                inputMs = moment.isMoment(input) ? +input : +moment(input);
                return inputMs < +this.clone().startOf(units);
            }
        },

        isBefore: function (input, units) {
            var inputMs;
            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
            if (units === 'millisecond') {
                input = moment.isMoment(input) ? input : moment(input);
                return +this < +input;
            } else {
                inputMs = moment.isMoment(input) ? +input : +moment(input);
                return +this.clone().endOf(units) < inputMs;
            }
        },

        isBetween: function (from, to, units) {
            return this.isAfter(from, units) && this.isBefore(to, units);
        },

        isSame: function (input, units) {
            var inputMs;
            units = normalizeUnits(units || 'millisecond');
            if (units === 'millisecond') {
                input = moment.isMoment(input) ? input : moment(input);
                return +this === +input;
            } else {
                inputMs = +moment(input);
                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
            }
        },

        min: deprecate(
                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
                 function (other) {
                     other = moment.apply(null, arguments);
                     return other < this ? this : other;
                 }
         ),

        max: deprecate(
                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
                function (other) {
                    other = moment.apply(null, arguments);
                    return other > this ? this : other;
                }
        ),

        zone : deprecate(
                'moment().zone is deprecated, use moment().utcOffset instead. ' +
                'https://github.com/moment/moment/issues/1779',
                function (input, keepLocalTime) {
                    if (input != null) {
                        if (typeof input !== 'string') {
                            input = -input;
                        }

                        this.utcOffset(input, keepLocalTime);

                        return this;
                    } else {
                        return -this.utcOffset();
                    }
                }
        ),

        // keepLocalTime = true means only change the timezone, without
        // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
        // +0200, so we adjust the time as needed, to be valid.
        //
        // Keeping the time actually adds/subtracts (one hour)
        // from the actual represented time. That is why we call updateOffset
        // a second time. In case it wants us to change the offset again
        // _changeInProgress == true case, then we have to adjust, because
        // there is no such time in the given timezone.
        utcOffset : function (input, keepLocalTime) {
            var offset = this._offset || 0,
                localAdjust;
            if (input != null) {
                if (typeof input === 'string') {
                    input = utcOffsetFromString(input);
                }
                if (Math.abs(input) < 16) {
                    input = input * 60;
                }
                if (!this._isUTC && keepLocalTime) {
                    localAdjust = this._dateUtcOffset();
                }
                this._offset = input;
                this._isUTC = true;
                if (localAdjust != null) {
                    this.add(localAdjust, 'm');
                }
                if (offset !== input) {
                    if (!keepLocalTime || this._changeInProgress) {
                        addOrSubtractDurationFromMoment(this,
                                moment.duration(input - offset, 'm'), 1, false);
                    } else if (!this._changeInProgress) {
                        this._changeInProgress = true;
                        moment.updateOffset(this, true);
                        this._changeInProgress = null;
                    }
                }

                return this;
            } else {
                return this._isUTC ? offset : this._dateUtcOffset();
            }
        },

        isLocal : function () {
            return !this._isUTC;
        },

        isUtcOffset : function () {
            return this._isUTC;
        },

        isUtc : function () {
            return this._isUTC && this._offset === 0;
        },

        zoneAbbr : function () {
            return this._isUTC ? 'UTC' : '';
        },

        zoneName : function () {
            return this._isUTC ? 'Coordinated Universal Time' : '';
        },

        parseZone : function () {
            if (this._tzm) {
                this.utcOffset(this._tzm);
            } else if (typeof this._i === 'string') {
                this.utcOffset(utcOffsetFromString(this._i));
            }
            return this;
        },

        hasAlignedHourOffset : function (input) {
            if (!input) {
                input = 0;
            }
            else {
                input = moment(input).utcOffset();
            }

            return (this.utcOffset() - input) % 60 === 0;
        },

        daysInMonth : function () {
            return daysInMonth(this.year(), this.month());
        },

        dayOfYear : function (input) {
            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
        },

        quarter : function (input) {
            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
        },

        weekYear : function (input) {
            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
            return input == null ? year : this.add((input - year), 'y');
        },

        isoWeekYear : function (input) {
            var year = weekOfYear(this, 1, 4).year;
            return input == null ? year : this.add((input - year), 'y');
        },

        week : function (input) {
            var week = this.localeData().week(this);
            return input == null ? week : this.add((input - week) * 7, 'd');
        },

        isoWeek : function (input) {
            var week = weekOfYear(this, 1, 4).week;
            return input == null ? week : this.add((input - week) * 7, 'd');
        },

        weekday : function (input) {
            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return input == null ? weekday : this.add(input - weekday, 'd');
        },

        isoWeekday : function (input) {
            // behaves the same as moment#day except
            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
            // as a setter, sunday should belong to the previous week.
            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
        },

        isoWeeksInYear : function () {
            return weeksInYear(this.year(), 1, 4);
        },

        weeksInYear : function () {
            var weekInfo = this.localeData()._week;
            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
        },

        get : function (units) {
            units = normalizeUnits(units);
            return this[units]();
        },

        set : function (units, value) {
            var unit;
            if (typeof units === 'object') {
                for (unit in units) {
                    this.set(unit, units[unit]);
                }
            }
            else {
                units = normalizeUnits(units);
                if (typeof this[units] === 'function') {
                    this[units](value);
                }
            }
            return this;
        },

        // If passed a locale key, it will set the locale for this
        // instance.  Otherwise, it will return the locale configuration
        // variables for this instance.
        locale : function (key) {
            var newLocaleData;

            if (key === undefined) {
                return this._locale._abbr;
            } else {
                newLocaleData = moment.localeData(key);
                if (newLocaleData != null) {
                    this._locale = newLocaleData;
                }
                return this;
            }
        },

        lang : deprecate(
            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
            function (key) {
                if (key === undefined) {
                    return this.localeData();
                } else {
                    return this.locale(key);
                }
            }
        ),

        localeData : function () {
            return this._locale;
        },

        _dateUtcOffset : function () {
            // On Firefox.24 Date#getTimezoneOffset returns a floating point.
            // https://github.com/moment/moment/pull/1871
            return -Math.round(this._d.getTimezoneOffset() / 15) * 15;
        }

    });

    function rawMonthSetter(mom, value) {
        var dayOfMonth;

        // TODO: Move this out of here!
        if (typeof value === 'string') {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (typeof value !== 'number') {
                return mom;
            }
        }

        dayOfMonth = Math.min(mom.date(),
                daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function rawGetter(mom, unit) {
        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
    }

    function rawSetter(mom, unit, value) {
        if (unit === 'Month') {
            return rawMonthSetter(mom, value);
        } else {
            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }

    function makeAccessor(unit, keepTime) {
        return function (value) {
            if (value != null) {
                rawSetter(this, unit, value);
                moment.updateOffset(this, keepTime);
                return this;
            } else {
                return rawGetter(this, unit);
            }
        };
    }

    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
    // moment.fn.month is defined separately
    moment.fn.date = makeAccessor('Date', true);
    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));
    moment.fn.year = makeAccessor('FullYear', true);
    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));

    // add plural methods
    moment.fn.days = moment.fn.day;
    moment.fn.months = moment.fn.month;
    moment.fn.weeks = moment.fn.week;
    moment.fn.isoWeeks = moment.fn.isoWeek;
    moment.fn.quarters = moment.fn.quarter;

    // add aliased format methods
    moment.fn.toJSON = moment.fn.toISOString;

    // alias isUtc for dev-friendliness
    moment.fn.isUTC = moment.fn.isUtc;

    /************************************
        Duration Prototype
    ************************************/


    function daysToYears (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        return days * 400 / 146097;
    }

    function yearsToDays (years) {
        // years * 365 + absRound(years / 4) -
        //     absRound(years / 100) + absRound(years / 400);
        return years * 146097 / 400;
    }

    extend(moment.duration.fn = Duration.prototype, {

        _bubble : function () {
            var milliseconds = this._milliseconds,
                days = this._days,
                months = this._months,
                data = this._data,
                seconds, minutes, hours, years = 0;

            // The following code bubbles up values, see the tests for
            // examples of what that means.
            data.milliseconds = milliseconds % 1000;

            seconds = absRound(milliseconds / 1000);
            data.seconds = seconds % 60;

            minutes = absRound(seconds / 60);
            data.minutes = minutes % 60;

            hours = absRound(minutes / 60);
            data.hours = hours % 24;

            days += absRound(hours / 24);

            // Accurately convert days to years, assume start from year 0.
            years = absRound(daysToYears(days));
            days -= absRound(yearsToDays(years));

            // 30 days to a month
            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
            months += absRound(days / 30);
            days %= 30;

            // 12 months -> 1 year
            years += absRound(months / 12);
            months %= 12;

            data.days = days;
            data.months = months;
            data.years = years;
        },

        abs : function () {
            this._milliseconds = Math.abs(this._milliseconds);
            this._days = Math.abs(this._days);
            this._months = Math.abs(this._months);

            this._data.milliseconds = Math.abs(this._data.milliseconds);
            this._data.seconds = Math.abs(this._data.seconds);
            this._data.minutes = Math.abs(this._data.minutes);
            this._data.hours = Math.abs(this._data.hours);
            this._data.months = Math.abs(this._data.months);
            this._data.years = Math.abs(this._data.years);

            return this;
        },

        weeks : function () {
            return absRound(this.days() / 7);
        },

        valueOf : function () {
            return this._milliseconds +
              this._days * 864e5 +
              (this._months % 12) * 2592e6 +
              toInt(this._months / 12) * 31536e6;
        },

        humanize : function (withSuffix) {
            var output = relativeTime(this, !withSuffix, this.localeData());

            if (withSuffix) {
                output = this.localeData().pastFuture(+this, output);
            }

            return this.localeData().postformat(output);
        },

        add : function (input, val) {
            // supports only 2.0-style add(1, 's') or add(moment)
            var dur = moment.duration(input, val);

            this._milliseconds += dur._milliseconds;
            this._days += dur._days;
            this._months += dur._months;

            this._bubble();

            return this;
        },

        subtract : function (input, val) {
            var dur = moment.duration(input, val);

            this._milliseconds -= dur._milliseconds;
            this._days -= dur._days;
            this._months -= dur._months;

            this._bubble();

            return this;
        },

        get : function (units) {
            units = normalizeUnits(units);
            return this[units.toLowerCase() + 's']();
        },

        as : function (units) {
            var days, months;
            units = normalizeUnits(units);

            if (units === 'month' || units === 'year') {
                days = this._days + this._milliseconds / 864e5;
                months = this._months + daysToYears(days) * 12;
                return units === 'month' ? months : months / 12;
            } else {
                // handle milliseconds separately because of floating point math errors (issue #1867)
                days = this._days + Math.round(yearsToDays(this._months / 12));
                switch (units) {
                    case 'week': return days / 7 + this._milliseconds / 6048e5;
                    case 'day': return days + this._milliseconds / 864e5;
                    case 'hour': return days * 24 + this._milliseconds / 36e5;
                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;
                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;
                    // Math.floor prevents floating point math errors here
                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;
                    default: throw new Error('Unknown unit ' + units);
                }
            }
        },

        lang : moment.fn.lang,
        locale : moment.fn.locale,

        toIsoString : deprecate(
            'toIsoString() is deprecated. Please use toISOString() instead ' +
            '(notice the capitals)',
            function () {
                return this.toISOString();
            }
        ),

        toISOString : function () {
            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
            var years = Math.abs(this.years()),
                months = Math.abs(this.months()),
                days = Math.abs(this.days()),
                hours = Math.abs(this.hours()),
                minutes = Math.abs(this.minutes()),
                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);

            if (!this.asSeconds()) {
                // this is the same as C#'s (Noda) and python (isodate)...
                // but not other JS (goog.date)
                return 'P0D';
            }

            return (this.asSeconds() < 0 ? '-' : '') +
                'P' +
                (years ? years + 'Y' : '') +
                (months ? months + 'M' : '') +
                (days ? days + 'D' : '') +
                ((hours || minutes || seconds) ? 'T' : '') +
                (hours ? hours + 'H' : '') +
                (minutes ? minutes + 'M' : '') +
                (seconds ? seconds + 'S' : '');
        },

        localeData : function () {
            return this._locale;
        },

        toJSON : function () {
            return this.toISOString();
        }
    });

    moment.duration.fn.toString = moment.duration.fn.toISOString;

    function makeDurationGetter(name) {
        moment.duration.fn[name] = function () {
            return this._data[name];
        };
    }

    for (i in unitMillisecondFactors) {
        if (hasOwnProp(unitMillisecondFactors, i)) {
            makeDurationGetter(i.toLowerCase());
        }
    }

    moment.duration.fn.asMilliseconds = function () {
        return this.as('ms');
    };
    moment.duration.fn.asSeconds = function () {
        return this.as('s');
    };
    moment.duration.fn.asMinutes = function () {
        return this.as('m');
    };
    moment.duration.fn.asHours = function () {
        return this.as('h');
    };
    moment.duration.fn.asDays = function () {
        return this.as('d');
    };
    moment.duration.fn.asWeeks = function () {
        return this.as('weeks');
    };
    moment.duration.fn.asMonths = function () {
        return this.as('M');
    };
    moment.duration.fn.asYears = function () {
        return this.as('y');
    };

    /************************************
        Default Locale
    ************************************/


    // Set default locale, other locale will inherit from English.
    moment.locale('en', {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    /* EMBED_LOCALES */

    /************************************
        Exposing Moment
    ************************************/

    function makeGlobal(shouldDeprecate) {
        /*global ender:false */
        if (typeof ender !== 'undefined') {
            return;
        }
        oldGlobalMoment = globalScope.moment;
        if (shouldDeprecate) {
            globalScope.moment = deprecate(
                    'Accessing Moment through the global scope is ' +
                    'deprecated, and will be removed in an upcoming ' +
                    'release.',
                    moment);
        } else {
            globalScope.moment = moment;
        }
    }

    // CommonJS module is defined
    if (hasModule) {
        module.exports = moment;
    } else if (typeof define === 'function' && define.amd) {
        define(function (require, exports, module) {
            if (module.config && module.config() && module.config().noGlobal === true) {
                // release the global variable
                globalScope.moment = oldGlobalMoment;
            }

            return moment;
        });
        makeGlobal(true);
    } else {
        makeGlobal();
    }
}).call(this);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],118:[function(require,module,exports){
  /* globals require, module */

/**
   * Module dependencies.
   */

  var pathtoRegexp = require('path-to-regexp');

  /**
   * Module exports.
   */

  module.exports = page;

  /**
   * To work properly with the URL
   * history.location generated polyfill in https://github.com/devote/HTML5-History-API
   */

  var location = window.history.location || window.location;

  /**
   * Perform initial dispatch.
   */

  var dispatch = true;

  /**
   * Base path.
   */

  var base = '';

  /**
   * Running flag.
   */

  var running;

  /**
  * HashBang option
  */

  var hashbang = false;

  /**
   * Previous context, for capturing
   * page exit events.
   */

  var prevContext;

  /**
   * Register `path` with callback `fn()`,
   * or route `path`, or redirection,
   * or `page.start()`.
   *
   *   page(fn);
   *   page('*', fn);
   *   page('/user/:id', load, user);
   *   page('/user/' + user.id, { some: 'thing' });
   *   page('/user/' + user.id);
   *   page('/from', '/to')
   *   page();
   *
   * @param {String|Function} path
   * @param {Function} fn...
   * @api public
   */

  function page(path, fn) {
    // <callback>
    if ('function' === typeof path) {
      return page('*', path);
    }

    // route <path> to <callback ...>
    if ('function' === typeof fn) {
      var route = new Route(path);
      for (var i = 1; i < arguments.length; ++i) {
        page.callbacks.push(route.middleware(arguments[i]));
      }
    // show <path> with [state]
    } else if ('string' == typeof path) {
      'string' === typeof fn
        ? page.redirect(path, fn)
        : page.show(path, fn);
    // start [options]
    } else {
      page.start(path);
    }
  }

  /**
   * Callback functions.
   */

  page.callbacks = [];
  page.exits = [];

  /**
   * Get or set basepath to `path`.
   *
   * @param {String} path
   * @api public
   */

  page.base = function(path){
    if (0 === arguments.length) return base;
    base = path;
  };

  /**
   * Bind with the given `options`.
   *
   * Options:
   *
   *    - `click` bind to click events [true]
   *    - `popstate` bind to popstate [true]
   *    - `dispatch` perform initial dispatch [true]
   *
   * @param {Object} options
   * @api public
   */

  page.start = function(options){
    options = options || {};
    if (running) return;
    running = true;
    if (false === options.dispatch) dispatch = false;
    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);
    if (false !== options.click) window.addEventListener('click', onclick, false);
    if (true === options.hashbang) hashbang = true;
    if (!dispatch) return;
    var url = (hashbang && ~location.hash.indexOf('#!'))
      ? location.hash.substr(2) + location.search
      : location.pathname + location.search + location.hash;
    page.replace(url, null, true, dispatch);
  };

  /**
   * Unbind click and popstate event handlers.
   *
   * @api public
   */

  page.stop = function(){
    if (!running) return;
    running = false;
    window.removeEventListener('click', onclick, false);
    window.removeEventListener('popstate', onpopstate, false);
  };

  /**
   * Show `path` with optional `state` object.
   *
   * @param {String} path
   * @param {Object} state
   * @param {Boolean} dispatch
   * @return {Context}
   * @api public
   */

  page.show = function(path, state, dispatch){
    var ctx = new Context(path, state);
    if (false !== dispatch) page.dispatch(ctx);
    if (false !== ctx.handled) ctx.pushState();
    return ctx;
  };

  /**
   * Register route to redirect from one path to other
   * or just redirect to another route
   *
   * @param {String} from - if param 'to' is undefined redirects to 'from'
   * @param {String} [to]
   * @api public
   */
  page.redirect = function(from, to) {
    // Define route from a path to another
    if ('string' === typeof from && 'string' === typeof to) {
      page(from, function (e) {
        setTimeout(function() {
          page.replace(to);
        },0);
      });
    }

    // Wait for the push state and replace it with another
    if('string' === typeof from && 'undefined' === typeof to) {
      setTimeout(function() {
          page.replace(from);
      },0);
    }
  };

  /**
   * Replace `path` with optional `state` object.
   *
   * @param {String} path
   * @param {Object} state
   * @return {Context}
   * @api public
   */

  page.replace = function(path, state, init, dispatch){
    var ctx = new Context(path, state);
    ctx.init = init;
    ctx.save(); // save before dispatching, which may redirect
    if (false !== dispatch) page.dispatch(ctx);
    return ctx;
  };

  /**
   * Dispatch the given `ctx`.
   *
   * @param {Object} ctx
   * @api private
   */

  page.dispatch = function(ctx){
    var prev = prevContext;
    var i = 0;
    var j = 0;

    prevContext = ctx;

    function nextExit() {
      var fn = page.exits[j++];
      if (!fn) return nextEnter();
      fn(prev, nextExit);
    }

    function nextEnter() {
      var fn = page.callbacks[i++];
      if (!fn) return unhandled(ctx);
      fn(ctx, nextEnter);
    }

    if (prev) {
      nextExit();
    } else {
      nextEnter();
    }
  };

  /**
   * Unhandled `ctx`. When it's not the initial
   * popstate then redirect. If you wish to handle
   * 404s on your own use `page('*', callback)`.
   *
   * @param {Context} ctx
   * @api private
   */

  function unhandled(ctx) {
    if (ctx.handled) return;
    var current;

    if (hashbang) {
      current = base + location.hash.replace('#!','');
    } else {
      current = location.pathname + location.search;
    }

    if (current === ctx.canonicalPath) return;
    page.stop();
    ctx.handled = false;
    location.href = ctx.canonicalPath;
  }

  /**
   * Register an exit route on `path` with
   * callback `fn()`, which will be called
   * on the previous context when a new
   * page is visited.
   */
  page.exit = function(path, fn) {
    if (typeof path == 'function') {
      return page.exit('*', path);
    };

    var route = new Route(path);
    for (var i = 1; i < arguments.length; ++i) {
      page.exits.push(route.middleware(arguments[i]));
    }
  };

  /**
  * Remove URL encoding from the given `str`.
  * Accommodates whitespace in both x-www-form-urlencoded
  * and regular percent-encoded form.
  *
  * @param {str} URL component to decode
  */
  function decodeURLEncodedURIComponent(str) {
    return decodeURIComponent(str.replace(/\+/g, ' '));
  }

  /**
   * Initialize a new "request" `Context`
   * with the given `path` and optional initial `state`.
   *
   * @param {String} path
   * @param {Object} state
   * @api public
   */

  function Context(path, state) {
    path = decodeURLEncodedURIComponent(path);
    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + path;
    var i = path.indexOf('?');

    this.canonicalPath = path;
    this.path = path.replace(base, '') || '/';

    this.title = document.title;
    this.state = state || {};
    this.state.path = path;
    this.querystring = ~i
      ? path.slice(i + 1)
      : '';
    this.pathname = ~i
      ? path.slice(0, i)
      : path;
    this.params = [];

    // fragment
    this.hash = '';
    if (!~this.path.indexOf('#')) return;
    var parts = this.path.split('#');
    this.path = parts[0];
    this.hash = parts[1] || '';
    this.querystring = this.querystring.split('#')[0];
  }

  /**
   * Expose `Context`.
   */

  page.Context = Context;

  /**
   * Push state.
   *
   * @api private
   */

  Context.prototype.pushState = function(){
    history.pushState(this.state
      , this.title
      , hashbang && this.path !== '/'
        ? '#!' + this.path
        : this.canonicalPath);
  };

  /**
   * Save the context state.
   *
   * @api public
   */

  Context.prototype.save = function(){
    history.replaceState(this.state
      , this.title
      , hashbang && this.path !== '/'
        ? '#!' + this.path
        : this.canonicalPath);
  };

  /**
   * Initialize `Route` with the given HTTP `path`,
   * and an array of `callbacks` and `options`.
   *
   * Options:
   *
   *   - `sensitive`    enable case-sensitive routes
   *   - `strict`       enable strict matching for trailing slashes
   *
   * @param {String} path
   * @param {Object} options.
   * @api private
   */

  function Route(path, options) {
    options = options || {};
    this.path = (path === '*') ? '(.*)' : path;
    this.method = 'GET';
    this.regexp = pathtoRegexp(this.path,
      this.keys = [],
      options.sensitive,
      options.strict);
  }

  /**
   * Expose `Route`.
   */

  page.Route = Route;

  /**
   * Return route middleware with
   * the given callback `fn()`.
   *
   * @param {Function} fn
   * @return {Function}
   * @api public
   */

  Route.prototype.middleware = function(fn){
    var self = this;
    return function(ctx, next){
      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
      next();
    };
  };

  /**
   * Check if this route matches `path`, if so
   * populate `params`.
   *
   * @param {String} path
   * @param {Array} params
   * @return {Boolean}
   * @api private
   */

  Route.prototype.match = function(path, params){
    var keys = this.keys,
        qsIndex = path.indexOf('?'),
        pathname = ~qsIndex
          ? path.slice(0, qsIndex)
          : path,
        m = this.regexp.exec(decodeURIComponent(pathname));

    if (!m) return false;

    for (var i = 1, len = m.length; i < len; ++i) {
      var key = keys[i - 1];

      var val = 'string' === typeof m[i]
        ? decodeURIComponent(m[i])
        : m[i];

      if (key) {
        params[key.name] = undefined !== params[key.name]
          ? params[key.name]
          : val;
      } else {
        params.push(val);
      }
    }

    return true;
  };

  /**
   * Handle "populate" events.
   */

  function onpopstate(e) {
    if (e.state) {
      var path = e.state.path;
      page.replace(path, e.state);
    }
  }

  /**
   * Handle "click" events.
   */

  function onclick(e) {
    if (1 != which(e)) return;
    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
    if (e.defaultPrevented) return;

    // ensure link
    var el = e.target;
    while (el && 'A' != el.nodeName) el = el.parentNode;
    if (!el || 'A' != el.nodeName) return;

    // Ignore if tag has a "download" attribute
    if (el.getAttribute("download")) return;

    // ensure non-hash for the same path
    var link = el.getAttribute('href');
    if (el.pathname === location.pathname && (el.hash || '#' === link)) return;

    // Check for mailto: in the href
    if (link && link.indexOf("mailto:") > -1) return;

    // check target
    if (el.target) return;

    // x-origin
    if (!sameOrigin(el.href)) return;

    // rebuild path
    var path = el.pathname + el.search + (el.hash || '');

    // same page
    var orig = path;

    path = path.replace(base, '');

    if (base && orig === path) return;

    e.preventDefault();
    page.show(orig);
  }

  /**
   * Event button.
   */

  function which(e) {
    e = e || window.event;
    return null === e.which
      ? e.button
      : e.which;
  }

  /**
   * Check if `href` is the same origin.
   */

  function sameOrigin(href) {
    var origin = location.protocol + '//' + location.hostname;
    if (location.port) origin += ':' + location.port;
    return (href && (0 === href.indexOf(origin)));
  }

  page.sameOrigin = sameOrigin;

},{"path-to-regexp":119}],119:[function(require,module,exports){
var isArray = require('isarray');

/**
 * Expose `pathToRegexp`.
 */
module.exports = pathToRegexp;

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */
var PATH_REGEXP = new RegExp([
  // Match escaped characters that would otherwise appear in future matches.
  // This allows the user to escape special characters that won't transform.
  '(\\\\.)',
  // Match Express-style parameters and un-named parameters with a prefix
  // and optional suffixes. Matches appear as:
  //
  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?"]
  // "/route(\\d+)" => [undefined, undefined, undefined, "\d+", undefined]
  '([\\/.])?(?:\\:(\\w+)(?:\\(((?:\\\\.|[^)])*)\\))?|\\(((?:\\\\.|[^)])*)\\))([+*?])?',
  // Match regexp special characters that are always escaped.
  '([.+*?=^!:${}()[\\]|\\/])'
].join('|'), 'g');

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {String} group
 * @return {String}
 */
function escapeGroup (group) {
  return group.replace(/([=!:$\/()])/g, '\\$1');
}

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {RegExp} re
 * @param  {Array}  keys
 * @return {RegExp}
 */
function attachKeys (re, keys) {
  re.keys = keys;
  return re;
}

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {String}
 */
function flags (options) {
  return options.sensitive ? '' : 'i';
}

/**
 * Pull out keys from a regexp.
 *
 * @param  {RegExp} path
 * @param  {Array}  keys
 * @return {RegExp}
 */
function regexpToRegexp (path, keys) {
  // Use a negative lookahead to match only capturing groups.
  var groups = path.source.match(/\((?!\?)/g);

  if (groups) {
    for (var i = 0; i < groups.length; i++) {
      keys.push({
        name:      i,
        delimiter: null,
        optional:  false,
        repeat:    false
      });
    }
  }

  return attachKeys(path, keys);
}

/**
 * Transform an array into a regexp.
 *
 * @param  {Array}  path
 * @param  {Array}  keys
 * @param  {Object} options
 * @return {RegExp}
 */
function arrayToRegexp (path, keys, options) {
  var parts = [];

  for (var i = 0; i < path.length; i++) {
    parts.push(pathToRegexp(path[i], keys, options).source);
  }

  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));
  return attachKeys(regexp, keys);
}

/**
 * Replace the specific tags with regexp strings.
 *
 * @param  {String} path
 * @param  {Array}  keys
 * @return {String}
 */
function replacePath (path, keys) {
  var index = 0;

  function replace (_, escaped, prefix, key, capture, group, suffix, escape) {
    if (escaped) {
      return escaped;
    }

    if (escape) {
      return '\\' + escape;
    }

    var repeat   = suffix === '+' || suffix === '*';
    var optional = suffix === '?' || suffix === '*';

    keys.push({
      name:      key || index++,
      delimiter: prefix || '/',
      optional:  optional,
      repeat:    repeat
    });

    prefix = prefix ? ('\\' + prefix) : '';
    capture = escapeGroup(capture || group || '[^' + (prefix || '\\/') + ']+?');

    if (repeat) {
      capture = capture + '(?:' + prefix + capture + ')*';
    }

    if (optional) {
      return '(?:' + prefix + '(' + capture + '))?';
    }

    // Basic parameter support.
    return prefix + '(' + capture + ')';
  }

  return path.replace(PATH_REGEXP, replace);
}

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(String|RegExp|Array)} path
 * @param  {Array}                 [keys]
 * @param  {Object}                [options]
 * @return {RegExp}
 */
function pathToRegexp (path, keys, options) {
  keys = keys || [];

  if (!isArray(keys)) {
    options = keys;
    keys = [];
  } else if (!options) {
    options = {};
  }

  if (path instanceof RegExp) {
    return regexpToRegexp(path, keys, options);
  }

  if (isArray(path)) {
    return arrayToRegexp(path, keys, options);
  }

  var strict = options.strict;
  var end = options.end !== false;
  var route = replacePath(path, keys);
  var endsWithSlash = path.charAt(path.length - 1) === '/';

  // In non-strict mode we allow a slash at the end of match. If the path to
  // match already ends with a slash, we remove it for consistency. The slash
  // is valid at the end of a path match, not in the middle. This is important
  // in non-ending mode, where "/test/" shouldn't match "/test//route".
  if (!strict) {
    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\/(?=$))?';
  }

  if (end) {
    route += '$';
  } else {
    // In non-ending mode, we need the capturing groups to match as much as
    // possible by using a positive lookahead to the end or next path segment.
    route += strict && endsWithSlash ? '' : '(?=\\/|$)';
  }

  return attachKeys(new RegExp('^' + route, flags(options)), keys);
}

},{"isarray":120}],120:[function(require,module,exports){
module.exports = Array.isArray || function (arr) {
  return Object.prototype.toString.call(arr) == '[object Array]';
};

},{}],121:[function(require,module,exports){
/**!
 * Sortable
 * @author	RubaXa   <trash@rubaxa.org>
 * @license MIT
 */


(function (factory){
	"use strict";

	if( typeof define === "function" && define.amd ){
		define(factory);
	}
	else if( typeof module != "undefined" && typeof module.exports != "undefined" ){
		module.exports = factory();
	}
	else if( typeof Package !== "undefined" ){
		Sortable = factory();  // export for Meteor.js
	}
	else {
		window["Sortable"] = factory();
	}
})(function (){
	"use strict";

	var
		  dragEl
		, ghostEl
		, rootEl
		, nextEl

		, lastEl
		, lastCSS
		, lastRect

		, activeGroup

		, tapEvt
		, touchEvt

		, scrollInterval

		, expando = 'Sortable' + (new Date).getTime()

		, win = window
		, document = win.document
		, parseInt = win.parseInt
		, supportIEdnd = !!document.createElement('div').dragDrop

		, _silent = false

		, _createEvent = function (event/**String*/, item/**HTMLElement*/){
			var evt = document.createEvent('Event');
			evt.initEvent(event, true, true);
			evt.item = item;
			return evt;
		}

		, _dispatchEvent = function (rootEl, name, targetEl) {
			rootEl.dispatchEvent(_createEvent(name, targetEl || rootEl));
		}

		, _customEvents = 'onAdd onUpdate onRemove onStart onEnd onFilter'.split(' ')

		, noop = function (){}
		, slice = [].slice

		, touchDragOverListeners = []


	;

	/**
	 * @class  Sortable
	 * @param  {HTMLElement}  el
	 * @param  {Object}       [options]
	 */
	function Sortable(el, options){
		this.el = el; // root element
		this.options = options = (options || {});


		// Defaults
		var defaults = {
			group: Math.random(),
			store: null,
			handle: null,
			draggable: el.children[0] && el.children[0].nodeName || (/[uo]l/i.test(el.nodeName) ? 'li' : '*'),
			ghostClass: 'sortable-ghost',
			ignore: 'a, img',
			filter: null,
			scroll: true,
			scrollBuffer: 50,
			scrollSpeed: 10
		};

		// Set default options
		for (var name in defaults) {
			options[name] = options[name] || defaults[name];
		}


		// Define events
		_customEvents.forEach(function (name) {
			options[name] = _bind(this, options[name] || noop);
			_on(el, name.substr(2).toLowerCase(), options[name]);
		}, this);


		// Export group name
		el[expando] = options.group;


		// Bind all private methods
		for( var fn in this ){
			if( fn.charAt(0) === '_' ){
				this[fn] = _bind(this, this[fn]);
			}
		}


		// Bind events
		_on(el, 'mousedown', this._onTapStart);
		_on(el, 'touchstart', this._onTapStart);
		supportIEdnd && _on(el, 'selectstart', this._onTapStart);

		_on(el, 'drag', this._onDrag);
		_on(el, 'dragover', this._onDragOver);
		_on(el, 'dragenter', this._onDragOver);

		touchDragOverListeners.push(this._onDragOver);

		// Restore sorting
		options.store && this.sort(options.store.get(this));
	}


	Sortable.prototype = /** @lends Sortable.prototype */ {
		constructor: Sortable,


		_applyEffects: function (){
			_toggleClass(dragEl, this.options.ghostClass, true);
		},


		_onTapStart: function (evt/**Event|TouchEvent*/){
			var
				  touch = evt.touches && evt.touches[0]
				, target = (touch || evt).target
				, options =  this.options
				, el = this.el
				, filter = options.filter
			;

			if( evt.type === 'mousedown' && evt.button !== 0 ) {
				return; // only left button
			}

			// Check filter
			if( typeof filter === 'function' ){
				if( filter.call(this, target, this) ){
					_dispatchEvent(el, 'filter', target);
					return; // cancel dnd
				}
			}
			else if( filter ){
				filter = filter.split(',').filter(function (criteria) {
					return _closest(target, criteria.trim(), el);
				});

				if (filter.length) {
					_dispatchEvent(el, 'filter', target);
					return; // cancel dnd
				}
			}

			if( options.handle ){
				target = _closest(target, options.handle, el);
			}

			target = _closest(target, options.draggable, el);

			// IE 9 Support
			if( target && evt.type == 'selectstart' ){
				if( target.tagName != 'A' && target.tagName != 'IMG'){
					target.dragDrop();
				}
			}

			if( target && !dragEl && (target.parentNode === el) ){
				tapEvt = evt;

				rootEl = this.el;
				dragEl = target;
				nextEl = dragEl.nextSibling;
				activeGroup = this.options.group;

				dragEl.draggable = true;

				// Disable "draggable"
				options.ignore.split(',').forEach(function (criteria) {
					_find(target, criteria.trim(), _disableDraggable);
				});

				if( touch ){
					// Touch device support
					tapEvt = {
						  target:  target
						, clientX: touch.clientX
						, clientY: touch.clientY
					};

					this._onDragStart(tapEvt, true);
					evt.preventDefault();
				}

				_on(document, 'mouseup', this._onDrop);
				_on(document, 'touchend', this._onDrop);
				_on(document, 'touchcancel', this._onDrop);

				_on(this.el, 'dragstart', this._onDragStart);
				_on(this.el, 'dragend', this._onDrop);
				_on(document, 'dragover', _globalDragOver);


				try {
					if( document.selection ){
						document.selection.empty();
					} else {
						window.getSelection().removeAllRanges()
					}
				} catch (err){ }


				_dispatchEvent(dragEl, 'start');
			}
		},

		_emulateDragOver: function (){
			if( touchEvt ){
				_css(ghostEl, 'display', 'none');

				var
					  target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY)
					, parent = target
					, group = this.options.group
					, i = touchDragOverListeners.length
				;

				if( parent ){
					do {
						if( parent[expando] === group ){
							while( i-- ){
								touchDragOverListeners[i]({
									clientX: touchEvt.clientX,
									clientY: touchEvt.clientY,
									target: target,
									rootEl: parent
								});
							}
							break;
						}

						target = parent; // store last element
					}
					while( parent = parent.parentNode );
				}

				_css(ghostEl, 'display', '');
			}
		},

		_scroll: function (y) {
			var   scrollEl = this.options.scroll
				, buffer = this.options.scrollBuffer
				, speed = this.options.scrollSpeed
				, scroll;

			if (y === 0) return;

			if (y > window.innerHeight - buffer) {
				scroll = 1;
			} else if (y < buffer) {
				scroll = -1;
			}

			clearInterval(scrollInterval);
			if (scroll) {
				if (scrollEl === true) {
					scrollInterval = setInterval(function() {
						window.scrollTo(window.scrollX, window.scrollY + (speed * scroll));
					}, 10);
				} else if (scrollEl) {
					scrollInterval = setInterval(function() {
						scrollEl.scrollTop += speed * scroll;
					}, 10);
				}
				
			}
		},

		_onDrag: function (evt) {
			this._scroll.call(this, evt.clientY);
		},

		_onTouchMove: function (evt/**TouchEvent*/){
			if( tapEvt ){
				var
					  touch = evt.touches[0]
					, dx = touch.clientX - tapEvt.clientX
					, dy = touch.clientY - tapEvt.clientY
					, translate3d = 'translate3d(' + dx + 'px,' + dy + 'px,0)'
				;

				touchEvt = touch;

				_css(ghostEl, 'webkitTransform', translate3d);
				_css(ghostEl, 'mozTransform', translate3d);
				_css(ghostEl, 'msTransform', translate3d);
				_css(ghostEl, 'transform', translate3d);

				this._scroll.call(this, touchEvt.clientY);

				evt.preventDefault();
			}
		},


		_onDragStart: function (evt/**Event*/, isTouch/**Boolean*/){
			var dataTransfer = evt.dataTransfer;

			this._offUpEvents();

			if( isTouch ){
				var
					  rect = dragEl.getBoundingClientRect()
					, css = _css(dragEl)
					, ghostRect
				;

				ghostEl = dragEl.cloneNode(true);

				_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));
				_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));
				_css(ghostEl, 'width', rect.width);
				_css(ghostEl, 'height', rect.height);
				_css(ghostEl, 'opacity', '0.8');
				_css(ghostEl, 'position', 'fixed');
				_css(ghostEl, 'zIndex', '100000');

				rootEl.appendChild(ghostEl);

				// Fixing dimensions.
				ghostRect = ghostEl.getBoundingClientRect();
				_css(ghostEl, 'width', rect.width*2 - ghostRect.width);
				_css(ghostEl, 'height', rect.height*2 - ghostRect.height);

				// Bind touch events
				_on(document, 'touchmove', this._onTouchMove);
				_on(document, 'touchend', this._onDrop);
				_on(document, 'touchcancel', this._onDrop);

				this._loopId = setInterval(this._emulateDragOver, 150);
			}
			else {
				dataTransfer.effectAllowed = 'move';
				dataTransfer.setData('Text', dragEl.textContent);

				_on(document, 'drop', this._onDrop);
			}

			setTimeout(this._applyEffects);
		},


		_onDragOver: function (evt/**Event*/){
			if( !_silent && (activeGroup === this.options.group) && (evt.rootEl === void 0 || evt.rootEl === this.el) ){
				var
					  el = this.el
					, target = _closest(evt.target, this.options.draggable, el)
				;

				if( el.children.length === 0 || el.children[0] === ghostEl || (el === evt.target) && _ghostInBottom(el, evt) ){
					el.appendChild(dragEl);
				}
				else if( target && target !== dragEl && (target.parentNode[expando] !== void 0) ){
					if( lastEl !== target ){
						lastEl = target;
						lastCSS = _css(target);
						lastRect = target.getBoundingClientRect();
					}


					var
						  rect = lastRect
						, width = rect.right - rect.left
						, height = rect.bottom - rect.top
						, floating = /left|right|inline/.test(lastCSS.cssFloat + lastCSS.display)
						, isWide = (target.offsetWidth > dragEl.offsetWidth)
						, isLong = (target.offsetHeight > dragEl.offsetHeight)
						, halfway = (floating ? (evt.clientX - rect.left)/width : (evt.clientY - rect.top)/height) > .5
						, nextSibling = target.nextElementSibling
						, after
					;

					_silent = true;
					setTimeout(_unsilent, 30);

					if( floating ){
						after = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide
					} else {
						after = (nextSibling !== dragEl) && !isLong || halfway && isLong;
					}

					if( after && !nextSibling ){
						el.appendChild(dragEl);
					} else {
						target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
					}
				}
			}
		},

		_offUpEvents: function () {
			_off(document, 'mouseup', this._onDrop);
			_off(document, 'touchmove', this._onTouchMove);
			_off(document, 'touchend', this._onDrop);
			_off(document, 'touchcancel', this._onDrop);
		},

		_onDrop: function (evt/**Event*/){
			clearInterval(this._loopId);
			clearInterval(scrollInterval);

			// Unbind events
			_off(document, 'drop', this._onDrop);
			_off(document, 'dragover', _globalDragOver);

			_off(this.el, 'dragend', this._onDrop);
			_off(this.el, 'dragstart', this._onDragStart);
			_off(this.el, 'selectstart', this._onTapStart);

			this._offUpEvents();

			if( evt ){
				evt.preventDefault();
				evt.stopPropagation();

				if( ghostEl ){
					ghostEl.parentNode.removeChild(ghostEl);
				}

				if( dragEl ){
					_disableDraggable(dragEl);
					_toggleClass(dragEl, this.options.ghostClass, false);

					if( !rootEl.contains(dragEl) ){
						// Remove event
						_dispatchEvent(rootEl, 'remove', dragEl);

						// Add event
						_dispatchEvent(dragEl, 'add');
					}
					else if( dragEl.nextSibling !== nextEl ){
						// Update event
						_dispatchEvent(dragEl, 'update');
					}

					_dispatchEvent(dragEl, 'end');
				}

				// Set NULL
				rootEl =
				dragEl =
				ghostEl =
				nextEl =

				tapEvt =
				touchEvt =

				lastEl =
				lastCSS =

				activeGroup = null;

				// Save sorting
				this.options.store && this.options.store.set(this);
			}
		},


		/**
		 * Serializes the item into an array of string.
		 * @returns {String[]}
		 */
		toArray: function () {
			var order = [],
				el,
				children = this.el.children,
				i = 0,
				n = children.length
			;

			for (; i < n; i++) {
				el = children[i];
				if (_closest(el, this.options.draggable, this.el)) {
					order.push(el.getAttribute('data-id') || _generateId(el));
				}
			}

			return order;
		},


		/**
		 * Sorts the elements according to the array.
		 * @param  {String[]}  order  order of the items
		 */
		sort: function (order) {
			var items = {}, rootEl = this.el;

			this.toArray().forEach(function (id, i) {
				var el = rootEl.children[i];

				if (_closest(el, this.options.draggable, rootEl)) {
					items[id] = el;
				}
			}, this);


			order.forEach(function (id) {
				if (items[id]) {
					rootEl.removeChild(items[id]);
					rootEl.appendChild(items[id]);
				}
			});
		},


		/**
		 * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
		 * @param   {HTMLElement}  el
		 * @param   {String}       [selector]  default: `options.draggable`
		 * @returns {HTMLElement|null}
		 */
		closest: function (el, selector) {
			return _closest(el, selector || this.options.draggable, this.el);
		},


		/**
		 * Destroy
		 */
		destroy: function () {
			var el = this.el, options = this.options;

			_customEvents.forEach(function (name) {
				_off(el, name.substr(2).toLowerCase(), options[name]);
			});

			_off(el, 'mousedown', this._onTapStart);
			_off(el, 'touchstart', this._onTapStart);
			_off(el, 'selectstart', this._onTapStart);

			_off(el, 'dragover', this._onDragOver);
			_off(el, 'dragenter', this._onDragOver);

			//remove draggable attributes
			Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function(el) {
				el.removeAttribute('draggable');
			});

			touchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);

			this._onDrop();

			this.el = null;
		}
	};


	function _bind(ctx, fn){
		var args = slice.call(arguments, 2);
		return	fn.bind ? fn.bind.apply(fn, [ctx].concat(args)) : function (){
			return fn.apply(ctx, args.concat(slice.call(arguments)));
		};
	}


	function _closest(el, selector, ctx){
		if( selector === '*' ){
			return el;
		}
		else if( el ){
			ctx = ctx || document;
			selector = selector.split('.');

			var
				  tag = selector.shift().toUpperCase()
				, re = new RegExp('\\s('+selector.join('|')+')\\s', 'g')
			;

			do {
				if(
					   (tag === '' || el.nodeName == tag)
					&& (!selector.length || ((' '+el.className+' ').match(re) || []).length == selector.length)
				){
					return	el;
				}
			}
			while( el !== ctx && (el = el.parentNode) );
		}

		return	null;
	}


	function _globalDragOver(evt){
		evt.dataTransfer.dropEffect = 'move';
		evt.preventDefault();
	}


	function _on(el, event, fn){
		el.addEventListener(event, fn, false);
	}


	function _off(el, event, fn){
		el.removeEventListener(event, fn, false);
	}


	function _toggleClass(el, name, state){
		if( el ){
			if( el.classList ){
				el.classList[state ? 'add' : 'remove'](name);
			}
			else {
				var className = (' '+el.className+' ').replace(/\s+/g, ' ').replace(' '+name+' ', '');
				el.className = className + (state ? ' '+name : '')
			}
		}
	}


	function _css(el, prop, val){
		if( el && el.style ){
			if( val === void 0 ){
				if( document.defaultView && document.defaultView.getComputedStyle ){
					val = document.defaultView.getComputedStyle(el, '');
				}
				else if( el.currentStyle ){
					val	= el.currentStyle;
				}
				return	prop === void 0 ? val : val[prop];
			} else {
				el.style[prop] = val + (typeof val === 'string' ? '' : 'px');
			}
		}
	}


	function _find(ctx, tagName, iterator){
		if( ctx ){
			var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;
			if( iterator ){
				for( ; i < n; i++ ){
					iterator(list[i], i);
				}
			}
			return	list;
		}
		return	[];
	}


	function _disableDraggable(el){
		return el.draggable = false;
	}


	function _unsilent(){
		_silent = false;
	}


	function _ghostInBottom(el, evt){
		var last = el.lastElementChild.getBoundingClientRect();
		return evt.clientY - (last.top + last.height) > 5; // min delta
	}


	/**
	 * Generate id
	 * @param   {HTMLElement} el
	 * @returns {String}
	 * @private
	 */
	function _generateId(el) {
		var str = el.tagName + el.className + el.src + el.href + el.textContent,
			i = str.length,
			sum = 0
		;

		while (i--) {
			sum += str.charCodeAt(i);
		}

		return sum.toString(36);
	}


	// Export utils
	Sortable.utils = {
		on: _on,
		off: _off,
		css: _css,
		find: _find,
		bind: _bind,
		closest: _closest,
		toggleClass: _toggleClass,
		createEvent: _createEvent,
		dispatchEvent: _dispatchEvent
	};


	Sortable.version = '0.5.2';


	// Export
	return Sortable;
});

},{}],122:[function(require,module,exports){
(function (global){
var parse = require('esprima').parse
var hoist = require('hoister')

var InfiniteChecker = require('./lib/infinite-checker')
var Primitives = require('./lib/primitives')

module.exports = safeEval
module.exports.eval = safeEval
module.exports.FunctionFactory = FunctionFactory
module.exports.Function = FunctionFactory()

var maxIterations = 1000000

// 'eval' with a controlled environment
function safeEval(src, parentContext){
  var tree = prepareAst(src)
  var context = Object.create(parentContext || {})
  return finalValue(evaluateAst(tree, context))
}

// create a 'Function' constructor for a controlled environment
function FunctionFactory(parentContext){
  var context = Object.create(parentContext || {})
  return function Function() {
    // normalize arguments array
    var args = Array.prototype.slice.call(arguments)
    var src = args.slice(-1)[0]
    args = args.slice(0,-1)
    if (typeof src === 'string'){
      //HACK: esprima doesn't like returns outside functions
      src = parse('function a(){' + src + '}').body[0].body
    }
    var tree = prepareAst(src)
    return getFunction(tree, args, context)
  }
}

// takes an AST or js source and returns an AST
function prepareAst(src){
  var tree = (typeof src === 'string') ? parse(src) : src
  return hoist(tree)
}

// evaluate an AST in the given context
function evaluateAst(tree, context){

  var safeFunction = FunctionFactory(context)
  var primitives = Primitives(context)

  // block scoped context for catch (ex) and 'let'
  var blockContext = context

  return walk(tree)

  // recursively walk every node in an array
  function walkAll(nodes){
    var result = null
    for (var i=0;i<nodes.length;i++){
      var childNode = nodes[i]
      if (childNode.type === 'EmptyStatement') continue
      result = walk(childNode)
      if (result instanceof ReturnValue){
        return result
      }
    }
    return result
  }

  // recursively evalutate the node of an AST
  function walk(node){
    if (!node) return
    switch (node.type) {

      case 'Program':
        return walkAll(node.body)

      case 'BlockStatement':
        enterBlock()
        var result = walkAll(node.body)
        leaveBlock()
        return result

      case 'FunctionDeclaration':
        var params = node.params.map(getName)
        var value = getFunction(node.body, params, blockContext)
        return context[node.id.name] = value

      case 'FunctionExpression':
        var params = node.params.map(getName)
        return getFunction(node.body, params, blockContext)

      case 'ReturnStatement':
        var value = walk(node.argument)
        return new ReturnValue('return', value)

      case 'BreakStatement':
        return new ReturnValue('break')

      case 'ContinueStatement':
        return new ReturnValue('continue')

      case 'ExpressionStatement':
        return walk(node.expression)

      case 'AssignmentExpression':
        return setValue(blockContext, node.left, node.right, node.operator)

      case 'UpdateExpression':
        return setValue(blockContext, node.argument, null, node.operator)

      case 'VariableDeclaration':
        node.declarations.forEach(function(declaration){
          var target = node.kind === 'let' ? blockContext : context
          if (declaration.init){
            target[declaration.id.name] = walk(declaration.init)
          } else {
            target[declaration.id.name] = undefined
          }
        })
        break

      case 'SwitchStatement':
        var defaultHandler = null
        var matched = false
        var value = walk(node.discriminant)
        var result = undefined

        enterBlock()

        var i = 0
        while (result == null){
          if (i<node.cases.length){
            if (node.cases[i].test){ // check or fall through
              matched = matched || (walk(node.cases[i].test) === value)
            } else if (defaultHandler == null) {
              defaultHandler = i
            }
            if (matched){
              var r = walkAll(node.cases[i].consequent)
              if (r instanceof ReturnValue){ // break out
                if (r.type == 'break') break
                result = r
              }
            }
            i += 1 // continue
          } else if (!matched && defaultHandler != null){
            // go back and do the default handler
            i = defaultHandler
            matched = true
          } else {
            // nothing we can do
            break
          }
        }

        leaveBlock()
        return result

      case 'IfStatement':
        if (walk(node.test)){
          return walk(node.consequent)
        } else if (node.alternate) {
          return walk(node.alternate)
        }

      case 'ForStatement':
        var infinite = InfiniteChecker(maxIterations)
        var result = undefined

        enterBlock() // allow lets on delarations
        for (walk(node.init); walk(node.test); walk(node.update)){
          var r = walk(node.body)

          // handle early return, continue and break
          if (r instanceof ReturnValue){
            if (r.type == 'continue') continue
            if (r.type == 'break') break
            result = r
            break
          }

          infinite.check()
        }
        leaveBlock()
        return result

      case 'ForInStatement':
        var infinite = InfiniteChecker(maxIterations)
        var result = undefined

        var value = walk(node.right)
        var property = node.left

        var target = context
        enterBlock()

        if (property.type == 'VariableDeclaration'){
          walk(property)
          property = property.declarations[0].id
          if (property.kind === 'let'){
            target = blockContext
          }
        }

        for (var key in value){
          setValue(target, property, {type: 'Literal', value: key})
          var r = walk(node.body)

          // handle early return, continue and break
          if (r instanceof ReturnValue){
            if (r.type == 'continue') continue
            if (r.type == 'break') break
            result = r
            break
          }

          infinite.check()
        }
        leaveBlock()

        return result

      case 'WhileStatement':
        var infinite = InfiniteChecker(maxIterations)
        while (walk(node.test)){
          walk(node.body)
          infinite.check()
        }
        break

      case 'TryStatement':
        try {
          walk(node.block)
        } catch (error) {
          enterBlock()
          var catchClause = node.handlers[0]
          if (catchClause) {
            blockContext[catchClause.param.name] = error
            walk(catchClause.body)
          }
          leaveBlock()
        } finally {
          if (node.finalizer) {
            walk(node.finalizer)
          }
        }
        break

      case 'Literal':
        return node.value

      case 'UnaryExpression':
        var val = walk(node.argument)
        switch(node.operator) {
          case '+': return +val
          case '-': return -val
          case '~': return ~val
          case '!': return !val
          case 'typeof': return typeof val
          default: return unsupportedExpression(node)
        }

      case 'ArrayExpression':
        var obj = blockContext['Array']()
        for (var i=0;i<node.elements.length;i++){
          obj.push(walk(node.elements[i]))
        }
        return obj

      case 'ObjectExpression':
        var obj = blockContext['Object']()
        for (var i = 0; i < node.properties.length; i++) {
          var prop = node.properties[i]
          var value = (prop.value === null) ? prop.value : walk(prop.value)
          obj[prop.key.value || prop.key.name] = value
        }
        return obj

      case 'NewExpression':
        var args = node.arguments.map(function(arg){
          return walk(arg)
        })
        var target = walk(node.callee)
        return primitives.applyNew(target, args)


      case 'BinaryExpression':
        var l = walk(node.left)
        var r = walk(node.right)
        switch(node.operator) {
          case '==':  return l === r
          case '===': return l === r
          case '!=':  return l != r
          case '!==': return l !== r
          case '+':   return l + r
          case '-':   return l - r
          case '*':   return l * r
          case '/':   return l / r
          case '%':   return l % r
          case '<':   return l < r
          case '<=':  return l <= r
          case '>':   return l > r
          case '>=':  return l >= r
          case '|':   return l | r
          case '&':   return l & r
          case '^':   return l ^ r
          case 'instanceof': return l instanceof r
          default: return unsupportedExpression(node)
        }

      case 'LogicalExpression':
        switch(node.operator) {
          case '&&':  return walk(node.left) && walk(node.right)
          case '||':  return walk(node.left) || walk(node.right)
          default: return unsupportedExpression(node)
        }

      case 'ThisExpression':
        return blockContext['this']

      case 'Identifier':
        if (node.name === 'undefined'){
          return undefined
        } else if (hasProperty(blockContext, node.name, primitives)){
          return finalValue(blockContext[node.name])
        } else {
          throw new ReferenceError(node.name + ' is not defined')
        }

      case 'CallExpression':
        var args = node.arguments.map(function(arg){
          return walk(arg)
        })
        var object = null
        var target = walk(node.callee)

        if (node.callee.type === 'MemberExpression'){
          object = walk(node.callee.object)
        }
        return target.apply(object, args)

      case 'MemberExpression':
        var obj = walk(node.object)
        if (node.computed){
          var prop = walk(node.property)
        } else {
          var prop = node.property.name
        }
        obj = primitives.getPropertyObject(obj, prop)
        return checkValue(obj[prop]);

      case 'ConditionalExpression':
        var val = walk(node.test)
        return val ? walk(node.consequent) : walk(node.alternate)

      default:
        return unsupportedExpression(node)
    }
  }

  // safely retrieve a value
  function checkValue(value){
    if (value === Function){
      value = safeFunction
    }
    return finalValue(value)
  }

  // block scope context control
  function enterBlock(){
    blockContext = Object.create(blockContext)
  }
  function leaveBlock(){
    blockContext = Object.getPrototypeOf(blockContext)
  }

  // set a value in the specified context if allowed
  function setValue(object, left, right, operator){
    var name = null

    if (left.type === 'Identifier'){
      name = left.name
      // handle parent context shadowing
      object = objectForKey(object, name, primitives)
    } else if (left.type === 'MemberExpression'){
      if (left.computed){
        name = walk(left.property)
      } else {
        name = left.property.name
      }
      object = walk(left.object)
    }

    // stop built in properties from being able to be changed
    if (canSetProperty(object, name, primitives)){
      switch(operator) {
        case undefined: return object[name] = walk(right)
        case '=':  return object[name] = walk(right)
        case '+=': return object[name] += walk(right)
        case '-=': return object[name] -= walk(right)
        case '++': return object[name]++
        case '--': return object[name]--
      }
    }

  }

}

// when an unsupported expression is encountered, throw an error
function unsupportedExpression(node){
  console.error(node)
  var err = new Error('Unsupported expression: ' + node.type)
  err.node = node
  throw err
}

// walk a provided object's prototypal hierarchy to retrieve an inherited object
function objectForKey(object, key, primitives){
  var proto = primitives.getPrototypeOf(object)
  if (!proto || hasOwnProperty(object, key)){
    return object
  } else {
    return objectForKey(proto, key, primitives)
  }
}

function hasProperty(object, key, primitives){
  var proto = primitives.getPrototypeOf(object)
  var hasOwn = hasOwnProperty(object, key)
  if (object[key] !== undefined){
    return true
  } else if (!proto || hasOwn){
    return hasOwn
  } else {
    return hasProperty(proto, key, primitives)
  }
}

function hasOwnProperty(object, key){
  return Object.prototype.hasOwnProperty.call(object, key)
}

function propertyIsEnumerable(object, key){
  return Object.prototype.propertyIsEnumerable.call(object, key)
}


// determine if we have write access to a property
function canSetProperty(object, property, primitives){
  if (property === '__proto__' || primitives.isPrimitive(object)){
    return false
  } else if (object != null){

    if (hasOwnProperty(object, property)){
      if (propertyIsEnumerable(object, property)){
        return true
      } else {
        return false
      }
    } else {
      return canSetProperty(primitives.getPrototypeOf(object), property, primitives)
    }

  } else {
    return true
  }
}

// generate a function with specified context
function getFunction(body, params, parentContext){
  return function(){
    var context = Object.create(parentContext)
    if (this == global){
      context['this'] = null
    } else {
      context['this'] = this
    }
    // normalize arguments array
    var args = Array.prototype.slice.call(arguments)
    context['arguments'] = arguments
    args.forEach(function(arg,idx){
      var param = params[idx]
      if (param){
        context[param] = arg
      }
    })
    var result = evaluateAst(body, context)

    if (result instanceof ReturnValue){
      return result.value
    }
  }
}

function finalValue(value){
  if (value instanceof ReturnValue){
    return value.value
  }
  return value
}

// get the name of an identifier
function getName(identifier){
  return identifier.name
}

// a ReturnValue struct for differentiating between expression result and return statement
function ReturnValue(type, value){
  this.type = type
  this.value = value
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./lib/infinite-checker":123,"./lib/primitives":124,"esprima":125,"hoister":126}],123:[function(require,module,exports){
module.exports = InfiniteChecker

function InfiniteChecker(maxIterations){
  if (this instanceof InfiniteChecker){
    this.maxIterations = maxIterations
    this.count = 0
  } else {
    return new InfiniteChecker(maxIterations)
  }
}

InfiniteChecker.prototype.check = function(){
  this.count += 1
  if (this.count > this.maxIterations){
    throw new Error('Infinite loop detected - reached max iterations')
  }
}
},{}],124:[function(require,module,exports){
(function (global){
var names = ['Object', 'String', 'Boolean', 'Number', 'RegExp', 'Date', 'Array']
var immutable = {string: 'String', boolean: 'Boolean', number: 'Number' }

var primitives = names.map(getGlobal)
var protos = primitives.map(getProto)

var protoReplacements = {}

module.exports = Primitives

function Primitives(context){
  if (this instanceof Primitives){
    this.context = context
    for (var i=0;i<names.length;i++){
      if (!this.context[names[i]]){
        this.context[names[i]] = wrap(primitives[i])
      }
    }
  } else {
    return new Primitives(context)
  }
}

Primitives.prototype.replace = function(value){
  var primIndex = primitives.indexOf(value)
  var protoIndex = protos.indexOf(value)

  if (~primIndex){
    var name = names[primIndex]
    return this.context[name]
  } else if (~protoIndex) {
    var name = names[protoIndex]
    return this.context[name].prototype
  } else  {
    return value
  }
}

Primitives.prototype.getPropertyObject = function(object, property){
  if (immutable[typeof object]){
    return this.getPrototypeOf(object)
  }
  return object
}

Primitives.prototype.isPrimitive = function(value){
  return !!~primitives.indexOf(value) || !!~protos.indexOf(value)
}

Primitives.prototype.getPrototypeOf = function(value){
  if (value == null){ // handle null and undefined
    return value
  }

  var immutableType = immutable[typeof value]
  if (immutableType){
    var proto = this.context[immutableType].prototype
  } else {
    var proto = Object.getPrototypeOf(value)
  }

  if (!proto || proto === Object.prototype){
    return null
  } else {
    var replacement = this.replace(proto)
    if (replacement === value){
      replacement = this.replace(Object.prototype)
    }
    return replacement
  }
}

Primitives.prototype.applyNew = function(func, args){
  if (func.wrapped){
    var prim = Object.getPrototypeOf(func)
    var instance = new (Function.prototype.bind.apply(prim, arguments))
    setProto(instance, func.prototype)
    return instance
  } else {
    return new (Function.prototype.bind.apply(func, arguments))
  }
}

function getProto(func){
  return func.prototype
}

function getGlobal(str){
  return global[str]
}

function setProto(obj, proto){
  obj.__proto__ = proto
}

function wrap(prim){
  var proto = Object.create(prim.prototype)

  var result = function() {
    if (this instanceof result){
      prim.apply(this, arguments)
    } else {
      var instance = prim.apply(null, arguments)
      setProto(instance, proto)
      return instance
    }
  }
  setProto(result, prim)
  result.prototype = proto
  result.wrapped = true
  return result
}
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],125:[function(require,module,exports){
/*
  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>
  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>
  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>
  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>
  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>
  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>
  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*jslint bitwise:true plusplus:true */
/*global esprima:true, define:true, exports:true, window: true,
throwError: true, createLiteral: true, generateStatement: true,
parseAssignmentExpression: true, parseBlock: true, parseExpression: true,
parseFunctionDeclaration: true, parseFunctionExpression: true,
parseFunctionSourceElements: true, parseVariableIdentifier: true,
parseLeftHandSideExpression: true,
parseStatement: true, parseSourceElement: true */

(function (root, factory) {
    'use strict';

    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js,
    // Rhino, and plain browser loading.
    if (typeof define === 'function' && define.amd) {
        define(['exports'], factory);
    } else if (typeof exports !== 'undefined') {
        factory(exports);
    } else {
        factory((root.esprima = {}));
    }
}(this, function (exports) {
    'use strict';

    var Token,
        TokenName,
        Syntax,
        PropertyKind,
        Messages,
        Regex,
        source,
        strict,
        index,
        lineNumber,
        lineStart,
        length,
        buffer,
        state,
        extra;

    Token = {
        BooleanLiteral: 1,
        EOF: 2,
        Identifier: 3,
        Keyword: 4,
        NullLiteral: 5,
        NumericLiteral: 6,
        Punctuator: 7,
        StringLiteral: 8
    };

    TokenName = {};
    TokenName[Token.BooleanLiteral] = 'Boolean';
    TokenName[Token.EOF] = '<end>';
    TokenName[Token.Identifier] = 'Identifier';
    TokenName[Token.Keyword] = 'Keyword';
    TokenName[Token.NullLiteral] = 'Null';
    TokenName[Token.NumericLiteral] = 'Numeric';
    TokenName[Token.Punctuator] = 'Punctuator';
    TokenName[Token.StringLiteral] = 'String';

    Syntax = {
        AssignmentExpression: 'AssignmentExpression',
        ArrayExpression: 'ArrayExpression',
        BlockStatement: 'BlockStatement',
        BinaryExpression: 'BinaryExpression',
        BreakStatement: 'BreakStatement',
        CallExpression: 'CallExpression',
        CatchClause: 'CatchClause',
        ConditionalExpression: 'ConditionalExpression',
        ContinueStatement: 'ContinueStatement',
        DoWhileStatement: 'DoWhileStatement',
        DebuggerStatement: 'DebuggerStatement',
        EmptyStatement: 'EmptyStatement',
        ExpressionStatement: 'ExpressionStatement',
        ForStatement: 'ForStatement',
        ForInStatement: 'ForInStatement',
        FunctionDeclaration: 'FunctionDeclaration',
        FunctionExpression: 'FunctionExpression',
        Identifier: 'Identifier',
        IfStatement: 'IfStatement',
        Literal: 'Literal',
        LabeledStatement: 'LabeledStatement',
        LogicalExpression: 'LogicalExpression',
        MemberExpression: 'MemberExpression',
        NewExpression: 'NewExpression',
        ObjectExpression: 'ObjectExpression',
        Program: 'Program',
        Property: 'Property',
        ReturnStatement: 'ReturnStatement',
        SequenceExpression: 'SequenceExpression',
        SwitchStatement: 'SwitchStatement',
        SwitchCase: 'SwitchCase',
        ThisExpression: 'ThisExpression',
        ThrowStatement: 'ThrowStatement',
        TryStatement: 'TryStatement',
        UnaryExpression: 'UnaryExpression',
        UpdateExpression: 'UpdateExpression',
        VariableDeclaration: 'VariableDeclaration',
        VariableDeclarator: 'VariableDeclarator',
        WhileStatement: 'WhileStatement',
        WithStatement: 'WithStatement'
    };

    PropertyKind = {
        Data: 1,
        Get: 2,
        Set: 4
    };

    // Error messages should be identical to V8.
    Messages = {
        UnexpectedToken:  'Unexpected token %0',
        UnexpectedNumber:  'Unexpected number',
        UnexpectedString:  'Unexpected string',
        UnexpectedIdentifier:  'Unexpected identifier',
        UnexpectedReserved:  'Unexpected reserved word',
        UnexpectedEOS:  'Unexpected end of input',
        NewlineAfterThrow:  'Illegal newline after throw',
        InvalidRegExp: 'Invalid regular expression',
        UnterminatedRegExp:  'Invalid regular expression: missing /',
        InvalidLHSInAssignment:  'Invalid left-hand side in assignment',
        InvalidLHSInForIn:  'Invalid left-hand side in for-in',
        MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
        NoCatchOrFinally:  'Missing catch or finally after try',
        UnknownLabel: 'Undefined label \'%0\'',
        Redeclaration: '%0 \'%1\' has already been declared',
        IllegalContinue: 'Illegal continue statement',
        IllegalBreak: 'Illegal break statement',
        IllegalReturn: 'Illegal return statement',
        StrictModeWith:  'Strict mode code may not include a with statement',
        StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',
        StrictVarName:  'Variable name may not be eval or arguments in strict mode',
        StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',
        StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
        StrictFunctionName:  'Function name may not be eval or arguments in strict mode',
        StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',
        StrictDelete:  'Delete of an unqualified identifier in strict mode.',
        StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',
        AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',
        AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',
        StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',
        StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',
        StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',
        StrictReservedWord:  'Use of future reserved word in strict mode'
    };

    // See also tools/generate-unicode-regex.py.
    Regex = {
        NonAsciiIdentifierStart: new RegExp('[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]'),
        NonAsciiIdentifierPart: new RegExp('[\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0300-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u0483-\u0487\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u05d0-\u05ea\u05f0-\u05f2\u0610-\u061a\u0620-\u0669\u066e-\u06d3\u06d5-\u06dc\u06df-\u06e8\u06ea-\u06fc\u06ff\u0710-\u074a\u074d-\u07b1\u07c0-\u07f5\u07fa\u0800-\u082d\u0840-\u085b\u08a0\u08a2-\u08ac\u08e4-\u08fe\u0900-\u0963\u0966-\u096f\u0971-\u0977\u0979-\u097f\u0981-\u0983\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bc-\u09c4\u09c7\u09c8\u09cb-\u09ce\u09d7\u09dc\u09dd\u09df-\u09e3\u09e6-\u09f1\u0a01-\u0a03\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a59-\u0a5c\u0a5e\u0a66-\u0a75\u0a81-\u0a83\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abc-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ad0\u0ae0-\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3c-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b5c\u0b5d\u0b5f-\u0b63\u0b66-\u0b6f\u0b71\u0b82\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd0\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c58\u0c59\u0c60-\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbc-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0cde\u0ce0-\u0ce3\u0ce6-\u0cef\u0cf1\u0cf2\u0d02\u0d03\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d-\u0d44\u0d46-\u0d48\u0d4a-\u0d4e\u0d57\u0d60-\u0d63\u0d66-\u0d6f\u0d7a-\u0d7f\u0d82\u0d83\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e01-\u0e3a\u0e40-\u0e4e\u0e50-\u0e59\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb9\u0ebb-\u0ebd\u0ec0-\u0ec4\u0ec6\u0ec8-\u0ecd\u0ed0-\u0ed9\u0edc-\u0edf\u0f00\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e-\u0f47\u0f49-\u0f6c\u0f71-\u0f84\u0f86-\u0f97\u0f99-\u0fbc\u0fc6\u1000-\u1049\u1050-\u109d\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u135d-\u135f\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176c\u176e-\u1770\u1772\u1773\u1780-\u17d3\u17d7\u17dc\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u1820-\u1877\u1880-\u18aa\u18b0-\u18f5\u1900-\u191c\u1920-\u192b\u1930-\u193b\u1946-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u19d0-\u19d9\u1a00-\u1a1b\u1a20-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1aa7\u1b00-\u1b4b\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1bf3\u1c00-\u1c37\u1c40-\u1c49\u1c4d-\u1c7d\u1cd0-\u1cd2\u1cd4-\u1cf6\u1d00-\u1de6\u1dfc-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u200c\u200d\u203f\u2040\u2054\u2071\u207f\u2090-\u209c\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d7f-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2de0-\u2dff\u2e2f\u3005-\u3007\u3021-\u302f\u3031-\u3035\u3038-\u303c\u3041-\u3096\u3099\u309a\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua62b\ua640-\ua66f\ua674-\ua67d\ua67f-\ua697\ua69f-\ua6f1\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua827\ua840-\ua873\ua880-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f7\ua8fb\ua900-\ua92d\ua930-\ua953\ua960-\ua97c\ua980-\ua9c0\ua9cf-\ua9d9\uaa00-\uaa36\uaa40-\uaa4d\uaa50-\uaa59\uaa60-\uaa76\uaa7a\uaa7b\uaa80-\uaac2\uaadb-\uaadd\uaae0-\uaaef\uaaf2-\uaaf6\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabea\uabec\uabed\uabf0-\uabf9\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\ufe70-\ufe74\ufe76-\ufefc\uff10-\uff19\uff21-\uff3a\uff3f\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]')
    };

    // Ensure the condition is true, otherwise throw an error.
    // This is only to have a better contract semantic, i.e. another safety net
    // to catch a logic error. The condition shall be fulfilled in normal case.
    // Do NOT use this to enforce a certain condition on any user input.

    function assert(condition, message) {
        if (!condition) {
            throw new Error('ASSERT: ' + message);
        }
    }

    function sliceSource(from, to) {
        return source.slice(from, to);
    }

    if (typeof 'esprima'[0] === 'undefined') {
        sliceSource = function sliceArraySource(from, to) {
            return source.slice(from, to).join('');
        };
    }

    function isDecimalDigit(ch) {
        return '0123456789'.indexOf(ch) >= 0;
    }

    function isHexDigit(ch) {
        return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;
    }

    function isOctalDigit(ch) {
        return '01234567'.indexOf(ch) >= 0;
    }


    // 7.2 White Space

    function isWhiteSpace(ch) {
        return (ch === ' ') || (ch === '\u0009') || (ch === '\u000B') ||
            (ch === '\u000C') || (ch === '\u00A0') ||
            (ch.charCodeAt(0) >= 0x1680 &&
             '\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\uFEFF'.indexOf(ch) >= 0);
    }

    // 7.3 Line Terminators

    function isLineTerminator(ch) {
        return (ch === '\n' || ch === '\r' || ch === '\u2028' || ch === '\u2029');
    }

    // 7.6 Identifier Names and Identifiers

    function isIdentifierStart(ch) {
        return (ch === '$') || (ch === '_') || (ch === '\\') ||
            (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') ||
            ((ch.charCodeAt(0) >= 0x80) && Regex.NonAsciiIdentifierStart.test(ch));
    }

    function isIdentifierPart(ch) {
        return (ch === '$') || (ch === '_') || (ch === '\\') ||
            (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') ||
            ((ch >= '0') && (ch <= '9')) ||
            ((ch.charCodeAt(0) >= 0x80) && Regex.NonAsciiIdentifierPart.test(ch));
    }

    // 7.6.1.2 Future Reserved Words

    function isFutureReservedWord(id) {
        switch (id) {

        // Future reserved words.
        case 'class':
        case 'enum':
        case 'export':
        case 'extends':
        case 'import':
        case 'super':
            return true;
        }

        return false;
    }

    function isStrictModeReservedWord(id) {
        switch (id) {

        // Strict Mode reserved words.
        case 'implements':
        case 'interface':
        case 'package':
        case 'private':
        case 'protected':
        case 'public':
        case 'static':
        case 'yield':
        case 'let':
            return true;
        }

        return false;
    }

    function isRestrictedWord(id) {
        return id === 'eval' || id === 'arguments';
    }

    // 7.6.1.1 Keywords

    function isKeyword(id) {
        var keyword = false;
        switch (id.length) {
        case 2:
            keyword = (id === 'if') || (id === 'in') || (id === 'do');
            break;
        case 3:
            keyword = (id === 'var') || (id === 'for') || (id === 'new') || (id === 'try');
            break;
        case 4:
            keyword = (id === 'this') || (id === 'else') || (id === 'case') || (id === 'void') || (id === 'with');
            break;
        case 5:
            keyword = (id === 'while') || (id === 'break') || (id === 'catch') || (id === 'throw');
            break;
        case 6:
            keyword = (id === 'return') || (id === 'typeof') || (id === 'delete') || (id === 'switch');
            break;
        case 7:
            keyword = (id === 'default') || (id === 'finally');
            break;
        case 8:
            keyword = (id === 'function') || (id === 'continue') || (id === 'debugger');
            break;
        case 10:
            keyword = (id === 'instanceof');
            break;
        }

        if (keyword) {
            return true;
        }

        switch (id) {
        // Future reserved words.
        // 'const' is specialized as Keyword in V8.
        case 'const':
            return true;

        // For compatiblity to SpiderMonkey and ES.next
        case 'yield':
        case 'let':
            return true;
        }

        if (strict && isStrictModeReservedWord(id)) {
            return true;
        }

        return isFutureReservedWord(id);
    }

    // 7.4 Comments

    function skipComment() {
        var ch, blockComment, lineComment;

        blockComment = false;
        lineComment = false;

        while (index < length) {
            ch = source[index];

            if (lineComment) {
                ch = source[index++];
                if (isLineTerminator(ch)) {
                    lineComment = false;
                    if (ch === '\r' && source[index] === '\n') {
                        ++index;
                    }
                    ++lineNumber;
                    lineStart = index;
                }
            } else if (blockComment) {
                if (isLineTerminator(ch)) {
                    if (ch === '\r' && source[index + 1] === '\n') {
                        ++index;
                    }
                    ++lineNumber;
                    ++index;
                    lineStart = index;
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                } else {
                    ch = source[index++];
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                    if (ch === '*') {
                        ch = source[index];
                        if (ch === '/') {
                            ++index;
                            blockComment = false;
                        }
                    }
                }
            } else if (ch === '/') {
                ch = source[index + 1];
                if (ch === '/') {
                    index += 2;
                    lineComment = true;
                } else if (ch === '*') {
                    index += 2;
                    blockComment = true;
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                } else {
                    break;
                }
            } else if (isWhiteSpace(ch)) {
                ++index;
            } else if (isLineTerminator(ch)) {
                ++index;
                if (ch ===  '\r' && source[index] === '\n') {
                    ++index;
                }
                ++lineNumber;
                lineStart = index;
            } else {
                break;
            }
        }
    }

    function scanHexEscape(prefix) {
        var i, len, ch, code = 0;

        len = (prefix === 'u') ? 4 : 2;
        for (i = 0; i < len; ++i) {
            if (index < length && isHexDigit(source[index])) {
                ch = source[index++];
                code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());
            } else {
                return '';
            }
        }
        return String.fromCharCode(code);
    }

    function scanIdentifier() {
        var ch, start, id, restore;

        ch = source[index];
        if (!isIdentifierStart(ch)) {
            return;
        }

        start = index;
        if (ch === '\\') {
            ++index;
            if (source[index] !== 'u') {
                return;
            }
            ++index;
            restore = index;
            ch = scanHexEscape('u');
            if (ch) {
                if (ch === '\\' || !isIdentifierStart(ch)) {
                    return;
                }
                id = ch;
            } else {
                index = restore;
                id = 'u';
            }
        } else {
            id = source[index++];
        }

        while (index < length) {
            ch = source[index];
            if (!isIdentifierPart(ch)) {
                break;
            }
            if (ch === '\\') {
                ++index;
                if (source[index] !== 'u') {
                    return;
                }
                ++index;
                restore = index;
                ch = scanHexEscape('u');
                if (ch) {
                    if (ch === '\\' || !isIdentifierPart(ch)) {
                        return;
                    }
                    id += ch;
                } else {
                    index = restore;
                    id += 'u';
                }
            } else {
                id += source[index++];
            }
        }

        // There is no keyword or literal with only one character.
        // Thus, it must be an identifier.
        if (id.length === 1) {
            return {
                type: Token.Identifier,
                value: id,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (isKeyword(id)) {
            return {
                type: Token.Keyword,
                value: id,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        // 7.8.1 Null Literals

        if (id === 'null') {
            return {
                type: Token.NullLiteral,
                value: id,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        // 7.8.2 Boolean Literals

        if (id === 'true' || id === 'false') {
            return {
                type: Token.BooleanLiteral,
                value: id,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        return {
            type: Token.Identifier,
            value: id,
            lineNumber: lineNumber,
            lineStart: lineStart,
            range: [start, index]
        };
    }

    // 7.7 Punctuators

    function scanPunctuator() {
        var start = index,
            ch1 = source[index],
            ch2,
            ch3,
            ch4;

        // Check for most common single-character punctuators.

        if (ch1 === ';' || ch1 === '{' || ch1 === '}') {
            ++index;
            return {
                type: Token.Punctuator,
                value: ch1,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (ch1 === ',' || ch1 === '(' || ch1 === ')') {
            ++index;
            return {
                type: Token.Punctuator,
                value: ch1,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        // Dot (.) can also start a floating-point number, hence the need
        // to check the next character.

        ch2 = source[index + 1];
        if (ch1 === '.' && !isDecimalDigit(ch2)) {
            return {
                type: Token.Punctuator,
                value: source[index++],
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        // Peek more characters.

        ch3 = source[index + 2];
        ch4 = source[index + 3];

        // 4-character punctuator: >>>=

        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {
            if (ch4 === '=') {
                index += 4;
                return {
                    type: Token.Punctuator,
                    value: '>>>=',
                    lineNumber: lineNumber,
                    lineStart: lineStart,
                    range: [start, index]
                };
            }
        }

        // 3-character punctuators: === !== >>> <<= >>=

        if (ch1 === '=' && ch2 === '=' && ch3 === '=') {
            index += 3;
            return {
                type: Token.Punctuator,
                value: '===',
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (ch1 === '!' && ch2 === '=' && ch3 === '=') {
            index += 3;
            return {
                type: Token.Punctuator,
                value: '!==',
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (ch1 === '>' && ch2 === '>' && ch3 === '>') {
            index += 3;
            return {
                type: Token.Punctuator,
                value: '>>>',
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (ch1 === '<' && ch2 === '<' && ch3 === '=') {
            index += 3;
            return {
                type: Token.Punctuator,
                value: '<<=',
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        if (ch1 === '>' && ch2 === '>' && ch3 === '=') {
            index += 3;
            return {
                type: Token.Punctuator,
                value: '>>=',
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }

        // 2-character punctuators: <= >= == != ++ -- << >> && ||
        // += -= *= %= &= |= ^= /=

        if (ch2 === '=') {
            if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {
                index += 2;
                return {
                    type: Token.Punctuator,
                    value: ch1 + ch2,
                    lineNumber: lineNumber,
                    lineStart: lineStart,
                    range: [start, index]
                };
            }
        }

        if (ch1 === ch2 && ('+-<>&|'.indexOf(ch1) >= 0)) {
            if ('+-<>&|'.indexOf(ch2) >= 0) {
                index += 2;
                return {
                    type: Token.Punctuator,
                    value: ch1 + ch2,
                    lineNumber: lineNumber,
                    lineStart: lineStart,
                    range: [start, index]
                };
            }
        }

        // The remaining 1-character punctuators.

        if ('[]<>+-*%&|^!~?:=/'.indexOf(ch1) >= 0) {
            return {
                type: Token.Punctuator,
                value: source[index++],
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [start, index]
            };
        }
    }

    // 7.8.3 Numeric Literals

    function scanNumericLiteral() {
        var number, start, ch;

        ch = source[index];
        assert(isDecimalDigit(ch) || (ch === '.'),
            'Numeric literal must start with a decimal digit or a decimal point');

        start = index;
        number = '';
        if (ch !== '.') {
            number = source[index++];
            ch = source[index];

            // Hex number starts with '0x'.
            // Octal number starts with '0'.
            if (number === '0') {
                if (ch === 'x' || ch === 'X') {
                    number += source[index++];
                    while (index < length) {
                        ch = source[index];
                        if (!isHexDigit(ch)) {
                            break;
                        }
                        number += source[index++];
                    }

                    if (number.length <= 2) {
                        // only 0x
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }

                    if (index < length) {
                        ch = source[index];
                        if (isIdentifierStart(ch)) {
                            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                        }
                    }
                    return {
                        type: Token.NumericLiteral,
                        value: parseInt(number, 16),
                        lineNumber: lineNumber,
                        lineStart: lineStart,
                        range: [start, index]
                    };
                } else if (isOctalDigit(ch)) {
                    number += source[index++];
                    while (index < length) {
                        ch = source[index];
                        if (!isOctalDigit(ch)) {
                            break;
                        }
                        number += source[index++];
                    }

                    if (index < length) {
                        ch = source[index];
                        if (isIdentifierStart(ch) || isDecimalDigit(ch)) {
                            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                        }
                    }
                    return {
                        type: Token.NumericLiteral,
                        value: parseInt(number, 8),
                        octal: true,
                        lineNumber: lineNumber,
                        lineStart: lineStart,
                        range: [start, index]
                    };
                }

                // decimal number starts with '0' such as '09' is illegal.
                if (isDecimalDigit(ch)) {
                    throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                }
            }

            while (index < length) {
                ch = source[index];
                if (!isDecimalDigit(ch)) {
                    break;
                }
                number += source[index++];
            }
        }

        if (ch === '.') {
            number += source[index++];
            while (index < length) {
                ch = source[index];
                if (!isDecimalDigit(ch)) {
                    break;
                }
                number += source[index++];
            }
        }

        if (ch === 'e' || ch === 'E') {
            number += source[index++];

            ch = source[index];
            if (ch === '+' || ch === '-') {
                number += source[index++];
            }

            ch = source[index];
            if (isDecimalDigit(ch)) {
                number += source[index++];
                while (index < length) {
                    ch = source[index];
                    if (!isDecimalDigit(ch)) {
                        break;
                    }
                    number += source[index++];
                }
            } else {
                ch = 'character ' + ch;
                if (index >= length) {
                    ch = '<end>';
                }
                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
            }
        }

        if (index < length) {
            ch = source[index];
            if (isIdentifierStart(ch)) {
                throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
            }
        }

        return {
            type: Token.NumericLiteral,
            value: parseFloat(number),
            lineNumber: lineNumber,
            lineStart: lineStart,
            range: [start, index]
        };
    }

    // 7.8.4 String Literals

    function scanStringLiteral() {
        var str = '', quote, start, ch, code, unescaped, restore, octal = false;

        quote = source[index];
        assert((quote === '\'' || quote === '"'),
            'String literal must starts with a quote');

        start = index;
        ++index;

        while (index < length) {
            ch = source[index++];

            if (ch === quote) {
                quote = '';
                break;
            } else if (ch === '\\') {
                ch = source[index++];
                if (!isLineTerminator(ch)) {
                    switch (ch) {
                    case 'n':
                        str += '\n';
                        break;
                    case 'r':
                        str += '\r';
                        break;
                    case 't':
                        str += '\t';
                        break;
                    case 'u':
                    case 'x':
                        restore = index;
                        unescaped = scanHexEscape(ch);
                        if (unescaped) {
                            str += unescaped;
                        } else {
                            index = restore;
                            str += ch;
                        }
                        break;
                    case 'b':
                        str += '\b';
                        break;
                    case 'f':
                        str += '\f';
                        break;
                    case 'v':
                        str += '\x0B';
                        break;

                    default:
                        if (isOctalDigit(ch)) {
                            code = '01234567'.indexOf(ch);

                            // \0 is not octal escape sequence
                            if (code !== 0) {
                                octal = true;
                            }

                            if (index < length && isOctalDigit(source[index])) {
                                octal = true;
                                code = code * 8 + '01234567'.indexOf(source[index++]);

                                // 3 digits are only allowed when string starts
                                // with 0, 1, 2, 3
                                if ('0123'.indexOf(ch) >= 0 &&
                                        index < length &&
                                        isOctalDigit(source[index])) {
                                    code = code * 8 + '01234567'.indexOf(source[index++]);
                                }
                            }
                            str += String.fromCharCode(code);
                        } else {
                            str += ch;
                        }
                        break;
                    }
                } else {
                    ++lineNumber;
                    if (ch ===  '\r' && source[index] === '\n') {
                        ++index;
                    }
                }
            } else if (isLineTerminator(ch)) {
                break;
            } else {
                str += ch;
            }
        }

        if (quote !== '') {
            throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
        }

        return {
            type: Token.StringLiteral,
            value: str,
            octal: octal,
            lineNumber: lineNumber,
            lineStart: lineStart,
            range: [start, index]
        };
    }

    function scanRegExp() {
        var str, ch, start, pattern, flags, value, classMarker = false, restore, terminated = false;

        buffer = null;
        skipComment();

        start = index;
        ch = source[index];
        assert(ch === '/', 'Regular expression literal must start with a slash');
        str = source[index++];

        while (index < length) {
            ch = source[index++];
            str += ch;
            if (ch === '\\') {
                ch = source[index++];
                // ECMA-262 7.8.5
                if (isLineTerminator(ch)) {
                    throwError({}, Messages.UnterminatedRegExp);
                }
                str += ch;
            } else if (classMarker) {
                if (ch === ']') {
                    classMarker = false;
                }
            } else {
                if (ch === '/') {
                    terminated = true;
                    break;
                } else if (ch === '[') {
                    classMarker = true;
                } else if (isLineTerminator(ch)) {
                    throwError({}, Messages.UnterminatedRegExp);
                }
            }
        }

        if (!terminated) {
            throwError({}, Messages.UnterminatedRegExp);
        }

        // Exclude leading and trailing slash.
        pattern = str.substr(1, str.length - 2);

        flags = '';
        while (index < length) {
            ch = source[index];
            if (!isIdentifierPart(ch)) {
                break;
            }

            ++index;
            if (ch === '\\' && index < length) {
                ch = source[index];
                if (ch === 'u') {
                    ++index;
                    restore = index;
                    ch = scanHexEscape('u');
                    if (ch) {
                        flags += ch;
                        str += '\\u';
                        for (; restore < index; ++restore) {
                            str += source[restore];
                        }
                    } else {
                        index = restore;
                        flags += 'u';
                        str += '\\u';
                    }
                } else {
                    str += '\\';
                }
            } else {
                flags += ch;
                str += ch;
            }
        }

        try {
            value = new RegExp(pattern, flags);
        } catch (e) {
            throwError({}, Messages.InvalidRegExp);
        }

        return {
            literal: str,
            value: value,
            range: [start, index]
        };
    }

    function isIdentifierName(token) {
        return token.type === Token.Identifier ||
            token.type === Token.Keyword ||
            token.type === Token.BooleanLiteral ||
            token.type === Token.NullLiteral;
    }

    function advance() {
        var ch, token;

        skipComment();

        if (index >= length) {
            return {
                type: Token.EOF,
                lineNumber: lineNumber,
                lineStart: lineStart,
                range: [index, index]
            };
        }

        token = scanPunctuator();
        if (typeof token !== 'undefined') {
            return token;
        }

        ch = source[index];

        if (ch === '\'' || ch === '"') {
            return scanStringLiteral();
        }

        if (ch === '.' || isDecimalDigit(ch)) {
            return scanNumericLiteral();
        }

        token = scanIdentifier();
        if (typeof token !== 'undefined') {
            return token;
        }

        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
    }

    function lex() {
        var token;

        if (buffer) {
            index = buffer.range[1];
            lineNumber = buffer.lineNumber;
            lineStart = buffer.lineStart;
            token = buffer;
            buffer = null;
            return token;
        }

        buffer = null;
        return advance();
    }

    function lookahead() {
        var pos, line, start;

        if (buffer !== null) {
            return buffer;
        }

        pos = index;
        line = lineNumber;
        start = lineStart;
        buffer = advance();
        index = pos;
        lineNumber = line;
        lineStart = start;

        return buffer;
    }

    // Return true if there is a line terminator before the next token.

    function peekLineTerminator() {
        var pos, line, start, found;

        pos = index;
        line = lineNumber;
        start = lineStart;
        skipComment();
        found = lineNumber !== line;
        index = pos;
        lineNumber = line;
        lineStart = start;

        return found;
    }

    // Throw an exception

    function throwError(token, messageFormat) {
        var error,
            args = Array.prototype.slice.call(arguments, 2),
            msg = messageFormat.replace(
                /%(\d)/g,
                function (whole, index) {
                    return args[index] || '';
                }
            );

        if (typeof token.lineNumber === 'number') {
            error = new Error('Line ' + token.lineNumber + ': ' + msg);
            error.index = token.range[0];
            error.lineNumber = token.lineNumber;
            error.column = token.range[0] - lineStart + 1;
        } else {
            error = new Error('Line ' + lineNumber + ': ' + msg);
            error.index = index;
            error.lineNumber = lineNumber;
            error.column = index - lineStart + 1;
        }

        throw error;
    }

    function throwErrorTolerant() {
        try {
            throwError.apply(null, arguments);
        } catch (e) {
            if (extra.errors) {
                extra.errors.push(e);
            } else {
                throw e;
            }
        }
    }


    // Throw an exception because of the token.

    function throwUnexpected(token) {
        if (token.type === Token.EOF) {
            throwError(token, Messages.UnexpectedEOS);
        }

        if (token.type === Token.NumericLiteral) {
            throwError(token, Messages.UnexpectedNumber);
        }

        if (token.type === Token.StringLiteral) {
            throwError(token, Messages.UnexpectedString);
        }

        if (token.type === Token.Identifier) {
            throwError(token, Messages.UnexpectedIdentifier);
        }

        if (token.type === Token.Keyword) {
            if (isFutureReservedWord(token.value)) {
                throwError(token, Messages.UnexpectedReserved);
            } else if (strict && isStrictModeReservedWord(token.value)) {
                throwErrorTolerant(token, Messages.StrictReservedWord);
                return;
            }
            throwError(token, Messages.UnexpectedToken, token.value);
        }

        // BooleanLiteral, NullLiteral, or Punctuator.
        throwError(token, Messages.UnexpectedToken, token.value);
    }

    // Expect the next token to match the specified punctuator.
    // If not, an exception will be thrown.

    function expect(value) {
        var token = lex();
        if (token.type !== Token.Punctuator || token.value !== value) {
            throwUnexpected(token);
        }
    }

    // Expect the next token to match the specified keyword.
    // If not, an exception will be thrown.

    function expectKeyword(keyword) {
        var token = lex();
        if (token.type !== Token.Keyword || token.value !== keyword) {
            throwUnexpected(token);
        }
    }

    // Return true if the next token matches the specified punctuator.

    function match(value) {
        var token = lookahead();
        return token.type === Token.Punctuator && token.value === value;
    }

    // Return true if the next token matches the specified keyword

    function matchKeyword(keyword) {
        var token = lookahead();
        return token.type === Token.Keyword && token.value === keyword;
    }

    // Return true if the next token is an assignment operator

    function matchAssign() {
        var token = lookahead(),
            op = token.value;

        if (token.type !== Token.Punctuator) {
            return false;
        }
        return op === '=' ||
            op === '*=' ||
            op === '/=' ||
            op === '%=' ||
            op === '+=' ||
            op === '-=' ||
            op === '<<=' ||
            op === '>>=' ||
            op === '>>>=' ||
            op === '&=' ||
            op === '^=' ||
            op === '|=';
    }

    function consumeSemicolon() {
        var token, line;

        // Catch the very common case first.
        if (source[index] === ';') {
            lex();
            return;
        }

        line = lineNumber;
        skipComment();
        if (lineNumber !== line) {
            return;
        }

        if (match(';')) {
            lex();
            return;
        }

        token = lookahead();
        if (token.type !== Token.EOF && !match('}')) {
            throwUnexpected(token);
        }
    }

    // Return true if provided expression is LeftHandSideExpression

    function isLeftHandSide(expr) {
        return expr.type === Syntax.Identifier || expr.type === Syntax.MemberExpression;
    }

    // 11.1.4 Array Initialiser

    function parseArrayInitialiser() {
        var elements = [];

        expect('[');

        while (!match(']')) {
            if (match(',')) {
                lex();
                elements.push(null);
            } else {
                elements.push(parseAssignmentExpression());

                if (!match(']')) {
                    expect(',');
                }
            }
        }

        expect(']');

        return {
            type: Syntax.ArrayExpression,
            elements: elements
        };
    }

    // 11.1.5 Object Initialiser

    function parsePropertyFunction(param, first) {
        var previousStrict, body;

        previousStrict = strict;
        body = parseFunctionSourceElements();
        if (first && strict && isRestrictedWord(param[0].name)) {
            throwErrorTolerant(first, Messages.StrictParamName);
        }
        strict = previousStrict;

        return {
            type: Syntax.FunctionExpression,
            id: null,
            params: param,
            defaults: [],
            body: body,
            rest: null,
            generator: false,
            expression: false
        };
    }

    function parseObjectPropertyKey() {
        var token = lex();

        // Note: This function is called only from parseObjectProperty(), where
        // EOF and Punctuator tokens are already filtered out.

        if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {
            if (strict && token.octal) {
                throwErrorTolerant(token, Messages.StrictOctalLiteral);
            }
            return createLiteral(token);
        }

        return {
            type: Syntax.Identifier,
            name: token.value
        };
    }

    function parseObjectProperty() {
        var token, key, id, param;

        token = lookahead();

        if (token.type === Token.Identifier) {

            id = parseObjectPropertyKey();

            // Property Assignment: Getter and Setter.

            if (token.value === 'get' && !match(':')) {
                key = parseObjectPropertyKey();
                expect('(');
                expect(')');
                return {
                    type: Syntax.Property,
                    key: key,
                    value: parsePropertyFunction([]),
                    kind: 'get'
                };
            } else if (token.value === 'set' && !match(':')) {
                key = parseObjectPropertyKey();
                expect('(');
                token = lookahead();
                if (token.type !== Token.Identifier) {
                    expect(')');
                    throwErrorTolerant(token, Messages.UnexpectedToken, token.value);
                    return {
                        type: Syntax.Property,
                        key: key,
                        value: parsePropertyFunction([]),
                        kind: 'set'
                    };
                } else {
                    param = [ parseVariableIdentifier() ];
                    expect(')');
                    return {
                        type: Syntax.Property,
                        key: key,
                        value: parsePropertyFunction(param, token),
                        kind: 'set'
                    };
                }
            } else {
                expect(':');
                return {
                    type: Syntax.Property,
                    key: id,
                    value: parseAssignmentExpression(),
                    kind: 'init'
                };
            }
        } else if (token.type === Token.EOF || token.type === Token.Punctuator) {
            throwUnexpected(token);
        } else {
            key = parseObjectPropertyKey();
            expect(':');
            return {
                type: Syntax.Property,
                key: key,
                value: parseAssignmentExpression(),
                kind: 'init'
            };
        }
    }

    function parseObjectInitialiser() {
        var properties = [], property, name, kind, map = {}, toString = String;

        expect('{');

        while (!match('}')) {
            property = parseObjectProperty();

            if (property.key.type === Syntax.Identifier) {
                name = property.key.name;
            } else {
                name = toString(property.key.value);
            }
            kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;
            if (Object.prototype.hasOwnProperty.call(map, name)) {
                if (map[name] === PropertyKind.Data) {
                    if (strict && kind === PropertyKind.Data) {
                        throwErrorTolerant({}, Messages.StrictDuplicateProperty);
                    } else if (kind !== PropertyKind.Data) {
                        throwErrorTolerant({}, Messages.AccessorDataProperty);
                    }
                } else {
                    if (kind === PropertyKind.Data) {
                        throwErrorTolerant({}, Messages.AccessorDataProperty);
                    } else if (map[name] & kind) {
                        throwErrorTolerant({}, Messages.AccessorGetSet);
                    }
                }
                map[name] |= kind;
            } else {
                map[name] = kind;
            }

            properties.push(property);

            if (!match('}')) {
                expect(',');
            }
        }

        expect('}');

        return {
            type: Syntax.ObjectExpression,
            properties: properties
        };
    }

    // 11.1.6 The Grouping Operator

    function parseGroupExpression() {
        var expr;

        expect('(');

        expr = parseExpression();

        expect(')');

        return expr;
    }


    // 11.1 Primary Expressions

    function parsePrimaryExpression() {
        var token = lookahead(),
            type = token.type;

        if (type === Token.Identifier) {
            return {
                type: Syntax.Identifier,
                name: lex().value
            };
        }

        if (type === Token.StringLiteral || type === Token.NumericLiteral) {
            if (strict && token.octal) {
                throwErrorTolerant(token, Messages.StrictOctalLiteral);
            }
            return createLiteral(lex());
        }

        if (type === Token.Keyword) {
            if (matchKeyword('this')) {
                lex();
                return {
                    type: Syntax.ThisExpression
                };
            }

            if (matchKeyword('function')) {
                return parseFunctionExpression();
            }
        }

        if (type === Token.BooleanLiteral) {
            lex();
            token.value = (token.value === 'true');
            return createLiteral(token);
        }

        if (type === Token.NullLiteral) {
            lex();
            token.value = null;
            return createLiteral(token);
        }

        if (match('[')) {
            return parseArrayInitialiser();
        }

        if (match('{')) {
            return parseObjectInitialiser();
        }

        if (match('(')) {
            return parseGroupExpression();
        }

        if (match('/') || match('/=')) {
            return createLiteral(scanRegExp());
        }

        return throwUnexpected(lex());
    }

    // 11.2 Left-Hand-Side Expressions

    function parseArguments() {
        var args = [];

        expect('(');

        if (!match(')')) {
            while (index < length) {
                args.push(parseAssignmentExpression());
                if (match(')')) {
                    break;
                }
                expect(',');
            }
        }

        expect(')');

        return args;
    }

    function parseNonComputedProperty() {
        var token = lex();

        if (!isIdentifierName(token)) {
            throwUnexpected(token);
        }

        return {
            type: Syntax.Identifier,
            name: token.value
        };
    }

    function parseNonComputedMember() {
        expect('.');

        return parseNonComputedProperty();
    }

    function parseComputedMember() {
        var expr;

        expect('[');

        expr = parseExpression();

        expect(']');

        return expr;
    }

    function parseNewExpression() {
        var expr;

        expectKeyword('new');

        expr = {
            type: Syntax.NewExpression,
            callee: parseLeftHandSideExpression(),
            'arguments': []
        };

        if (match('(')) {
            expr['arguments'] = parseArguments();
        }

        return expr;
    }

    function parseLeftHandSideExpressionAllowCall() {
        var expr;

        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();

        while (match('.') || match('[') || match('(')) {
            if (match('(')) {
                expr = {
                    type: Syntax.CallExpression,
                    callee: expr,
                    'arguments': parseArguments()
                };
            } else if (match('[')) {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: true,
                    object: expr,
                    property: parseComputedMember()
                };
            } else {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: false,
                    object: expr,
                    property: parseNonComputedMember()
                };
            }
        }

        return expr;
    }


    function parseLeftHandSideExpression() {
        var expr;

        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();

        while (match('.') || match('[')) {
            if (match('[')) {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: true,
                    object: expr,
                    property: parseComputedMember()
                };
            } else {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: false,
                    object: expr,
                    property: parseNonComputedMember()
                };
            }
        }

        return expr;
    }

    // 11.3 Postfix Expressions

    function parsePostfixExpression() {
        var expr = parseLeftHandSideExpressionAllowCall(), token;

        token = lookahead();
        if (token.type !== Token.Punctuator) {
            return expr;
        }

        if ((match('++') || match('--')) && !peekLineTerminator()) {
            // 11.3.1, 11.3.2
            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
                throwErrorTolerant({}, Messages.StrictLHSPostfix);
            }
            if (!isLeftHandSide(expr)) {
                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
            }

            expr = {
                type: Syntax.UpdateExpression,
                operator: lex().value,
                argument: expr,
                prefix: false
            };
        }

        return expr;
    }

    // 11.4 Unary Operators

    function parseUnaryExpression() {
        var token, expr;

        token = lookahead();
        if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {
            return parsePostfixExpression();
        }

        if (match('++') || match('--')) {
            token = lex();
            expr = parseUnaryExpression();
            // 11.4.4, 11.4.5
            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
                throwErrorTolerant({}, Messages.StrictLHSPrefix);
            }

            if (!isLeftHandSide(expr)) {
                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
            }

            expr = {
                type: Syntax.UpdateExpression,
                operator: token.value,
                argument: expr,
                prefix: true
            };
            return expr;
        }

        if (match('+') || match('-') || match('~') || match('!')) {
            expr = {
                type: Syntax.UnaryExpression,
                operator: lex().value,
                argument: parseUnaryExpression(),
                prefix: true
            };
            return expr;
        }

        if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {
            expr = {
                type: Syntax.UnaryExpression,
                operator: lex().value,
                argument: parseUnaryExpression(),
                prefix: true
            };
            if (strict && expr.operator === 'delete' && expr.argument.type === Syntax.Identifier) {
                throwErrorTolerant({}, Messages.StrictDelete);
            }
            return expr;
        }

        return parsePostfixExpression();
    }

    // 11.5 Multiplicative Operators

    function parseMultiplicativeExpression() {
        var expr = parseUnaryExpression();

        while (match('*') || match('/') || match('%')) {
            expr = {
                type: Syntax.BinaryExpression,
                operator: lex().value,
                left: expr,
                right: parseUnaryExpression()
            };
        }

        return expr;
    }

    // 11.6 Additive Operators

    function parseAdditiveExpression() {
        var expr = parseMultiplicativeExpression();

        while (match('+') || match('-')) {
            expr = {
                type: Syntax.BinaryExpression,
                operator: lex().value,
                left: expr,
                right: parseMultiplicativeExpression()
            };
        }

        return expr;
    }

    // 11.7 Bitwise Shift Operators

    function parseShiftExpression() {
        var expr = parseAdditiveExpression();

        while (match('<<') || match('>>') || match('>>>')) {
            expr = {
                type: Syntax.BinaryExpression,
                operator: lex().value,
                left: expr,
                right: parseAdditiveExpression()
            };
        }

        return expr;
    }
    // 11.8 Relational Operators

    function parseRelationalExpression() {
        var expr, previousAllowIn;

        previousAllowIn = state.allowIn;
        state.allowIn = true;

        expr = parseShiftExpression();

        while (match('<') || match('>') || match('<=') || match('>=') || (previousAllowIn && matchKeyword('in')) || matchKeyword('instanceof')) {
            expr = {
                type: Syntax.BinaryExpression,
                operator: lex().value,
                left: expr,
                right: parseShiftExpression()
            };
        }

        state.allowIn = previousAllowIn;
        return expr;
    }

    // 11.9 Equality Operators

    function parseEqualityExpression() {
        var expr = parseRelationalExpression();

        while (match('==') || match('!=') || match('===') || match('!==')) {
            expr = {
                type: Syntax.BinaryExpression,
                operator: lex().value,
                left: expr,
                right: parseRelationalExpression()
            };
        }

        return expr;
    }

    // 11.10 Binary Bitwise Operators

    function parseBitwiseANDExpression() {
        var expr = parseEqualityExpression();

        while (match('&')) {
            lex();
            expr = {
                type: Syntax.BinaryExpression,
                operator: '&',
                left: expr,
                right: parseEqualityExpression()
            };
        }

        return expr;
    }

    function parseBitwiseXORExpression() {
        var expr = parseBitwiseANDExpression();

        while (match('^')) {
            lex();
            expr = {
                type: Syntax.BinaryExpression,
                operator: '^',
                left: expr,
                right: parseBitwiseANDExpression()
            };
        }

        return expr;
    }

    function parseBitwiseORExpression() {
        var expr = parseBitwiseXORExpression();

        while (match('|')) {
            lex();
            expr = {
                type: Syntax.BinaryExpression,
                operator: '|',
                left: expr,
                right: parseBitwiseXORExpression()
            };
        }

        return expr;
    }

    // 11.11 Binary Logical Operators

    function parseLogicalANDExpression() {
        var expr = parseBitwiseORExpression();

        while (match('&&')) {
            lex();
            expr = {
                type: Syntax.LogicalExpression,
                operator: '&&',
                left: expr,
                right: parseBitwiseORExpression()
            };
        }

        return expr;
    }

    function parseLogicalORExpression() {
        var expr = parseLogicalANDExpression();

        while (match('||')) {
            lex();
            expr = {
                type: Syntax.LogicalExpression,
                operator: '||',
                left: expr,
                right: parseLogicalANDExpression()
            };
        }

        return expr;
    }

    // 11.12 Conditional Operator

    function parseConditionalExpression() {
        var expr, previousAllowIn, consequent;

        expr = parseLogicalORExpression();

        if (match('?')) {
            lex();
            previousAllowIn = state.allowIn;
            state.allowIn = true;
            consequent = parseAssignmentExpression();
            state.allowIn = previousAllowIn;
            expect(':');

            expr = {
                type: Syntax.ConditionalExpression,
                test: expr,
                consequent: consequent,
                alternate: parseAssignmentExpression()
            };
        }

        return expr;
    }

    // 11.13 Assignment Operators

    function parseAssignmentExpression() {
        var token, expr;

        token = lookahead();
        expr = parseConditionalExpression();

        if (matchAssign()) {
            // LeftHandSideExpression
            if (!isLeftHandSide(expr)) {
                throwErrorTolerant({}, Messages.InvalidLHSInAssignment);
            }

            // 11.13.1
            if (strict && expr.type === Syntax.Identifier && isRestrictedWord(expr.name)) {
                throwErrorTolerant(token, Messages.StrictLHSAssignment);
            }

            expr = {
                type: Syntax.AssignmentExpression,
                operator: lex().value,
                left: expr,
                right: parseAssignmentExpression()
            };
        }

        return expr;
    }

    // 11.14 Comma Operator

    function parseExpression() {
        var expr = parseAssignmentExpression();

        if (match(',')) {
            expr = {
                type: Syntax.SequenceExpression,
                expressions: [ expr ]
            };

            while (index < length) {
                if (!match(',')) {
                    break;
                }
                lex();
                expr.expressions.push(parseAssignmentExpression());
            }

        }
        return expr;
    }

    // 12.1 Block

    function parseStatementList() {
        var list = [],
            statement;

        while (index < length) {
            if (match('}')) {
                break;
            }
            statement = parseSourceElement();
            if (typeof statement === 'undefined') {
                break;
            }
            list.push(statement);
        }

        return list;
    }

    function parseBlock() {
        var block;

        expect('{');

        block = parseStatementList();

        expect('}');

        return {
            type: Syntax.BlockStatement,
            body: block
        };
    }

    // 12.2 Variable Statement

    function parseVariableIdentifier() {
        var token = lex();

        if (token.type !== Token.Identifier) {
            throwUnexpected(token);
        }

        return {
            type: Syntax.Identifier,
            name: token.value
        };
    }

    function parseVariableDeclaration(kind) {
        var id = parseVariableIdentifier(),
            init = null;

        // 12.2.1
        if (strict && isRestrictedWord(id.name)) {
            throwErrorTolerant({}, Messages.StrictVarName);
        }

        if (kind === 'const') {
            expect('=');
            init = parseAssignmentExpression();
        } else if (match('=')) {
            lex();
            init = parseAssignmentExpression();
        }

        return {
            type: Syntax.VariableDeclarator,
            id: id,
            init: init
        };
    }

    function parseVariableDeclarationList(kind) {
        var list = [];

        do {
            list.push(parseVariableDeclaration(kind));
            if (!match(',')) {
                break;
            }
            lex();
        } while (index < length);

        return list;
    }

    function parseVariableStatement() {
        var declarations;

        expectKeyword('var');

        declarations = parseVariableDeclarationList();

        consumeSemicolon();

        return {
            type: Syntax.VariableDeclaration,
            declarations: declarations,
            kind: 'var'
        };
    }

    // kind may be `const` or `let`
    // Both are experimental and not in the specification yet.
    // see http://wiki.ecmascript.org/doku.php?id=harmony:const
    // and http://wiki.ecmascript.org/doku.php?id=harmony:let
    function parseConstLetDeclaration(kind) {
        var declarations;

        expectKeyword(kind);

        declarations = parseVariableDeclarationList(kind);

        consumeSemicolon();

        return {
            type: Syntax.VariableDeclaration,
            declarations: declarations,
            kind: kind
        };
    }

    // 12.3 Empty Statement

    function parseEmptyStatement() {
        expect(';');

        return {
            type: Syntax.EmptyStatement
        };
    }

    // 12.4 Expression Statement

    function parseExpressionStatement() {
        var expr = parseExpression();

        consumeSemicolon();

        return {
            type: Syntax.ExpressionStatement,
            expression: expr
        };
    }

    // 12.5 If statement

    function parseIfStatement() {
        var test, consequent, alternate;

        expectKeyword('if');

        expect('(');

        test = parseExpression();

        expect(')');

        consequent = parseStatement();

        if (matchKeyword('else')) {
            lex();
            alternate = parseStatement();
        } else {
            alternate = null;
        }

        return {
            type: Syntax.IfStatement,
            test: test,
            consequent: consequent,
            alternate: alternate
        };
    }

    // 12.6 Iteration Statements

    function parseDoWhileStatement() {
        var body, test, oldInIteration;

        expectKeyword('do');

        oldInIteration = state.inIteration;
        state.inIteration = true;

        body = parseStatement();

        state.inIteration = oldInIteration;

        expectKeyword('while');

        expect('(');

        test = parseExpression();

        expect(')');

        if (match(';')) {
            lex();
        }

        return {
            type: Syntax.DoWhileStatement,
            body: body,
            test: test
        };
    }

    function parseWhileStatement() {
        var test, body, oldInIteration;

        expectKeyword('while');

        expect('(');

        test = parseExpression();

        expect(')');

        oldInIteration = state.inIteration;
        state.inIteration = true;

        body = parseStatement();

        state.inIteration = oldInIteration;

        return {
            type: Syntax.WhileStatement,
            test: test,
            body: body
        };
    }

    function parseForVariableDeclaration() {
        var token = lex();

        return {
            type: Syntax.VariableDeclaration,
            declarations: parseVariableDeclarationList(),
            kind: token.value
        };
    }

    function parseForStatement() {
        var init, test, update, left, right, body, oldInIteration;

        init = test = update = null;

        expectKeyword('for');

        expect('(');

        if (match(';')) {
            lex();
        } else {
            if (matchKeyword('var') || matchKeyword('let')) {
                state.allowIn = false;
                init = parseForVariableDeclaration();
                state.allowIn = true;

                if (init.declarations.length === 1 && matchKeyword('in')) {
                    lex();
                    left = init;
                    right = parseExpression();
                    init = null;
                }
            } else {
                state.allowIn = false;
                init = parseExpression();
                state.allowIn = true;

                if (matchKeyword('in')) {
                    // LeftHandSideExpression
                    if (!isLeftHandSide(init)) {
                        throwErrorTolerant({}, Messages.InvalidLHSInForIn);
                    }

                    lex();
                    left = init;
                    right = parseExpression();
                    init = null;
                }
            }

            if (typeof left === 'undefined') {
                expect(';');
            }
        }

        if (typeof left === 'undefined') {

            if (!match(';')) {
                test = parseExpression();
            }
            expect(';');

            if (!match(')')) {
                update = parseExpression();
            }
        }

        expect(')');

        oldInIteration = state.inIteration;
        state.inIteration = true;

        body = parseStatement();

        state.inIteration = oldInIteration;

        if (typeof left === 'undefined') {
            return {
                type: Syntax.ForStatement,
                init: init,
                test: test,
                update: update,
                body: body
            };
        }

        return {
            type: Syntax.ForInStatement,
            left: left,
            right: right,
            body: body,
            each: false
        };
    }

    // 12.7 The continue statement

    function parseContinueStatement() {
        var token, label = null;

        expectKeyword('continue');

        // Optimize the most common form: 'continue;'.
        if (source[index] === ';') {
            lex();

            if (!state.inIteration) {
                throwError({}, Messages.IllegalContinue);
            }

            return {
                type: Syntax.ContinueStatement,
                label: null
            };
        }

        if (peekLineTerminator()) {
            if (!state.inIteration) {
                throwError({}, Messages.IllegalContinue);
            }

            return {
                type: Syntax.ContinueStatement,
                label: null
            };
        }

        token = lookahead();
        if (token.type === Token.Identifier) {
            label = parseVariableIdentifier();

            if (!Object.prototype.hasOwnProperty.call(state.labelSet, label.name)) {
                throwError({}, Messages.UnknownLabel, label.name);
            }
        }

        consumeSemicolon();

        if (label === null && !state.inIteration) {
            throwError({}, Messages.IllegalContinue);
        }

        return {
            type: Syntax.ContinueStatement,
            label: label
        };
    }

    // 12.8 The break statement

    function parseBreakStatement() {
        var token, label = null;

        expectKeyword('break');

        // Optimize the most common form: 'break;'.
        if (source[index] === ';') {
            lex();

            if (!(state.inIteration || state.inSwitch)) {
                throwError({}, Messages.IllegalBreak);
            }

            return {
                type: Syntax.BreakStatement,
                label: null
            };
        }

        if (peekLineTerminator()) {
            if (!(state.inIteration || state.inSwitch)) {
                throwError({}, Messages.IllegalBreak);
            }

            return {
                type: Syntax.BreakStatement,
                label: null
            };
        }

        token = lookahead();
        if (token.type === Token.Identifier) {
            label = parseVariableIdentifier();

            if (!Object.prototype.hasOwnProperty.call(state.labelSet, label.name)) {
                throwError({}, Messages.UnknownLabel, label.name);
            }
        }

        consumeSemicolon();

        if (label === null && !(state.inIteration || state.inSwitch)) {
            throwError({}, Messages.IllegalBreak);
        }

        return {
            type: Syntax.BreakStatement,
            label: label
        };
    }

    // 12.9 The return statement

    function parseReturnStatement() {
        var token, argument = null;

        expectKeyword('return');

        if (!state.inFunctionBody) {
            throwErrorTolerant({}, Messages.IllegalReturn);
        }

        // 'return' followed by a space and an identifier is very common.
        if (source[index] === ' ') {
            if (isIdentifierStart(source[index + 1])) {
                argument = parseExpression();
                consumeSemicolon();
                return {
                    type: Syntax.ReturnStatement,
                    argument: argument
                };
            }
        }

        if (peekLineTerminator()) {
            return {
                type: Syntax.ReturnStatement,
                argument: null
            };
        }

        if (!match(';')) {
            token = lookahead();
            if (!match('}') && token.type !== Token.EOF) {
                argument = parseExpression();
            }
        }

        consumeSemicolon();

        return {
            type: Syntax.ReturnStatement,
            argument: argument
        };
    }

    // 12.10 The with statement

    function parseWithStatement() {
        var object, body;

        if (strict) {
            throwErrorTolerant({}, Messages.StrictModeWith);
        }

        expectKeyword('with');

        expect('(');

        object = parseExpression();

        expect(')');

        body = parseStatement();

        return {
            type: Syntax.WithStatement,
            object: object,
            body: body
        };
    }

    // 12.10 The swith statement

    function parseSwitchCase() {
        var test,
            consequent = [],
            statement;

        if (matchKeyword('default')) {
            lex();
            test = null;
        } else {
            expectKeyword('case');
            test = parseExpression();
        }
        expect(':');

        while (index < length) {
            if (match('}') || matchKeyword('default') || matchKeyword('case')) {
                break;
            }
            statement = parseStatement();
            if (typeof statement === 'undefined') {
                break;
            }
            consequent.push(statement);
        }

        return {
            type: Syntax.SwitchCase,
            test: test,
            consequent: consequent
        };
    }

    function parseSwitchStatement() {
        var discriminant, cases, clause, oldInSwitch, defaultFound;

        expectKeyword('switch');

        expect('(');

        discriminant = parseExpression();

        expect(')');

        expect('{');

        cases = [];

        if (match('}')) {
            lex();
            return {
                type: Syntax.SwitchStatement,
                discriminant: discriminant,
                cases: cases
            };
        }

        oldInSwitch = state.inSwitch;
        state.inSwitch = true;
        defaultFound = false;

        while (index < length) {
            if (match('}')) {
                break;
            }
            clause = parseSwitchCase();
            if (clause.test === null) {
                if (defaultFound) {
                    throwError({}, Messages.MultipleDefaultsInSwitch);
                }
                defaultFound = true;
            }
            cases.push(clause);
        }

        state.inSwitch = oldInSwitch;

        expect('}');

        return {
            type: Syntax.SwitchStatement,
            discriminant: discriminant,
            cases: cases
        };
    }

    // 12.13 The throw statement

    function parseThrowStatement() {
        var argument;

        expectKeyword('throw');

        if (peekLineTerminator()) {
            throwError({}, Messages.NewlineAfterThrow);
        }

        argument = parseExpression();

        consumeSemicolon();

        return {
            type: Syntax.ThrowStatement,
            argument: argument
        };
    }

    // 12.14 The try statement

    function parseCatchClause() {
        var param;

        expectKeyword('catch');

        expect('(');
        if (match(')')) {
            throwUnexpected(lookahead());
        }

        param = parseVariableIdentifier();
        // 12.14.1
        if (strict && isRestrictedWord(param.name)) {
            throwErrorTolerant({}, Messages.StrictCatchVariable);
        }

        expect(')');

        return {
            type: Syntax.CatchClause,
            param: param,
            body: parseBlock()
        };
    }

    function parseTryStatement() {
        var block, handlers = [], finalizer = null;

        expectKeyword('try');

        block = parseBlock();

        if (matchKeyword('catch')) {
            handlers.push(parseCatchClause());
        }

        if (matchKeyword('finally')) {
            lex();
            finalizer = parseBlock();
        }

        if (handlers.length === 0 && !finalizer) {
            throwError({}, Messages.NoCatchOrFinally);
        }

        return {
            type: Syntax.TryStatement,
            block: block,
            guardedHandlers: [],
            handlers: handlers,
            finalizer: finalizer
        };
    }

    // 12.15 The debugger statement

    function parseDebuggerStatement() {
        expectKeyword('debugger');

        consumeSemicolon();

        return {
            type: Syntax.DebuggerStatement
        };
    }

    // 12 Statements

    function parseStatement() {
        var token = lookahead(),
            expr,
            labeledBody;

        if (token.type === Token.EOF) {
            throwUnexpected(token);
        }

        if (token.type === Token.Punctuator) {
            switch (token.value) {
            case ';':
                return parseEmptyStatement();
            case '{':
                return parseBlock();
            case '(':
                return parseExpressionStatement();
            default:
                break;
            }
        }

        if (token.type === Token.Keyword) {
            switch (token.value) {
            case 'break':
                return parseBreakStatement();
            case 'continue':
                return parseContinueStatement();
            case 'debugger':
                return parseDebuggerStatement();
            case 'do':
                return parseDoWhileStatement();
            case 'for':
                return parseForStatement();
            case 'function':
                return parseFunctionDeclaration();
            case 'if':
                return parseIfStatement();
            case 'return':
                return parseReturnStatement();
            case 'switch':
                return parseSwitchStatement();
            case 'throw':
                return parseThrowStatement();
            case 'try':
                return parseTryStatement();
            case 'var':
                return parseVariableStatement();
            case 'while':
                return parseWhileStatement();
            case 'with':
                return parseWithStatement();
            default:
                break;
            }
        }

        expr = parseExpression();

        // 12.12 Labelled Statements
        if ((expr.type === Syntax.Identifier) && match(':')) {
            lex();

            if (Object.prototype.hasOwnProperty.call(state.labelSet, expr.name)) {
                throwError({}, Messages.Redeclaration, 'Label', expr.name);
            }

            state.labelSet[expr.name] = true;
            labeledBody = parseStatement();
            delete state.labelSet[expr.name];

            return {
                type: Syntax.LabeledStatement,
                label: expr,
                body: labeledBody
            };
        }

        consumeSemicolon();

        return {
            type: Syntax.ExpressionStatement,
            expression: expr
        };
    }

    // 13 Function Definition

    function parseFunctionSourceElements() {
        var sourceElement, sourceElements = [], token, directive, firstRestricted,
            oldLabelSet, oldInIteration, oldInSwitch, oldInFunctionBody;

        expect('{');

        while (index < length) {
            token = lookahead();
            if (token.type !== Token.StringLiteral) {
                break;
            }

            sourceElement = parseSourceElement();
            sourceElements.push(sourceElement);
            if (sourceElement.expression.type !== Syntax.Literal) {
                // this is not directive
                break;
            }
            directive = sliceSource(token.range[0] + 1, token.range[1] - 1);
            if (directive === 'use strict') {
                strict = true;
                if (firstRestricted) {
                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);
                }
            } else {
                if (!firstRestricted && token.octal) {
                    firstRestricted = token;
                }
            }
        }

        oldLabelSet = state.labelSet;
        oldInIteration = state.inIteration;
        oldInSwitch = state.inSwitch;
        oldInFunctionBody = state.inFunctionBody;

        state.labelSet = {};
        state.inIteration = false;
        state.inSwitch = false;
        state.inFunctionBody = true;

        while (index < length) {
            if (match('}')) {
                break;
            }
            sourceElement = parseSourceElement();
            if (typeof sourceElement === 'undefined') {
                break;
            }
            sourceElements.push(sourceElement);
        }

        expect('}');

        state.labelSet = oldLabelSet;
        state.inIteration = oldInIteration;
        state.inSwitch = oldInSwitch;
        state.inFunctionBody = oldInFunctionBody;

        return {
            type: Syntax.BlockStatement,
            body: sourceElements
        };
    }

    function parseFunctionDeclaration() {
        var id, param, params = [], body, token, stricted, firstRestricted, message, previousStrict, paramSet;

        expectKeyword('function');
        token = lookahead();
        id = parseVariableIdentifier();
        if (strict) {
            if (isRestrictedWord(token.value)) {
                throwErrorTolerant(token, Messages.StrictFunctionName);
            }
        } else {
            if (isRestrictedWord(token.value)) {
                firstRestricted = token;
                message = Messages.StrictFunctionName;
            } else if (isStrictModeReservedWord(token.value)) {
                firstRestricted = token;
                message = Messages.StrictReservedWord;
            }
        }

        expect('(');

        if (!match(')')) {
            paramSet = {};
            while (index < length) {
                token = lookahead();
                param = parseVariableIdentifier();
                if (strict) {
                    if (isRestrictedWord(token.value)) {
                        stricted = token;
                        message = Messages.StrictParamName;
                    }
                    if (Object.prototype.hasOwnProperty.call(paramSet, token.value)) {
                        stricted = token;
                        message = Messages.StrictParamDupe;
                    }
                } else if (!firstRestricted) {
                    if (isRestrictedWord(token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictParamName;
                    } else if (isStrictModeReservedWord(token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictReservedWord;
                    } else if (Object.prototype.hasOwnProperty.call(paramSet, token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictParamDupe;
                    }
                }
                params.push(param);
                paramSet[param.name] = true;
                if (match(')')) {
                    break;
                }
                expect(',');
            }
        }

        expect(')');

        previousStrict = strict;
        body = parseFunctionSourceElements();
        if (strict && firstRestricted) {
            throwError(firstRestricted, message);
        }
        if (strict && stricted) {
            throwErrorTolerant(stricted, message);
        }
        strict = previousStrict;

        return {
            type: Syntax.FunctionDeclaration,
            id: id,
            params: params,
            defaults: [],
            body: body,
            rest: null,
            generator: false,
            expression: false
        };
    }

    function parseFunctionExpression() {
        var token, id = null, stricted, firstRestricted, message, param, params = [], body, previousStrict, paramSet;

        expectKeyword('function');

        if (!match('(')) {
            token = lookahead();
            id = parseVariableIdentifier();
            if (strict) {
                if (isRestrictedWord(token.value)) {
                    throwErrorTolerant(token, Messages.StrictFunctionName);
                }
            } else {
                if (isRestrictedWord(token.value)) {
                    firstRestricted = token;
                    message = Messages.StrictFunctionName;
                } else if (isStrictModeReservedWord(token.value)) {
                    firstRestricted = token;
                    message = Messages.StrictReservedWord;
                }
            }
        }

        expect('(');

        if (!match(')')) {
            paramSet = {};
            while (index < length) {
                token = lookahead();
                param = parseVariableIdentifier();
                if (strict) {
                    if (isRestrictedWord(token.value)) {
                        stricted = token;
                        message = Messages.StrictParamName;
                    }
                    if (Object.prototype.hasOwnProperty.call(paramSet, token.value)) {
                        stricted = token;
                        message = Messages.StrictParamDupe;
                    }
                } else if (!firstRestricted) {
                    if (isRestrictedWord(token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictParamName;
                    } else if (isStrictModeReservedWord(token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictReservedWord;
                    } else if (Object.prototype.hasOwnProperty.call(paramSet, token.value)) {
                        firstRestricted = token;
                        message = Messages.StrictParamDupe;
                    }
                }
                params.push(param);
                paramSet[param.name] = true;
                if (match(')')) {
                    break;
                }
                expect(',');
            }
        }

        expect(')');

        previousStrict = strict;
        body = parseFunctionSourceElements();
        if (strict && firstRestricted) {
            throwError(firstRestricted, message);
        }
        if (strict && stricted) {
            throwErrorTolerant(stricted, message);
        }
        strict = previousStrict;

        return {
            type: Syntax.FunctionExpression,
            id: id,
            params: params,
            defaults: [],
            body: body,
            rest: null,
            generator: false,
            expression: false
        };
    }

    // 14 Program

    function parseSourceElement() {
        var token = lookahead();

        if (token.type === Token.Keyword) {
            switch (token.value) {
            case 'const':
            case 'let':
                return parseConstLetDeclaration(token.value);
            case 'function':
                return parseFunctionDeclaration();
            default:
                return parseStatement();
            }
        }

        if (token.type !== Token.EOF) {
            return parseStatement();
        }
    }

    function parseSourceElements() {
        var sourceElement, sourceElements = [], token, directive, firstRestricted;

        while (index < length) {
            token = lookahead();
            if (token.type !== Token.StringLiteral) {
                break;
            }

            sourceElement = parseSourceElement();
            sourceElements.push(sourceElement);
            if (sourceElement.expression.type !== Syntax.Literal) {
                // this is not directive
                break;
            }
            directive = sliceSource(token.range[0] + 1, token.range[1] - 1);
            if (directive === 'use strict') {
                strict = true;
                if (firstRestricted) {
                    throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);
                }
            } else {
                if (!firstRestricted && token.octal) {
                    firstRestricted = token;
                }
            }
        }

        while (index < length) {
            sourceElement = parseSourceElement();
            if (typeof sourceElement === 'undefined') {
                break;
            }
            sourceElements.push(sourceElement);
        }
        return sourceElements;
    }

    function parseProgram() {
        var program;
        strict = false;
        program = {
            type: Syntax.Program,
            body: parseSourceElements()
        };
        return program;
    }

    // The following functions are needed only when the option to preserve
    // the comments is active.

    function addComment(type, value, start, end, loc) {
        assert(typeof start === 'number', 'Comment must have valid position');

        // Because the way the actual token is scanned, often the comments
        // (if any) are skipped twice during the lexical analysis.
        // Thus, we need to skip adding a comment if the comment array already
        // handled it.
        if (extra.comments.length > 0) {
            if (extra.comments[extra.comments.length - 1].range[1] > start) {
                return;
            }
        }

        extra.comments.push({
            type: type,
            value: value,
            range: [start, end],
            loc: loc
        });
    }

    function scanComment() {
        var comment, ch, loc, start, blockComment, lineComment;

        comment = '';
        blockComment = false;
        lineComment = false;

        while (index < length) {
            ch = source[index];

            if (lineComment) {
                ch = source[index++];
                if (isLineTerminator(ch)) {
                    loc.end = {
                        line: lineNumber,
                        column: index - lineStart - 1
                    };
                    lineComment = false;
                    addComment('Line', comment, start, index - 1, loc);
                    if (ch === '\r' && source[index] === '\n') {
                        ++index;
                    }
                    ++lineNumber;
                    lineStart = index;
                    comment = '';
                } else if (index >= length) {
                    lineComment = false;
                    comment += ch;
                    loc.end = {
                        line: lineNumber,
                        column: length - lineStart
                    };
                    addComment('Line', comment, start, length, loc);
                } else {
                    comment += ch;
                }
            } else if (blockComment) {
                if (isLineTerminator(ch)) {
                    if (ch === '\r' && source[index + 1] === '\n') {
                        ++index;
                        comment += '\r\n';
                    } else {
                        comment += ch;
                    }
                    ++lineNumber;
                    ++index;
                    lineStart = index;
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                } else {
                    ch = source[index++];
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                    comment += ch;
                    if (ch === '*') {
                        ch = source[index];
                        if (ch === '/') {
                            comment = comment.substr(0, comment.length - 1);
                            blockComment = false;
                            ++index;
                            loc.end = {
                                line: lineNumber,
                                column: index - lineStart
                            };
                            addComment('Block', comment, start, index, loc);
                            comment = '';
                        }
                    }
                }
            } else if (ch === '/') {
                ch = source[index + 1];
                if (ch === '/') {
                    loc = {
                        start: {
                            line: lineNumber,
                            column: index - lineStart
                        }
                    };
                    start = index;
                    index += 2;
                    lineComment = true;
                    if (index >= length) {
                        loc.end = {
                            line: lineNumber,
                            column: index - lineStart
                        };
                        lineComment = false;
                        addComment('Line', comment, start, index, loc);
                    }
                } else if (ch === '*') {
                    start = index;
                    index += 2;
                    blockComment = true;
                    loc = {
                        start: {
                            line: lineNumber,
                            column: index - lineStart - 2
                        }
                    };
                    if (index >= length) {
                        throwError({}, Messages.UnexpectedToken, 'ILLEGAL');
                    }
                } else {
                    break;
                }
            } else if (isWhiteSpace(ch)) {
                ++index;
            } else if (isLineTerminator(ch)) {
                ++index;
                if (ch ===  '\r' && source[index] === '\n') {
                    ++index;
                }
                ++lineNumber;
                lineStart = index;
            } else {
                break;
            }
        }
    }

    function filterCommentLocation() {
        var i, entry, comment, comments = [];

        for (i = 0; i < extra.comments.length; ++i) {
            entry = extra.comments[i];
            comment = {
                type: entry.type,
                value: entry.value
            };
            if (extra.range) {
                comment.range = entry.range;
            }
            if (extra.loc) {
                comment.loc = entry.loc;
            }
            comments.push(comment);
        }

        extra.comments = comments;
    }

    function collectToken() {
        var start, loc, token, range, value;

        skipComment();
        start = index;
        loc = {
            start: {
                line: lineNumber,
                column: index - lineStart
            }
        };

        token = extra.advance();
        loc.end = {
            line: lineNumber,
            column: index - lineStart
        };

        if (token.type !== Token.EOF) {
            range = [token.range[0], token.range[1]];
            value = sliceSource(token.range[0], token.range[1]);
            extra.tokens.push({
                type: TokenName[token.type],
                value: value,
                range: range,
                loc: loc
            });
        }

        return token;
    }

    function collectRegex() {
        var pos, loc, regex, token;

        skipComment();

        pos = index;
        loc = {
            start: {
                line: lineNumber,
                column: index - lineStart
            }
        };

        regex = extra.scanRegExp();
        loc.end = {
            line: lineNumber,
            column: index - lineStart
        };

        // Pop the previous token, which is likely '/' or '/='
        if (extra.tokens.length > 0) {
            token = extra.tokens[extra.tokens.length - 1];
            if (token.range[0] === pos && token.type === 'Punctuator') {
                if (token.value === '/' || token.value === '/=') {
                    extra.tokens.pop();
                }
            }
        }

        extra.tokens.push({
            type: 'RegularExpression',
            value: regex.literal,
            range: [pos, index],
            loc: loc
        });

        return regex;
    }

    function filterTokenLocation() {
        var i, entry, token, tokens = [];

        for (i = 0; i < extra.tokens.length; ++i) {
            entry = extra.tokens[i];
            token = {
                type: entry.type,
                value: entry.value
            };
            if (extra.range) {
                token.range = entry.range;
            }
            if (extra.loc) {
                token.loc = entry.loc;
            }
            tokens.push(token);
        }

        extra.tokens = tokens;
    }

    function createLiteral(token) {
        return {
            type: Syntax.Literal,
            value: token.value
        };
    }

    function createRawLiteral(token) {
        return {
            type: Syntax.Literal,
            value: token.value,
            raw: sliceSource(token.range[0], token.range[1])
        };
    }

    function createLocationMarker() {
        var marker = {};

        marker.range = [index, index];
        marker.loc = {
            start: {
                line: lineNumber,
                column: index - lineStart
            },
            end: {
                line: lineNumber,
                column: index - lineStart
            }
        };

        marker.end = function () {
            this.range[1] = index;
            this.loc.end.line = lineNumber;
            this.loc.end.column = index - lineStart;
        };

        marker.applyGroup = function (node) {
            if (extra.range) {
                node.groupRange = [this.range[0], this.range[1]];
            }
            if (extra.loc) {
                node.groupLoc = {
                    start: {
                        line: this.loc.start.line,
                        column: this.loc.start.column
                    },
                    end: {
                        line: this.loc.end.line,
                        column: this.loc.end.column
                    }
                };
            }
        };

        marker.apply = function (node) {
            if (extra.range) {
                node.range = [this.range[0], this.range[1]];
            }
            if (extra.loc) {
                node.loc = {
                    start: {
                        line: this.loc.start.line,
                        column: this.loc.start.column
                    },
                    end: {
                        line: this.loc.end.line,
                        column: this.loc.end.column
                    }
                };
            }
        };

        return marker;
    }

    function trackGroupExpression() {
        var marker, expr;

        skipComment();
        marker = createLocationMarker();
        expect('(');

        expr = parseExpression();

        expect(')');

        marker.end();
        marker.applyGroup(expr);

        return expr;
    }

    function trackLeftHandSideExpression() {
        var marker, expr;

        skipComment();
        marker = createLocationMarker();

        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();

        while (match('.') || match('[')) {
            if (match('[')) {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: true,
                    object: expr,
                    property: parseComputedMember()
                };
                marker.end();
                marker.apply(expr);
            } else {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: false,
                    object: expr,
                    property: parseNonComputedMember()
                };
                marker.end();
                marker.apply(expr);
            }
        }

        return expr;
    }

    function trackLeftHandSideExpressionAllowCall() {
        var marker, expr;

        skipComment();
        marker = createLocationMarker();

        expr = matchKeyword('new') ? parseNewExpression() : parsePrimaryExpression();

        while (match('.') || match('[') || match('(')) {
            if (match('(')) {
                expr = {
                    type: Syntax.CallExpression,
                    callee: expr,
                    'arguments': parseArguments()
                };
                marker.end();
                marker.apply(expr);
            } else if (match('[')) {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: true,
                    object: expr,
                    property: parseComputedMember()
                };
                marker.end();
                marker.apply(expr);
            } else {
                expr = {
                    type: Syntax.MemberExpression,
                    computed: false,
                    object: expr,
                    property: parseNonComputedMember()
                };
                marker.end();
                marker.apply(expr);
            }
        }

        return expr;
    }

    function filterGroup(node) {
        var n, i, entry;

        n = (Object.prototype.toString.apply(node) === '[object Array]') ? [] : {};
        for (i in node) {
            if (node.hasOwnProperty(i) && i !== 'groupRange' && i !== 'groupLoc') {
                entry = node[i];
                if (entry === null || typeof entry !== 'object' || entry instanceof RegExp) {
                    n[i] = entry;
                } else {
                    n[i] = filterGroup(entry);
                }
            }
        }
        return n;
    }

    function wrapTrackingFunction(range, loc) {

        return function (parseFunction) {

            function isBinary(node) {
                return node.type === Syntax.LogicalExpression ||
                    node.type === Syntax.BinaryExpression;
            }

            function visit(node) {
                var start, end;

                if (isBinary(node.left)) {
                    visit(node.left);
                }
                if (isBinary(node.right)) {
                    visit(node.right);
                }

                if (range) {
                    if (node.left.groupRange || node.right.groupRange) {
                        start = node.left.groupRange ? node.left.groupRange[0] : node.left.range[0];
                        end = node.right.groupRange ? node.right.groupRange[1] : node.right.range[1];
                        node.range = [start, end];
                    } else if (typeof node.range === 'undefined') {
                        start = node.left.range[0];
                        end = node.right.range[1];
                        node.range = [start, end];
                    }
                }
                if (loc) {
                    if (node.left.groupLoc || node.right.groupLoc) {
                        start = node.left.groupLoc ? node.left.groupLoc.start : node.left.loc.start;
                        end = node.right.groupLoc ? node.right.groupLoc.end : node.right.loc.end;
                        node.loc = {
                            start: start,
                            end: end
                        };
                    } else if (typeof node.loc === 'undefined') {
                        node.loc = {
                            start: node.left.loc.start,
                            end: node.right.loc.end
                        };
                    }
                }
            }

            return function () {
                var marker, node;

                skipComment();

                marker = createLocationMarker();
                node = parseFunction.apply(null, arguments);
                marker.end();

                if (range && typeof node.range === 'undefined') {
                    marker.apply(node);
                }

                if (loc && typeof node.loc === 'undefined') {
                    marker.apply(node);
                }

                if (isBinary(node)) {
                    visit(node);
                }

                return node;
            };
        };
    }

    function patch() {

        var wrapTracking;

        if (extra.comments) {
            extra.skipComment = skipComment;
            skipComment = scanComment;
        }

        if (extra.raw) {
            extra.createLiteral = createLiteral;
            createLiteral = createRawLiteral;
        }

        if (extra.range || extra.loc) {

            extra.parseGroupExpression = parseGroupExpression;
            extra.parseLeftHandSideExpression = parseLeftHandSideExpression;
            extra.parseLeftHandSideExpressionAllowCall = parseLeftHandSideExpressionAllowCall;
            parseGroupExpression = trackGroupExpression;
            parseLeftHandSideExpression = trackLeftHandSideExpression;
            parseLeftHandSideExpressionAllowCall = trackLeftHandSideExpressionAllowCall;

            wrapTracking = wrapTrackingFunction(extra.range, extra.loc);

            extra.parseAdditiveExpression = parseAdditiveExpression;
            extra.parseAssignmentExpression = parseAssignmentExpression;
            extra.parseBitwiseANDExpression = parseBitwiseANDExpression;
            extra.parseBitwiseORExpression = parseBitwiseORExpression;
            extra.parseBitwiseXORExpression = parseBitwiseXORExpression;
            extra.parseBlock = parseBlock;
            extra.parseFunctionSourceElements = parseFunctionSourceElements;
            extra.parseCatchClause = parseCatchClause;
            extra.parseComputedMember = parseComputedMember;
            extra.parseConditionalExpression = parseConditionalExpression;
            extra.parseConstLetDeclaration = parseConstLetDeclaration;
            extra.parseEqualityExpression = parseEqualityExpression;
            extra.parseExpression = parseExpression;
            extra.parseForVariableDeclaration = parseForVariableDeclaration;
            extra.parseFunctionDeclaration = parseFunctionDeclaration;
            extra.parseFunctionExpression = parseFunctionExpression;
            extra.parseLogicalANDExpression = parseLogicalANDExpression;
            extra.parseLogicalORExpression = parseLogicalORExpression;
            extra.parseMultiplicativeExpression = parseMultiplicativeExpression;
            extra.parseNewExpression = parseNewExpression;
            extra.parseNonComputedProperty = parseNonComputedProperty;
            extra.parseObjectProperty = parseObjectProperty;
            extra.parseObjectPropertyKey = parseObjectPropertyKey;
            extra.parsePostfixExpression = parsePostfixExpression;
            extra.parsePrimaryExpression = parsePrimaryExpression;
            extra.parseProgram = parseProgram;
            extra.parsePropertyFunction = parsePropertyFunction;
            extra.parseRelationalExpression = parseRelationalExpression;
            extra.parseStatement = parseStatement;
            extra.parseShiftExpression = parseShiftExpression;
            extra.parseSwitchCase = parseSwitchCase;
            extra.parseUnaryExpression = parseUnaryExpression;
            extra.parseVariableDeclaration = parseVariableDeclaration;
            extra.parseVariableIdentifier = parseVariableIdentifier;

            parseAdditiveExpression = wrapTracking(extra.parseAdditiveExpression);
            parseAssignmentExpression = wrapTracking(extra.parseAssignmentExpression);
            parseBitwiseANDExpression = wrapTracking(extra.parseBitwiseANDExpression);
            parseBitwiseORExpression = wrapTracking(extra.parseBitwiseORExpression);
            parseBitwiseXORExpression = wrapTracking(extra.parseBitwiseXORExpression);
            parseBlock = wrapTracking(extra.parseBlock);
            parseFunctionSourceElements = wrapTracking(extra.parseFunctionSourceElements);
            parseCatchClause = wrapTracking(extra.parseCatchClause);
            parseComputedMember = wrapTracking(extra.parseComputedMember);
            parseConditionalExpression = wrapTracking(extra.parseConditionalExpression);
            parseConstLetDeclaration = wrapTracking(extra.parseConstLetDeclaration);
            parseEqualityExpression = wrapTracking(extra.parseEqualityExpression);
            parseExpression = wrapTracking(extra.parseExpression);
            parseForVariableDeclaration = wrapTracking(extra.parseForVariableDeclaration);
            parseFunctionDeclaration = wrapTracking(extra.parseFunctionDeclaration);
            parseFunctionExpression = wrapTracking(extra.parseFunctionExpression);
            parseLeftHandSideExpression = wrapTracking(parseLeftHandSideExpression);
            parseLogicalANDExpression = wrapTracking(extra.parseLogicalANDExpression);
            parseLogicalORExpression = wrapTracking(extra.parseLogicalORExpression);
            parseMultiplicativeExpression = wrapTracking(extra.parseMultiplicativeExpression);
            parseNewExpression = wrapTracking(extra.parseNewExpression);
            parseNonComputedProperty = wrapTracking(extra.parseNonComputedProperty);
            parseObjectProperty = wrapTracking(extra.parseObjectProperty);
            parseObjectPropertyKey = wrapTracking(extra.parseObjectPropertyKey);
            parsePostfixExpression = wrapTracking(extra.parsePostfixExpression);
            parsePrimaryExpression = wrapTracking(extra.parsePrimaryExpression);
            parseProgram = wrapTracking(extra.parseProgram);
            parsePropertyFunction = wrapTracking(extra.parsePropertyFunction);
            parseRelationalExpression = wrapTracking(extra.parseRelationalExpression);
            parseStatement = wrapTracking(extra.parseStatement);
            parseShiftExpression = wrapTracking(extra.parseShiftExpression);
            parseSwitchCase = wrapTracking(extra.parseSwitchCase);
            parseUnaryExpression = wrapTracking(extra.parseUnaryExpression);
            parseVariableDeclaration = wrapTracking(extra.parseVariableDeclaration);
            parseVariableIdentifier = wrapTracking(extra.parseVariableIdentifier);
        }

        if (typeof extra.tokens !== 'undefined') {
            extra.advance = advance;
            extra.scanRegExp = scanRegExp;

            advance = collectToken;
            scanRegExp = collectRegex;
        }
    }

    function unpatch() {
        if (typeof extra.skipComment === 'function') {
            skipComment = extra.skipComment;
        }

        if (extra.raw) {
            createLiteral = extra.createLiteral;
        }

        if (extra.range || extra.loc) {
            parseAdditiveExpression = extra.parseAdditiveExpression;
            parseAssignmentExpression = extra.parseAssignmentExpression;
            parseBitwiseANDExpression = extra.parseBitwiseANDExpression;
            parseBitwiseORExpression = extra.parseBitwiseORExpression;
            parseBitwiseXORExpression = extra.parseBitwiseXORExpression;
            parseBlock = extra.parseBlock;
            parseFunctionSourceElements = extra.parseFunctionSourceElements;
            parseCatchClause = extra.parseCatchClause;
            parseComputedMember = extra.parseComputedMember;
            parseConditionalExpression = extra.parseConditionalExpression;
            parseConstLetDeclaration = extra.parseConstLetDeclaration;
            parseEqualityExpression = extra.parseEqualityExpression;
            parseExpression = extra.parseExpression;
            parseForVariableDeclaration = extra.parseForVariableDeclaration;
            parseFunctionDeclaration = extra.parseFunctionDeclaration;
            parseFunctionExpression = extra.parseFunctionExpression;
            parseGroupExpression = extra.parseGroupExpression;
            parseLeftHandSideExpression = extra.parseLeftHandSideExpression;
            parseLeftHandSideExpressionAllowCall = extra.parseLeftHandSideExpressionAllowCall;
            parseLogicalANDExpression = extra.parseLogicalANDExpression;
            parseLogicalORExpression = extra.parseLogicalORExpression;
            parseMultiplicativeExpression = extra.parseMultiplicativeExpression;
            parseNewExpression = extra.parseNewExpression;
            parseNonComputedProperty = extra.parseNonComputedProperty;
            parseObjectProperty = extra.parseObjectProperty;
            parseObjectPropertyKey = extra.parseObjectPropertyKey;
            parsePrimaryExpression = extra.parsePrimaryExpression;
            parsePostfixExpression = extra.parsePostfixExpression;
            parseProgram = extra.parseProgram;
            parsePropertyFunction = extra.parsePropertyFunction;
            parseRelationalExpression = extra.parseRelationalExpression;
            parseStatement = extra.parseStatement;
            parseShiftExpression = extra.parseShiftExpression;
            parseSwitchCase = extra.parseSwitchCase;
            parseUnaryExpression = extra.parseUnaryExpression;
            parseVariableDeclaration = extra.parseVariableDeclaration;
            parseVariableIdentifier = extra.parseVariableIdentifier;
        }

        if (typeof extra.scanRegExp === 'function') {
            advance = extra.advance;
            scanRegExp = extra.scanRegExp;
        }
    }

    function stringToArray(str) {
        var length = str.length,
            result = [],
            i;
        for (i = 0; i < length; ++i) {
            result[i] = str.charAt(i);
        }
        return result;
    }

    function parse(code, options) {
        var program, toString;

        toString = String;
        if (typeof code !== 'string' && !(code instanceof String)) {
            code = toString(code);
        }

        source = code;
        index = 0;
        lineNumber = (source.length > 0) ? 1 : 0;
        lineStart = 0;
        length = source.length;
        buffer = null;
        state = {
            allowIn: true,
            labelSet: {},
            inFunctionBody: false,
            inIteration: false,
            inSwitch: false
        };

        extra = {};
        if (typeof options !== 'undefined') {
            extra.range = (typeof options.range === 'boolean') && options.range;
            extra.loc = (typeof options.loc === 'boolean') && options.loc;
            extra.raw = (typeof options.raw === 'boolean') && options.raw;
            if (typeof options.tokens === 'boolean' && options.tokens) {
                extra.tokens = [];
            }
            if (typeof options.comment === 'boolean' && options.comment) {
                extra.comments = [];
            }
            if (typeof options.tolerant === 'boolean' && options.tolerant) {
                extra.errors = [];
            }
        }

        if (length > 0) {
            if (typeof source[0] === 'undefined') {
                // Try first to convert to a string. This is good as fast path
                // for old IE which understands string indexing for string
                // literals only and not for string object.
                if (code instanceof String) {
                    source = code.valueOf();
                }

                // Force accessing the characters via an array.
                if (typeof source[0] === 'undefined') {
                    source = stringToArray(code);
                }
            }
        }

        patch();
        try {
            program = parseProgram();
            if (typeof extra.comments !== 'undefined') {
                filterCommentLocation();
                program.comments = extra.comments;
            }
            if (typeof extra.tokens !== 'undefined') {
                filterTokenLocation();
                program.tokens = extra.tokens;
            }
            if (typeof extra.errors !== 'undefined') {
                program.errors = extra.errors;
            }
            if (extra.range || extra.loc) {
                program.body = filterGroup(program.body);
            }
        } catch (e) {
            throw e;
        } finally {
            unpatch();
            extra = {};
        }

        return program;
    }

    // Sync with package.json.
    exports.version = '1.0.4';

    exports.parse = parse;

    // Deep copy.
    exports.Syntax = (function () {
        var name, types = {};

        if (typeof Object.create === 'function') {
            types = Object.create(null);
        }

        for (name in Syntax) {
            if (Syntax.hasOwnProperty(name)) {
                types[name] = Syntax[name];
            }
        }

        if (typeof Object.freeze === 'function') {
            Object.freeze(types);
        }

        return types;
    }());

}));
/* vim: set sw=4 ts=4 et tw=80 : */

},{}],126:[function(require,module,exports){
module.exports = hoist

function hoist(ast){

  var parentStack = []
  var variables = []
  var functions = []

  if (Array.isArray(ast)){

    walkAll(ast)
    prependScope(ast, variables, functions)
    
  } else {
    walk(ast)
  }

  return ast

  // walk through each node of a program of block statement
  function walkAll(nodes){
    var result = null
    for (var i=0;i<nodes.length;i++){
      var childNode = nodes[i]
      if (childNode.type === 'EmptyStatement') continue
      var result = walk(childNode)
      if (result === 'remove'){
        nodes.splice(i--, 1)
      }
    }
  }

  function walk(node){
    var parent = parentStack[parentStack.length-1]
    var remove = false
    parentStack.push(node)

    var excludeBody = false
    if (shouldScope(node, parent)){
      hoist(node.body)
      excludeBody = true
    }

    if (node.type === 'VariableDeclarator'){
      variables.push(node)
    }

    if (node.type === 'FunctionDeclaration'){
      functions.push(node)
      remove = true
    }

    for (var key in node){
      if (key === 'type' || (excludeBody && key === 'body')) continue
      if (key in node && node[key] && typeof node[key] == 'object'){
        if (node[key].type){
          walk(node[key])
        } else if (Array.isArray(node[key])){
          walkAll(node[key])
        }
      }
    }

    parentStack.pop()
    if (remove){
      return 'remove'
    }
  }
}

function shouldScope(node, parent){
  if (node.type === 'Program'){
    return true
  } else if (node.type === 'BlockStatement'){
    if (parent && (parent.type === 'FunctionExpression' || parent.type === 'FunctionDeclaration')){
      return true
    }
  }
}

function prependScope(nodes, variables, functions){
  if (variables && variables.length){
    var declarations = []
    for (var i=0;i<variables.length;i++){
      declarations.push({
        type: 'VariableDeclarator', 
        id: variables[i].id,
        init: null
      })
    }
    
    nodes.unshift({
      type: 'VariableDeclaration', 
      kind: 'var', 
      declarations: declarations
    })

  }

  if (functions && functions.length){
    for (var i=0;i<functions.length;i++){
      nodes.unshift(functions[i]) 
    }
  }
}
},{}],127:[function(require,module,exports){
var utils = require('./utils')

function Batcher () {
    this.reset()
}

var BatcherProto = Batcher.prototype

BatcherProto.push = function (job) {
    if (!job.id || !this.has[job.id]) {
        this.queue.push(job)
        this.has[job.id] = job
        if (!this.waiting) {
            this.waiting = true
            utils.nextTick(utils.bind(this.flush, this))
        }
    } else if (job.override) {
        var oldJob = this.has[job.id]
        oldJob.cancelled = true
        this.queue.push(job)
        this.has[job.id] = job
    }
}

BatcherProto.flush = function () {
    // before flush hook
    if (this._preFlush) this._preFlush()
    // do not cache length because more jobs might be pushed
    // as we execute existing jobs
    for (var i = 0; i < this.queue.length; i++) {
        var job = this.queue[i]
        if (!job.cancelled) {
            job.execute()
        }
    }
    this.reset()
}

BatcherProto.reset = function () {
    this.has = utils.hash()
    this.queue = []
    this.waiting = false
}

module.exports = Batcher
},{"./utils":152}],128:[function(require,module,exports){
var Batcher        = require('./batcher'),
    bindingBatcher = new Batcher(),
    bindingId      = 1

/**
 *  Binding class.
 *
 *  each property on the viewmodel has one corresponding Binding object
 *  which has multiple directive instances on the DOM
 *  and multiple computed property dependents
 */
function Binding (compiler, key, isExp, isFn) {
    this.id = bindingId++
    this.value = undefined
    this.isExp = !!isExp
    this.isFn = isFn
    this.root = !this.isExp && key.indexOf('.') === -1
    this.compiler = compiler
    this.key = key
    this.dirs = []
    this.subs = []
    this.deps = []
    this.unbound = false
}

var BindingProto = Binding.prototype

/**
 *  Update value and queue instance updates.
 */
BindingProto.update = function (value) {
    if (!this.isComputed || this.isFn) {
        this.value = value
    }
    if (this.dirs.length || this.subs.length) {
        var self = this
        bindingBatcher.push({
            id: this.id,
            execute: function () {
                if (!self.unbound) {
                    self._update()
                }
            }
        })
    }
}

/**
 *  Actually update the directives.
 */
BindingProto._update = function () {
    var i = this.dirs.length,
        value = this.val()
    while (i--) {
        this.dirs[i].$update(value)
    }
    this.pub()
}

/**
 *  Return the valuated value regardless
 *  of whether it is computed or not
 */
BindingProto.val = function () {
    return this.isComputed && !this.isFn
        ? this.value.$get()
        : this.value
}

/**
 *  Notify computed properties that depend on this binding
 *  to update themselves
 */
BindingProto.pub = function () {
    var i = this.subs.length
    while (i--) {
        this.subs[i].update()
    }
}

/**
 *  Unbind the binding, remove itself from all of its dependencies
 */
BindingProto.unbind = function () {
    // Indicate this has been unbound.
    // It's possible this binding will be in
    // the batcher's flush queue when its owner
    // compiler has already been destroyed.
    this.unbound = true
    var i = this.dirs.length
    while (i--) {
        this.dirs[i].$unbind()
    }
    i = this.deps.length
    var subs
    while (i--) {
        subs = this.deps[i].subs
        var j = subs.indexOf(this)
        if (j > -1) subs.splice(j, 1)
    }
}

module.exports = Binding
},{"./batcher":127}],129:[function(require,module,exports){
var Emitter     = require('./emitter'),
    Observer    = require('./observer'),
    config      = require('./config'),
    utils       = require('./utils'),
    Binding     = require('./binding'),
    Directive   = require('./directive'),
    TextParser  = require('./text-parser'),
    DepsParser  = require('./deps-parser'),
    ExpParser   = require('./exp-parser'),
    ViewModel,
    
    // cache methods
    slice       = [].slice,
    extend      = utils.extend,
    hasOwn      = ({}).hasOwnProperty,
    def         = Object.defineProperty,

    // hooks to register
    hooks = [
        'created', 'ready',
        'beforeDestroy', 'afterDestroy',
        'attached', 'detached'
    ],

    // list of priority directives
    // that needs to be checked in specific order
    priorityDirectives = [
        'if',
        'repeat',
        'view',
        'component'
    ]

/**
 *  The DOM compiler
 *  scans a DOM node and compile bindings for a ViewModel
 */
function Compiler (vm, options) {

    var compiler = this,
        key, i

    // default state
    compiler.init       = true
    compiler.destroyed  = false

    // process and extend options
    options = compiler.options = options || {}
    utils.processOptions(options)

    // copy compiler options
    extend(compiler, options.compilerOptions)
    // repeat indicates this is a v-repeat instance
    compiler.repeat   = compiler.repeat || false
    // expCache will be shared between v-repeat instances
    compiler.expCache = compiler.expCache || {}

    // initialize element
    var el = compiler.el = compiler.setupElement(options)
    utils.log('\nnew VM instance: ' + el.tagName + '\n')

    // set other compiler properties
    compiler.vm       = el.vue_vm = vm
    compiler.bindings = utils.hash()
    compiler.dirs     = []
    compiler.deferred = []
    compiler.computed = []
    compiler.children = []
    compiler.emitter  = new Emitter(vm)

    // VM ---------------------------------------------------------------------

    // set VM properties
    vm.$         = {}
    vm.$el       = el
    vm.$options  = options
    vm.$compiler = compiler
    vm.$event    = null

    // set parent & root
    var parentVM = options.parent
    if (parentVM) {
        compiler.parent = parentVM.$compiler
        parentVM.$compiler.children.push(compiler)
        vm.$parent = parentVM
        // inherit lazy option
        if (!('lazy' in options)) {
            options.lazy = compiler.parent.options.lazy
        }
    }
    vm.$root = getRoot(compiler).vm

    // DATA -------------------------------------------------------------------

    // setup observer
    // this is necesarry for all hooks and data observation events
    compiler.setupObserver()

    // create bindings for computed properties
    if (options.methods) {
        for (key in options.methods) {
            compiler.createBinding(key)
        }
    }

    // create bindings for methods
    if (options.computed) {
        for (key in options.computed) {
            compiler.createBinding(key)
        }
    }

    // initialize data
    var data = compiler.data = options.data || {},
        defaultData = options.defaultData
    if (defaultData) {
        for (key in defaultData) {
            if (!hasOwn.call(data, key)) {
                data[key] = defaultData[key]
            }
        }
    }

    // copy paramAttributes
    var params = options.paramAttributes
    if (params) {
        i = params.length
        while (i--) {
            data[params[i]] = utils.checkNumber(
                compiler.eval(
                    el.getAttribute(params[i])
                )
            )
        }
    }

    // copy data properties to vm
    // so user can access them in the created hook
    extend(vm, data)
    vm.$data = data

    // beforeCompile hook
    compiler.execHook('created')

    // the user might have swapped the data ...
    data = compiler.data = vm.$data

    // user might also set some properties on the vm
    // in which case we should copy back to $data
    var vmProp
    for (key in vm) {
        vmProp = vm[key]
        if (
            key.charAt(0) !== '$' &&
            data[key] !== vmProp &&
            typeof vmProp !== 'function'
        ) {
            data[key] = vmProp
        }
    }

    // now we can observe the data.
    // this will convert data properties to getter/setters
    // and emit the first batch of set events, which will
    // in turn create the corresponding bindings.
    compiler.observeData(data)

    // COMPILE ----------------------------------------------------------------

    // before compiling, resolve content insertion points
    if (options.template) {
        this.resolveContent()
    }

    // now parse the DOM and bind directives.
    // During this stage, we will also create bindings for
    // encountered keypaths that don't have a binding yet.
    compiler.compile(el, true)

    // Any directive that creates child VMs are deferred
    // so that when they are compiled, all bindings on the
    // parent VM have been created.
    i = compiler.deferred.length
    while (i--) {
        compiler.bindDirective(compiler.deferred[i])
    }
    compiler.deferred = null

    // extract dependencies for computed properties.
    // this will evaluated all collected computed bindings
    // and collect get events that are emitted.
    if (this.computed.length) {
        DepsParser.parse(this.computed)
    }

    // done!
    compiler.init = false

    // post compile / ready hook
    compiler.execHook('ready')
}

var CompilerProto = Compiler.prototype

/**
 *  Initialize the VM/Compiler's element.
 *  Fill it in with the template if necessary.
 */
CompilerProto.setupElement = function (options) {
    // create the node first
    var el = typeof options.el === 'string'
        ? document.querySelector(options.el)
        : options.el || document.createElement(options.tagName || 'div')

    var template = options.template,
        child, replacer, i, attr, attrs

    if (template) {
        // collect anything already in there
        if (el.hasChildNodes()) {
            this.rawContent = document.createElement('div')
            /* jshint boss: true */
            while (child = el.firstChild) {
                this.rawContent.appendChild(child)
            }
        }
        // replace option: use the first node in
        // the template directly
        if (options.replace && template.firstChild === template.lastChild) {
            replacer = template.firstChild.cloneNode(true)
            if (el.parentNode) {
                el.parentNode.insertBefore(replacer, el)
                el.parentNode.removeChild(el)
            }
            // copy over attributes
            if (el.hasAttributes()) {
                i = el.attributes.length
                while (i--) {
                    attr = el.attributes[i]
                    replacer.setAttribute(attr.name, attr.value)
                }
            }
            // replace
            el = replacer
        } else {
            el.appendChild(template.cloneNode(true))
        }

    }

    // apply element options
    if (options.id) el.id = options.id
    if (options.className) el.className = options.className
    attrs = options.attributes
    if (attrs) {
        for (attr in attrs) {
            el.setAttribute(attr, attrs[attr])
        }
    }

    return el
}

/**
 *  Deal with <content> insertion points
 *  per the Web Components spec
 */
CompilerProto.resolveContent = function () {

    var outlets = slice.call(this.el.getElementsByTagName('content')),
        raw = this.rawContent,
        outlet, select, i, j, main

    i = outlets.length
    if (i) {
        // first pass, collect corresponding content
        // for each outlet.
        while (i--) {
            outlet = outlets[i]
            if (raw) {
                select = outlet.getAttribute('select')
                if (select) { // select content
                    outlet.content =
                        slice.call(raw.querySelectorAll(select))
                } else { // default content
                    main = outlet
                }
            } else { // fallback content
                outlet.content =
                    slice.call(outlet.childNodes)
            }
        }
        // second pass, actually insert the contents
        for (i = 0, j = outlets.length; i < j; i++) {
            outlet = outlets[i]
            if (outlet === main) continue
            insert(outlet, outlet.content)
        }
        // finally insert the main content
        if (raw && main) {
            insert(main, slice.call(raw.childNodes))
        }
    }

    function insert (outlet, contents) {
        var parent = outlet.parentNode,
            i = 0, j = contents.length
        for (; i < j; i++) {
            parent.insertBefore(contents[i], outlet)
        }
        parent.removeChild(outlet)
    }

    this.rawContent = null
}

/**
 *  Setup observer.
 *  The observer listens for get/set/mutate events on all VM
 *  values/objects and trigger corresponding binding updates.
 *  It also listens for lifecycle hooks.
 */
CompilerProto.setupObserver = function () {

    var compiler = this,
        bindings = compiler.bindings,
        options  = compiler.options,
        observer = compiler.observer = new Emitter(compiler.vm)

    // a hash to hold event proxies for each root level key
    // so they can be referenced and removed later
    observer.proxies = {}

    // add own listeners which trigger binding updates
    observer
        .on('get', onGet)
        .on('set', onSet)
        .on('mutate', onSet)

    // register hooks
    var i = hooks.length, j, hook, fns
    while (i--) {
        hook = hooks[i]
        fns = options[hook]
        if (Array.isArray(fns)) {
            j = fns.length
            // since hooks were merged with child at head,
            // we loop reversely.
            while (j--) {
                registerHook(hook, fns[j])
            }
        } else if (fns) {
            registerHook(hook, fns)
        }
    }

    // broadcast attached/detached hooks
    observer
        .on('hook:attached', function () {
            broadcast(1)
        })
        .on('hook:detached', function () {
            broadcast(0)
        })

    function onGet (key) {
        check(key)
        DepsParser.catcher.emit('get', bindings[key])
    }

    function onSet (key, val, mutation) {
        observer.emit('change:' + key, val, mutation)
        check(key)
        bindings[key].update(val)
    }

    function registerHook (hook, fn) {
        observer.on('hook:' + hook, function () {
            fn.call(compiler.vm)
        })
    }

    function broadcast (event) {
        var children = compiler.children
        if (children) {
            var child, i = children.length
            while (i--) {
                child = children[i]
                if (child.el.parentNode) {
                    event = 'hook:' + (event ? 'attached' : 'detached')
                    child.observer.emit(event)
                    child.emitter.emit(event)
                }
            }
        }
    }

    function check (key) {
        if (!bindings[key]) {
            compiler.createBinding(key)
        }
    }
}

CompilerProto.observeData = function (data) {

    var compiler = this,
        observer = compiler.observer

    // recursively observe nested properties
    Observer.observe(data, '', observer)

    // also create binding for top level $data
    // so it can be used in templates too
    var $dataBinding = compiler.bindings['$data'] = new Binding(compiler, '$data')
    $dataBinding.update(data)

    // allow $data to be swapped
    def(compiler.vm, '$data', {
        get: function () {
            compiler.observer.emit('get', '$data')
            return compiler.data
        },
        set: function (newData) {
            var oldData = compiler.data
            Observer.unobserve(oldData, '', observer)
            compiler.data = newData
            Observer.copyPaths(newData, oldData)
            Observer.observe(newData, '', observer)
            update()
        }
    })

    // emit $data change on all changes
    observer
        .on('set', onSet)
        .on('mutate', onSet)

    function onSet (key) {
        if (key !== '$data') update()
    }

    function update () {
        $dataBinding.update(compiler.data)
        observer.emit('change:$data', compiler.data)
    }
}

/**
 *  Compile a DOM node (recursive)
 */
CompilerProto.compile = function (node, root) {
    var nodeType = node.nodeType
    if (nodeType === 1 && node.tagName !== 'SCRIPT') { // a normal node
        this.compileElement(node, root)
    } else if (nodeType === 3 && config.interpolate) {
        this.compileTextNode(node)
    }
}

/**
 *  Check for a priority directive
 *  If it is present and valid, return true to skip the rest
 */
CompilerProto.checkPriorityDir = function (dirname, node, root) {
    var expression, directive, Ctor
    if (
        dirname === 'component' &&
        root !== true &&
        (Ctor = this.resolveComponent(node, undefined, true))
    ) {
        directive = this.parseDirective(dirname, '', node)
        directive.Ctor = Ctor
    } else {
        expression = utils.attr(node, dirname)
        directive = expression && this.parseDirective(dirname, expression, node)
    }
    if (directive) {
        if (root === true) {
            utils.warn(
                'Directive v-' + dirname + ' cannot be used on an already instantiated ' +
                'VM\'s root node. Use it from the parent\'s template instead.'
            )
            return
        }
        this.deferred.push(directive)
        return true
    }
}

/**
 *  Compile normal directives on a node
 */
CompilerProto.compileElement = function (node, root) {

    // textarea is pretty annoying
    // because its value creates childNodes which
    // we don't want to compile.
    if (node.tagName === 'TEXTAREA' && node.value) {
        node.value = this.eval(node.value)
    }

    // only compile if this element has attributes
    // or its tagName contains a hyphen (which means it could
    // potentially be a custom element)
    if (node.hasAttributes() || node.tagName.indexOf('-') > -1) {

        // skip anything with v-pre
        if (utils.attr(node, 'pre') !== null) {
            return
        }

        var i, l, j, k

        // check priority directives.
        // if any of them are present, it will take over the node with a childVM
        // so we can skip the rest
        for (i = 0, l = priorityDirectives.length; i < l; i++) {
            if (this.checkPriorityDir(priorityDirectives[i], node, root)) {
                return
            }
        }

        // check transition & animation properties
        node.vue_trans  = utils.attr(node, 'transition')
        node.vue_anim   = utils.attr(node, 'animation')
        node.vue_effect = this.eval(utils.attr(node, 'effect'))

        var prefix = config.prefix + '-',
            params = this.options.paramAttributes,
            attr, attrname, isDirective, exp, directives, directive, dirname

        // v-with has special priority among the rest
        // it needs to pull in the value from the parent before
        // computed properties are evaluated, because at this stage
        // the computed properties have not set up their dependencies yet.
        if (root) {
            var withExp = utils.attr(node, 'with')
            if (withExp) {
                directives = this.parseDirective('with', withExp, node, true)
                for (j = 0, k = directives.length; j < k; j++) {
                    this.bindDirective(directives[j], this.parent)
                }
            }
        }

        var attrs = slice.call(node.attributes)
        for (i = 0, l = attrs.length; i < l; i++) {

            attr = attrs[i]
            attrname = attr.name
            isDirective = false

            if (attrname.indexOf(prefix) === 0) {
                // a directive - split, parse and bind it.
                isDirective = true
                dirname = attrname.slice(prefix.length)
                // build with multiple: true
                directives = this.parseDirective(dirname, attr.value, node, true)
                // loop through clauses (separated by ",")
                // inside each attribute
                for (j = 0, k = directives.length; j < k; j++) {
                    this.bindDirective(directives[j])
                }
            } else if (config.interpolate) {
                // non directive attribute, check interpolation tags
                exp = TextParser.parseAttr(attr.value)
                if (exp) {
                    directive = this.parseDirective('attr', exp, node)
                    directive.arg = attrname
                    if (params && params.indexOf(attrname) > -1) {
                        // a param attribute... we should use the parent binding
                        // to avoid circular updates like size={{size}}
                        this.bindDirective(directive, this.parent)
                    } else {
                        this.bindDirective(directive)
                    }
                }
            }

            if (isDirective && dirname !== 'cloak') {
                node.removeAttribute(attrname)
            }
        }

    }

    // recursively compile childNodes
    if (node.hasChildNodes()) {
        slice.call(node.childNodes).forEach(this.compile, this)
    }
}

/**
 *  Compile a text node
 */
CompilerProto.compileTextNode = function (node) {

    var tokens = TextParser.parse(node.nodeValue)
    if (!tokens) return
    var el, token, directive

    for (var i = 0, l = tokens.length; i < l; i++) {

        token = tokens[i]
        directive = null

        if (token.key) { // a binding
            if (token.key.charAt(0) === '>') { // a partial
                el = document.createComment('ref')
                directive = this.parseDirective('partial', token.key.slice(1), el)
            } else {
                if (!token.html) { // text binding
                    el = document.createTextNode('')
                    directive = this.parseDirective('text', token.key, el)
                } else { // html binding
                    el = document.createComment(config.prefix + '-html')
                    directive = this.parseDirective('html', token.key, el)
                }
            }
        } else { // a plain string
            el = document.createTextNode(token)
        }

        // insert node
        node.parentNode.insertBefore(el, node)
        // bind directive
        this.bindDirective(directive)

    }
    node.parentNode.removeChild(node)
}

/**
 *  Parse a directive name/value pair into one or more
 *  directive instances
 */
CompilerProto.parseDirective = function (name, value, el, multiple) {
    var compiler = this,
        definition = compiler.getOption('directives', name)
    if (definition) {
        // parse into AST-like objects
        var asts = Directive.parse(value)
        return multiple
            ? asts.map(build)
            : build(asts[0])
    }
    function build (ast) {
        return new Directive(name, ast, definition, compiler, el)
    }
}

/**
 *  Add a directive instance to the correct binding & viewmodel
 */
CompilerProto.bindDirective = function (directive, bindingOwner) {

    if (!directive) return

    // keep track of it so we can unbind() later
    this.dirs.push(directive)

    // for empty or literal directives, simply call its bind()
    // and we're done.
    if (directive.isEmpty || directive.isLiteral) {
        if (directive.bind) directive.bind()
        return
    }

    // otherwise, we got more work to do...
    var binding,
        compiler = bindingOwner || this,
        key      = directive.key

    if (directive.isExp) {
        // expression bindings are always created on current compiler
        binding = compiler.createBinding(key, directive)
    } else {
        // recursively locate which compiler owns the binding
        while (compiler) {
            if (compiler.hasKey(key)) {
                break
            } else {
                compiler = compiler.parent
            }
        }
        compiler = compiler || this
        binding = compiler.bindings[key] || compiler.createBinding(key)
    }
    binding.dirs.push(directive)
    directive.binding = binding

    var value = binding.val()
    // invoke bind hook if exists
    if (directive.bind) {
        directive.bind(value)
    }
    // set initial value
    directive.$update(value, true)
}

/**
 *  Create binding and attach getter/setter for a key to the viewmodel object
 */
CompilerProto.createBinding = function (key, directive) {

    utils.log('  created binding: ' + key)

    var compiler = this,
        methods  = compiler.options.methods,
        isExp    = directive && directive.isExp,
        isFn     = (directive && directive.isFn) || (methods && methods[key]),
        bindings = compiler.bindings,
        computed = compiler.options.computed,
        binding  = new Binding(compiler, key, isExp, isFn)

    if (isExp) {
        // expression bindings are anonymous
        compiler.defineExp(key, binding, directive)
    } else if (isFn) {
        bindings[key] = binding
        compiler.defineVmProp(key, binding, methods[key])
    } else {
        bindings[key] = binding
        if (binding.root) {
            // this is a root level binding. we need to define getter/setters for it.
            if (computed && computed[key]) {
                // computed property
                compiler.defineComputed(key, binding, computed[key])
            } else if (key.charAt(0) !== '$') {
                // normal property
                compiler.defineDataProp(key, binding)
            } else {
                // properties that start with $ are meta properties
                // they should be kept on the vm but not in the data object.
                compiler.defineVmProp(key, binding, compiler.data[key])
                delete compiler.data[key]
            }
        } else if (computed && computed[utils.baseKey(key)]) {
            // nested path on computed property
            compiler.defineExp(key, binding)
        } else {
            // ensure path in data so that computed properties that
            // access the path don't throw an error and can collect
            // dependencies
            Observer.ensurePath(compiler.data, key)
            var parentKey = key.slice(0, key.lastIndexOf('.'))
            if (!bindings[parentKey]) {
                // this is a nested value binding, but the binding for its parent
                // has not been created yet. We better create that one too.
                compiler.createBinding(parentKey)
            }
        }
    }
    return binding
}

/**
 *  Define the getter/setter to proxy a root-level
 *  data property on the VM
 */
CompilerProto.defineDataProp = function (key, binding) {
    var compiler = this,
        data     = compiler.data,
        ob       = data.__emitter__

    // make sure the key is present in data
    // so it can be observed
    if (!(hasOwn.call(data, key))) {
        data[key] = undefined
    }

    // if the data object is already observed, but the key
    // is not observed, we need to add it to the observed keys.
    if (ob && !(hasOwn.call(ob.values, key))) {
        Observer.convertKey(data, key)
    }

    binding.value = data[key]

    def(compiler.vm, key, {
        get: function () {
            return compiler.data[key]
        },
        set: function (val) {
            compiler.data[key] = val
        }
    })
}

/**
 *  Define a vm property, e.g. $index, $key, or mixin methods
 *  which are bindable but only accessible on the VM,
 *  not in the data.
 */
CompilerProto.defineVmProp = function (key, binding, value) {
    var ob = this.observer
    binding.value = value
    def(this.vm, key, {
        get: function () {
            if (Observer.shouldGet) ob.emit('get', key)
            return binding.value
        },
        set: function (val) {
            ob.emit('set', key, val)
        }
    })
}

/**
 *  Define an expression binding, which is essentially
 *  an anonymous computed property
 */
CompilerProto.defineExp = function (key, binding, directive) {
    var computedKey = directive && directive.computedKey,
        exp         = computedKey ? directive.expression : key,
        getter      = this.expCache[exp]
    if (!getter) {
        getter = this.expCache[exp] = ExpParser.parse(computedKey || key, this)
    }
    if (getter) {
        this.markComputed(binding, getter)
    }
}

/**
 *  Define a computed property on the VM
 */
CompilerProto.defineComputed = function (key, binding, value) {
    this.markComputed(binding, value)
    def(this.vm, key, {
        get: binding.value.$get,
        set: binding.value.$set
    })
}

/**
 *  Process a computed property binding
 *  so its getter/setter are bound to proper context
 */
CompilerProto.markComputed = function (binding, value) {
    binding.isComputed = true
    // bind the accessors to the vm
    if (binding.isFn) {
        binding.value = value
    } else {
        if (typeof value === 'function') {
            value = { $get: value }
        }
        binding.value = {
            $get: utils.bind(value.$get, this.vm),
            $set: value.$set
                ? utils.bind(value.$set, this.vm)
                : undefined
        }
    }
    // keep track for dep parsing later
    this.computed.push(binding)
}

/**
 *  Retrive an option from the compiler
 */
CompilerProto.getOption = function (type, id, silent) {
    var opts = this.options,
        parent = this.parent,
        globalAssets = config.globalAssets,
        res = (opts[type] && opts[type][id]) || (
            parent
                ? parent.getOption(type, id, silent)
                : globalAssets[type] && globalAssets[type][id]
        )
    if (!res && !silent && typeof id === 'string') {
        utils.warn('Unknown ' + type.slice(0, -1) + ': ' + id)
    }
    return res
}

/**
 *  Emit lifecycle events to trigger hooks
 */
CompilerProto.execHook = function (event) {
    event = 'hook:' + event
    this.observer.emit(event)
    this.emitter.emit(event)
}

/**
 *  Check if a compiler's data contains a keypath
 */
CompilerProto.hasKey = function (key) {
    var baseKey = utils.baseKey(key)
    return hasOwn.call(this.data, baseKey) ||
        hasOwn.call(this.vm, baseKey)
}

/**
 *  Do a one-time eval of a string that potentially
 *  includes bindings. It accepts additional raw data
 *  because we need to dynamically resolve v-component
 *  before a childVM is even compiled...
 */
CompilerProto.eval = function (exp, data) {
    var parsed = TextParser.parseAttr(exp)
    return parsed
        ? ExpParser.eval(parsed, this, data)
        : exp
}

/**
 *  Resolve a Component constructor for an element
 *  with the data to be used
 */
CompilerProto.resolveComponent = function (node, data, test) {

    // late require to avoid circular deps
    ViewModel = ViewModel || require('./viewmodel')

    var exp     = utils.attr(node, 'component'),
        tagName = node.tagName,
        id      = this.eval(exp, data),
        tagId   = (tagName.indexOf('-') > 0 && tagName.toLowerCase()),
        Ctor    = this.getOption('components', id || tagId, true)

    if (id && !Ctor) {
        utils.warn('Unknown component: ' + id)
    }

    return test
        ? exp === ''
            ? ViewModel
            : Ctor
        : Ctor || ViewModel
}

/**
 *  Unbind and remove element
 */
CompilerProto.destroy = function (noRemove) {

    // avoid being called more than once
    // this is irreversible!
    if (this.destroyed) return

    var compiler = this,
        i, j, key, dir, dirs, binding,
        vm          = compiler.vm,
        el          = compiler.el,
        directives  = compiler.dirs,
        computed    = compiler.computed,
        bindings    = compiler.bindings,
        children    = compiler.children,
        parent      = compiler.parent

    compiler.execHook('beforeDestroy')

    // unobserve data
    Observer.unobserve(compiler.data, '', compiler.observer)

    // destroy all children
    // do not remove their elements since the parent
    // may have transitions and the children may not
    i = children.length
    while (i--) {
        children[i].destroy(true)
    }

    // unbind all direcitves
    i = directives.length
    while (i--) {
        dir = directives[i]
        // if this directive is an instance of an external binding
        // e.g. a directive that refers to a variable on the parent VM
        // we need to remove it from that binding's directives
        // * empty and literal bindings do not have binding.
        if (dir.binding && dir.binding.compiler !== compiler) {
            dirs = dir.binding.dirs
            if (dirs) {
                j = dirs.indexOf(dir)
                if (j > -1) dirs.splice(j, 1)
            }
        }
        dir.$unbind()
    }

    // unbind all computed, anonymous bindings
    i = computed.length
    while (i--) {
        computed[i].unbind()
    }

    // unbind all keypath bindings
    for (key in bindings) {
        binding = bindings[key]
        if (binding) {
            binding.unbind()
        }
    }

    // remove self from parent
    if (parent) {
        j = parent.children.indexOf(compiler)
        if (j > -1) parent.children.splice(j, 1)
    }

    // finally remove dom element
    if (!noRemove) {
        if (el === document.body) {
            el.innerHTML = ''
        } else {
            vm.$remove()
        }
    }
    el.vue_vm = null

    compiler.destroyed = true
    // emit destroy hook
    compiler.execHook('afterDestroy')

    // finally, unregister all listeners
    compiler.observer.off()
    compiler.emitter.off()
}

// Helpers --------------------------------------------------------------------

/**
 *  shorthand for getting root compiler
 */
function getRoot (compiler) {
    while (compiler.parent) {
        compiler = compiler.parent
    }
    return compiler
}

module.exports = Compiler
},{"./binding":128,"./config":130,"./deps-parser":131,"./directive":132,"./emitter":143,"./exp-parser":144,"./observer":148,"./text-parser":150,"./utils":152,"./viewmodel":153}],130:[function(require,module,exports){
var TextParser = require('./text-parser')

module.exports = {
    prefix         : 'v',
    debug          : false,
    silent         : false,
    enterClass     : 'v-enter',
    leaveClass     : 'v-leave',
    interpolate    : true
}

Object.defineProperty(module.exports, 'delimiters', {
    get: function () {
        return TextParser.delimiters
    },
    set: function (delimiters) {
        TextParser.setDelimiters(delimiters)
    }
})
},{"./text-parser":150}],131:[function(require,module,exports){
var Emitter  = require('./emitter'),
    utils    = require('./utils'),
    Observer = require('./observer'),
    catcher  = new Emitter()

/**
 *  Auto-extract the dependencies of a computed property
 *  by recording the getters triggered when evaluating it.
 */
function catchDeps (binding) {
    if (binding.isFn) return
    utils.log('\n- ' + binding.key)
    var got = utils.hash()
    binding.deps = []
    catcher.on('get', function (dep) {
        var has = got[dep.key]
        if (
            // avoid duplicate bindings
            (has && has.compiler === dep.compiler) ||
            // avoid repeated items as dependency
            // only when the binding is from self or the parent chain
            (dep.compiler.repeat && !isParentOf(dep.compiler, binding.compiler))
        ) {
            return
        }
        got[dep.key] = dep
        utils.log('  - ' + dep.key)
        binding.deps.push(dep)
        dep.subs.push(binding)
    })
    binding.value.$get()
    catcher.off('get')
}

/**
 *  Test if A is a parent of or equals B
 */
function isParentOf (a, b) {
    while (b) {
        if (a === b) {
            return true
        }
        b = b.parent
    }
}

module.exports = {

    /**
     *  the observer that catches events triggered by getters
     */
    catcher: catcher,

    /**
     *  parse a list of computed property bindings
     */
    parse: function (bindings) {
        utils.log('\nparsing dependencies...')
        Observer.shouldGet = true
        bindings.forEach(catchDeps)
        Observer.shouldGet = false
        utils.log('\ndone.')
    }
    
}
},{"./emitter":143,"./observer":148,"./utils":152}],132:[function(require,module,exports){
var dirId           = 1,
    ARG_RE          = /^[\w\$-]+$/,
    FILTER_TOKEN_RE = /[^\s'"]+|'[^']+'|"[^"]+"/g,
    NESTING_RE      = /^\$(parent|root)\./,
    SINGLE_VAR_RE   = /^[\w\.$]+$/,
    QUOTE_RE        = /"/g,
    TextParser      = require('./text-parser')

/**
 *  Directive class
 *  represents a single directive instance in the DOM
 */
function Directive (name, ast, definition, compiler, el) {

    this.id             = dirId++
    this.name           = name
    this.compiler       = compiler
    this.vm             = compiler.vm
    this.el             = el
    this.computeFilters = false
    this.key            = ast.key
    this.arg            = ast.arg
    this.expression     = ast.expression

    var isEmpty = this.expression === ''

    // mix in properties from the directive definition
    if (typeof definition === 'function') {
        this[isEmpty ? 'bind' : 'update'] = definition
    } else {
        for (var prop in definition) {
            this[prop] = definition[prop]
        }
    }

    // empty expression, we're done.
    if (isEmpty || this.isEmpty) {
        this.isEmpty = true
        return
    }

    if (TextParser.Regex.test(this.key)) {
        this.key = compiler.eval(this.key)
        if (this.isLiteral) {
            this.expression = this.key
        }
    }

    var filters = ast.filters,
        filter, fn, i, l, computed
    if (filters) {
        this.filters = []
        for (i = 0, l = filters.length; i < l; i++) {
            filter = filters[i]
            fn = this.compiler.getOption('filters', filter.name)
            if (fn) {
                filter.apply = fn
                this.filters.push(filter)
                if (fn.computed) {
                    computed = true
                }
            }
        }
    }

    if (!this.filters || !this.filters.length) {
        this.filters = null
    }

    if (computed) {
        this.computedKey = Directive.inlineFilters(this.key, this.filters)
        this.filters = null
    }

    this.isExp =
        computed ||
        !SINGLE_VAR_RE.test(this.key) ||
        NESTING_RE.test(this.key)

}

var DirProto = Directive.prototype

/**
 *  called when a new value is set 
 *  for computed properties, this will only be called once
 *  during initialization.
 */
DirProto.$update = function (value, init) {
    if (this.$lock) return
    if (init || value !== this.value || (value && typeof value === 'object')) {
        this.value = value
        if (this.update) {
            this.update(
                this.filters && !this.computeFilters
                    ? this.$applyFilters(value)
                    : value,
                init
            )
        }
    }
}

/**
 *  pipe the value through filters
 */
DirProto.$applyFilters = function (value) {
    var filtered = value, filter
    for (var i = 0, l = this.filters.length; i < l; i++) {
        filter = this.filters[i]
        filtered = filter.apply.apply(this.vm, [filtered].concat(filter.args))
    }
    return filtered
}

/**
 *  Unbind diretive
 */
DirProto.$unbind = function () {
    // this can be called before the el is even assigned...
    if (!this.el || !this.vm) return
    if (this.unbind) this.unbind()
    this.vm = this.el = this.binding = this.compiler = null
}

// Exposed static methods -----------------------------------------------------

/**
 *  Parse a directive string into an Array of
 *  AST-like objects representing directives
 */
Directive.parse = function (str) {

    var inSingle = false,
        inDouble = false,
        curly    = 0,
        square   = 0,
        paren    = 0,
        begin    = 0,
        argIndex = 0,
        dirs     = [],
        dir      = {},
        lastFilterIndex = 0,
        arg

    for (var c, i = 0, l = str.length; i < l; i++) {
        c = str.charAt(i)
        if (inSingle) {
            // check single quote
            if (c === "'") inSingle = !inSingle
        } else if (inDouble) {
            // check double quote
            if (c === '"') inDouble = !inDouble
        } else if (c === ',' && !paren && !curly && !square) {
            // reached the end of a directive
            pushDir()
            // reset & skip the comma
            dir = {}
            begin = argIndex = lastFilterIndex = i + 1
        } else if (c === ':' && !dir.key && !dir.arg) {
            // argument
            arg = str.slice(begin, i).trim()
            if (ARG_RE.test(arg)) {
                argIndex = i + 1
                dir.arg = arg
            }
        } else if (c === '|' && str.charAt(i + 1) !== '|' && str.charAt(i - 1) !== '|') {
            if (dir.key === undefined) {
                // first filter, end of key
                lastFilterIndex = i + 1
                dir.key = str.slice(argIndex, i).trim()
            } else {
                // already has filter
                pushFilter()
            }
        } else if (c === '"') {
            inDouble = true
        } else if (c === "'") {
            inSingle = true
        } else if (c === '(') {
            paren++
        } else if (c === ')') {
            paren--
        } else if (c === '[') {
            square++
        } else if (c === ']') {
            square--
        } else if (c === '{') {
            curly++
        } else if (c === '}') {
            curly--
        }
    }
    if (i === 0 || begin !== i) {
        pushDir()
    }

    function pushDir () {
        dir.expression = str.slice(begin, i).trim()
        if (dir.key === undefined) {
            dir.key = str.slice(argIndex, i).trim()
        } else if (lastFilterIndex !== begin) {
            pushFilter()
        }
        if (i === 0 || dir.key) {
            dirs.push(dir)
        }
    }

    function pushFilter () {
        var exp = str.slice(lastFilterIndex, i).trim(),
            filter
        if (exp) {
            filter = {}
            var tokens = exp.match(FILTER_TOKEN_RE)
            filter.name = tokens[0]
            filter.args = tokens.length > 1 ? tokens.slice(1) : null
        }
        if (filter) {
            (dir.filters = dir.filters || []).push(filter)
        }
        lastFilterIndex = i + 1
    }

    return dirs
}

/**
 *  Inline computed filters so they become part
 *  of the expression
 */
Directive.inlineFilters = function (key, filters) {
    var args, filter
    for (var i = 0, l = filters.length; i < l; i++) {
        filter = filters[i]
        args = filter.args
            ? ',"' + filter.args.map(escapeQuote).join('","') + '"'
            : ''
        key = 'this.$compiler.getOption("filters", "' +
                filter.name +
            '").call(this,' +
                key + args +
            ')'
    }
    return key
}

/**
 *  Convert double quotes to single quotes
 *  so they don't mess up the generated function body
 */
function escapeQuote (v) {
    return v.indexOf('"') > -1
        ? v.replace(QUOTE_RE, '\'')
        : v
}

module.exports = Directive
},{"./text-parser":150}],133:[function(require,module,exports){
var utils = require('../utils'),
    slice = [].slice

/**
 *  Binding for innerHTML
 */
module.exports = {

    bind: function () {
        // a comment node means this is a binding for
        // {{{ inline unescaped html }}}
        if (this.el.nodeType === 8) {
            // hold nodes
            this.nodes = []
        }
    },

    update: function (value) {
        value = utils.guard(value)
        if (this.nodes) {
            this.swap(value)
        } else {
            this.el.innerHTML = value
        }
    },

    swap: function (value) {
        var parent = this.el.parentNode,
            nodes  = this.nodes,
            i      = nodes.length
        // remove old nodes
        while (i--) {
            parent.removeChild(nodes[i])
        }
        // convert new value to a fragment
        var frag = utils.toFragment(value)
        // save a reference to these nodes so we can remove later
        this.nodes = slice.call(frag.childNodes)
        parent.insertBefore(frag, this.el)
    }
}
},{"../utils":152}],134:[function(require,module,exports){
var utils    = require('../utils')

/**
 *  Manages a conditional child VM
 */
module.exports = {

    bind: function () {
        
        this.parent = this.el.parentNode
        this.ref    = document.createComment('vue-if')
        this.Ctor   = this.compiler.resolveComponent(this.el)

        // insert ref
        this.parent.insertBefore(this.ref, this.el)
        this.parent.removeChild(this.el)

        if (utils.attr(this.el, 'view')) {
            utils.warn(
                'Conflict: v-if cannot be used together with v-view. ' +
                'Just set v-view\'s binding value to empty string to empty it.'
            )
        }
        if (utils.attr(this.el, 'repeat')) {
            utils.warn(
                'Conflict: v-if cannot be used together with v-repeat. ' +
                'Use `v-show` or the `filterBy` filter instead.'
            )
        }
    },

    update: function (value) {

        if (!value) {
            this.unbind()
        } else if (!this.childVM) {
            this.childVM = new this.Ctor({
                el: this.el.cloneNode(true),
                parent: this.vm
            })
            if (this.compiler.init) {
                this.parent.insertBefore(this.childVM.$el, this.ref)
            } else {
                this.childVM.$before(this.ref)
            }
        }
        
    },

    unbind: function () {
        if (this.childVM) {
            this.childVM.$destroy()
            this.childVM = null
        }
    }
}
},{"../utils":152}],135:[function(require,module,exports){
var utils      = require('../utils'),
    config     = require('../config'),
    transition = require('../transition'),
    directives = module.exports = utils.hash()

/**
 *  Nest and manage a Child VM
 */
directives.component = {
    isLiteral: true,
    bind: function () {
        if (!this.el.vue_vm) {
            this.childVM = new this.Ctor({
                el: this.el,
                parent: this.vm
            })
        }
    },
    unbind: function () {
        if (this.childVM) {
            this.childVM.$destroy()
        }
    }
}

/**
 *  Binding HTML attributes
 */
directives.attr = {
    bind: function () {
        var params = this.vm.$options.paramAttributes
        this.isParam = params && params.indexOf(this.arg) > -1
    },
    update: function (value) {
        if (value || value === 0) {
            this.el.setAttribute(this.arg, value)
        } else {
            this.el.removeAttribute(this.arg)
        }
        if (this.isParam) {
            this.vm[this.arg] = utils.checkNumber(value)
        }
    }
}

/**
 *  Binding textContent
 */
directives.text = {
    bind: function () {
        this.attr = this.el.nodeType === 3
            ? 'nodeValue'
            : 'textContent'
    },
    update: function (value) {
        this.el[this.attr] = utils.guard(value)
    }
}

/**
 *  Binding CSS display property
 */
directives.show = function (value) {
    var el = this.el,
        target = value ? '' : 'none',
        change = function () {
            el.style.display = target
        }
    transition(el, value ? 1 : -1, change, this.compiler)
}

/**
 *  Binding CSS classes
 */
directives['class'] = function (value) {
    if (this.arg) {
        utils[value ? 'addClass' : 'removeClass'](this.el, this.arg)
    } else {
        if (this.lastVal) {
            utils.removeClass(this.el, this.lastVal)
        }
        if (value) {
            utils.addClass(this.el, value)
            this.lastVal = value
        }
    }
}

/**
 *  Only removed after the owner VM is ready
 */
directives.cloak = {
    isEmpty: true,
    bind: function () {
        var el = this.el
        this.compiler.observer.once('hook:ready', function () {
            el.removeAttribute(config.prefix + '-cloak')
        })
    }
}

/**
 *  Store a reference to self in parent VM's $
 */
directives.ref = {
    isLiteral: true,
    bind: function () {
        var id = this.expression
        if (id) {
            this.vm.$parent.$[id] = this.vm
        }
    },
    unbind: function () {
        var id = this.expression
        if (id) {
            delete this.vm.$parent.$[id]
        }
    }
}

directives.on      = require('./on')
directives.repeat  = require('./repeat')
directives.model   = require('./model')
directives['if']   = require('./if')
directives['with'] = require('./with')
directives.html    = require('./html')
directives.style   = require('./style')
directives.partial = require('./partial')
directives.view    = require('./view')
},{"../config":130,"../transition":151,"../utils":152,"./html":133,"./if":134,"./model":136,"./on":137,"./partial":138,"./repeat":139,"./style":140,"./view":141,"./with":142}],136:[function(require,module,exports){
var utils = require('../utils'),
    isIE9 = navigator.userAgent.indexOf('MSIE 9.0') > 0,
    filter = [].filter

/**
 *  Returns an array of values from a multiple select
 */
function getMultipleSelectOptions (select) {
    return filter
        .call(select.options, function (option) {
            return option.selected
        })
        .map(function (option) {
            return option.value || option.text
        })
}

/**
 *  Two-way binding for form input elements
 */
module.exports = {

    bind: function () {

        var self = this,
            el   = self.el,
            type = el.type,
            tag  = el.tagName

        self.lock = false
        self.ownerVM = self.binding.compiler.vm

        // determine what event to listen to
        self.event =
            (self.compiler.options.lazy ||
            tag === 'SELECT' ||
            type === 'checkbox' || type === 'radio')
                ? 'change'
                : 'input'

        // determine the attribute to change when updating
        self.attr = type === 'checkbox'
            ? 'checked'
            : (tag === 'INPUT' || tag === 'SELECT' || tag === 'TEXTAREA')
                ? 'value'
                : 'innerHTML'

        // select[multiple] support
        if(tag === 'SELECT' && el.hasAttribute('multiple')) {
            this.multi = true
        }

        var compositionLock = false
        self.cLock = function () {
            compositionLock = true
        }
        self.cUnlock = function () {
            compositionLock = false
        }
        el.addEventListener('compositionstart', this.cLock)
        el.addEventListener('compositionend', this.cUnlock)

        // attach listener
        self.set = self.filters
            ? function () {
                if (compositionLock) return
                // if this directive has filters
                // we need to let the vm.$set trigger
                // update() so filters are applied.
                // therefore we have to record cursor position
                // so that after vm.$set changes the input
                // value we can put the cursor back at where it is
                var cursorPos
                try { cursorPos = el.selectionStart } catch (e) {}

                self._set()

                // since updates are async
                // we need to reset cursor position async too
                utils.nextTick(function () {
                    if (cursorPos !== undefined) {
                        el.setSelectionRange(cursorPos, cursorPos)
                    }
                })
            }
            : function () {
                if (compositionLock) return
                // no filters, don't let it trigger update()
                self.lock = true

                self._set()

                utils.nextTick(function () {
                    self.lock = false
                })
            }
        el.addEventListener(self.event, self.set)

        // fix shit for IE9
        // since it doesn't fire input on backspace / del / cut
        if (isIE9) {
            self.onCut = function () {
                // cut event fires before the value actually changes
                utils.nextTick(function () {
                    self.set()
                })
            }
            self.onDel = function (e) {
                if (e.keyCode === 46 || e.keyCode === 8) {
                    self.set()
                }
            }
            el.addEventListener('cut', self.onCut)
            el.addEventListener('keyup', self.onDel)
        }
    },

    _set: function () {
        this.ownerVM.$set(
            this.key, this.multi
                ? getMultipleSelectOptions(this.el)
                : this.el[this.attr]
        )
    },

    update: function (value, init) {
        /* jshint eqeqeq: false */
        // sync back inline value if initial data is undefined
        if (init && value === undefined) {
            return this._set()
        }
        if (this.lock) return
        var el = this.el
        if (el.tagName === 'SELECT') { // select dropdown
            el.selectedIndex = -1
            if(this.multi && Array.isArray(value)) {
                value.forEach(this.updateSelect, this)
            } else {
                this.updateSelect(value)
            }
        } else if (el.type === 'radio') { // radio button
            el.checked = value == el.value
        } else if (el.type === 'checkbox') { // checkbox
            el.checked = !!value
        } else {
            el[this.attr] = utils.guard(value)
        }
    },

    updateSelect: function (value) {
        /* jshint eqeqeq: false */
        // setting <select>'s value in IE9 doesn't work
        // we have to manually loop through the options
        var options = this.el.options,
            i = options.length
        while (i--) {
            if (options[i].value == value) {
                options[i].selected = true
                break
            }
        }
    },

    unbind: function () {
        var el = this.el
        el.removeEventListener(this.event, this.set)
        el.removeEventListener('compositionstart', this.cLock)
        el.removeEventListener('compositionend', this.cUnlock)
        if (isIE9) {
            el.removeEventListener('cut', this.onCut)
            el.removeEventListener('keyup', this.onDel)
        }
    }
}
},{"../utils":152}],137:[function(require,module,exports){
var utils    = require('../utils')

/**
 *  Binding for event listeners
 */
module.exports = {

    isFn: true,

    bind: function () {
        this.context = this.binding.isExp
            ? this.vm
            : this.binding.compiler.vm
        if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {
            var self = this
            this.iframeBind = function () {
                self.el.contentWindow.addEventListener(self.arg, self.handler)
            }
            this.el.addEventListener('load', this.iframeBind)
        }
    },

    update: function (handler) {
        if (typeof handler !== 'function') {
            utils.warn('Directive "v-on:' + this.expression + '" expects a method.')
            return
        }
        this.reset()
        var vm = this.vm,
            context = this.context
        this.handler = function (e) {
            e.targetVM = vm
            context.$event = e
            var res = handler.call(context, e)
            context.$event = null
            return res
        }
        if (this.iframeBind) {
            this.iframeBind()
        } else {
            this.el.addEventListener(this.arg, this.handler)
        }
    },

    reset: function () {
        var el = this.iframeBind
            ? this.el.contentWindow
            : this.el
        if (this.handler) {
            el.removeEventListener(this.arg, this.handler)
        }
    },

    unbind: function () {
        this.reset()
        this.el.removeEventListener('load', this.iframeBind)
    }
}
},{"../utils":152}],138:[function(require,module,exports){
var utils = require('../utils')

/**
 *  Binding for partials
 */
module.exports = {

    isLiteral: true,

    bind: function () {

        var id = this.expression
        if (!id) return

        var el       = this.el,
            compiler = this.compiler,
            partial  = compiler.getOption('partials', id)

        if (!partial) {
            if (id === 'yield') {
                utils.warn('{{>yield}} syntax has been deprecated. Use <content> tag instead.')
            }
            return
        }

        partial = partial.cloneNode(true)

        // comment ref node means inline partial
        if (el.nodeType === 8) {

            // keep a ref for the partial's content nodes
            var nodes = [].slice.call(partial.childNodes),
                parent = el.parentNode
            parent.insertBefore(partial, el)
            parent.removeChild(el)
            // compile partial after appending, because its children's parentNode
            // will change from the fragment to the correct parentNode.
            // This could affect directives that need access to its element's parentNode.
            nodes.forEach(compiler.compile, compiler)

        } else {

            // just set innerHTML...
            el.innerHTML = ''
            el.appendChild(partial)

        }
    }

}
},{"../utils":152}],139:[function(require,module,exports){
var utils      = require('../utils'),
    config     = require('../config')

/**
 *  Binding that manages VMs based on an Array
 */
module.exports = {

    bind: function () {

        this.identifier = '$r' + this.id

        // a hash to cache the same expressions on repeated instances
        // so they don't have to be compiled for every single instance
        this.expCache = utils.hash()

        var el   = this.el,
            ctn  = this.container = el.parentNode

        // extract child Id, if any
        this.childId = this.compiler.eval(utils.attr(el, 'ref'))

        // create a comment node as a reference node for DOM insertions
        this.ref = document.createComment(config.prefix + '-repeat-' + this.key)
        ctn.insertBefore(this.ref, el)
        ctn.removeChild(el)

        this.collection = null
        this.vms = null

    },

    update: function (collection) {

        if (!Array.isArray(collection)) {
            if (utils.isObject(collection)) {
                collection = utils.objectToArray(collection)
            } else {
                utils.warn('v-repeat only accepts Array or Object values.')
            }
        }

        // keep reference of old data and VMs
        // so we can reuse them if possible
        this.oldVMs = this.vms
        this.oldCollection = this.collection
        collection = this.collection = collection || []

        var isObject = collection[0] && utils.isObject(collection[0])
        this.vms = this.oldCollection
            ? this.diff(collection, isObject)
            : this.init(collection, isObject)

        if (this.childId) {
            this.vm.$[this.childId] = this.vms
        }

    },

    init: function (collection, isObject) {
        var vm, vms = []
        for (var i = 0, l = collection.length; i < l; i++) {
            vm = this.build(collection[i], i, isObject)
            vms.push(vm)
            if (this.compiler.init) {
                this.container.insertBefore(vm.$el, this.ref)
            } else {
                vm.$before(this.ref)
            }
        }
        return vms
    },

    /**
     *  Diff the new array with the old
     *  and determine the minimum amount of DOM manipulations.
     */
    diff: function (newCollection, isObject) {

        var i, l, item, vm,
            oldIndex,
            targetNext,
            currentNext,
            nextEl,
            ctn    = this.container,
            oldVMs = this.oldVMs,
            vms    = []

        vms.length = newCollection.length

        // first pass, collect new reused and new created
        for (i = 0, l = newCollection.length; i < l; i++) {
            item = newCollection[i]
            if (isObject) {
                item.$index = i
                if (item.__emitter__ && item.__emitter__[this.identifier]) {
                    // this piece of data is being reused.
                    // record its final position in reused vms
                    item.$reused = true
                } else {
                    vms[i] = this.build(item, i, isObject)
                }
            } else {
                // we can't attach an identifier to primitive values
                // so have to do an indexOf...
                oldIndex = indexOf(oldVMs, item)
                if (oldIndex > -1) {
                    // record the position on the existing vm
                    oldVMs[oldIndex].$reused = true
                    oldVMs[oldIndex].$data.$index = i
                } else {
                    vms[i] = this.build(item, i, isObject)
                }
            }
        }

        // second pass, collect old reused and destroy unused
        for (i = 0, l = oldVMs.length; i < l; i++) {
            vm = oldVMs[i]
            item = this.arg
                ? vm.$data[this.arg]
                : vm.$data
            if (item.$reused) {
                vm.$reused = true
                delete item.$reused
            }
            if (vm.$reused) {
                // update the index to latest
                vm.$index = item.$index
                // the item could have had a new key
                if (item.$key && item.$key !== vm.$key) {
                    vm.$key = item.$key
                }
                vms[vm.$index] = vm
            } else {
                // this one can be destroyed.
                if (item.__emitter__) {
                    delete item.__emitter__[this.identifier]
                }
                vm.$destroy()
            }
        }

        // final pass, move/insert DOM elements
        i = vms.length
        while (i--) {
            vm = vms[i]
            item = vm.$data
            targetNext = vms[i + 1]
            if (vm.$reused) {
                nextEl = vm.$el.nextSibling
                // destroyed VMs' element might still be in the DOM
                // due to transitions
                while (!nextEl.vue_vm && nextEl !== this.ref) {
                    nextEl = nextEl.nextSibling
                }
                currentNext = nextEl.vue_vm
                if (currentNext !== targetNext) {
                    if (!targetNext) {
                        ctn.insertBefore(vm.$el, this.ref)
                    } else {
                        nextEl = targetNext.$el
                        // new VMs' element might not be in the DOM yet
                        // due to transitions
                        while (!nextEl.parentNode) {
                            targetNext = vms[nextEl.vue_vm.$index + 1]
                            nextEl = targetNext
                                ? targetNext.$el
                                : this.ref
                        }
                        ctn.insertBefore(vm.$el, nextEl)
                    }
                }
                delete vm.$reused
                delete item.$index
                delete item.$key
            } else { // a new vm
                vm.$before(targetNext ? targetNext.$el : this.ref)
            }
        }

        return vms
    },

    build: function (data, index, isObject) {

        // wrap non-object values
        var raw, alias,
            wrap = !isObject || this.arg
        if (wrap) {
            raw = data
            alias = this.arg || '$value'
            data = {}
            data[alias] = raw
        }
        data.$index = index

        var el = this.el.cloneNode(true),
            Ctor = this.compiler.resolveComponent(el, data),
            vm = new Ctor({
                el: el,
                data: data,
                parent: this.vm,
                compilerOptions: {
                    repeat: true,
                    expCache: this.expCache
                }
            })

        if (isObject) {
            // attach an ienumerable identifier to the raw data
            (raw || data).__emitter__[this.identifier] = true
        }

        return vm

    },

    unbind: function () {
        if (this.childId) {
            delete this.vm.$[this.childId]
        }
        if (this.vms) {
            var i = this.vms.length
            while (i--) {
                this.vms[i].$destroy()
            }
        }
    }
}

// Helpers --------------------------------------------------------------------

/**
 *  Find an object or a wrapped data object
 *  from an Array
 */
function indexOf (vms, obj) {
    for (var vm, i = 0, l = vms.length; i < l; i++) {
        vm = vms[i]
        if (!vm.$reused && vm.$value === obj) {
            return i
        }
    }
    return -1
}
},{"../config":130,"../utils":152}],140:[function(require,module,exports){
var prefixes = ['-webkit-', '-moz-', '-ms-']

/**
 *  Binding for CSS styles
 */
module.exports = {

    bind: function () {
        var prop = this.arg
        if (!prop) return
        if (prop.charAt(0) === '$') {
            // properties that start with $ will be auto-prefixed
            prop = prop.slice(1)
            this.prefixed = true
        }
        this.prop = prop
    },

    update: function (value) {
        var prop = this.prop,
            isImportant
        /* jshint eqeqeq: true */
        // cast possible numbers/booleans into strings
        if (value != null) value += ''
        if (prop) {
            if (value) {
                isImportant = value.slice(-10) === '!important'
                    ? 'important'
                    : ''
                if (isImportant) {
                    value = value.slice(0, -10).trim()
                }
            }
            this.el.style.setProperty(prop, value, isImportant)
            if (this.prefixed) {
                var i = prefixes.length
                while (i--) {
                    this.el.style.setProperty(prefixes[i] + prop, value, isImportant)
                }
            }
        } else {
            this.el.style.cssText = value
        }
    }

}
},{}],141:[function(require,module,exports){
/**
 *  Manages a conditional child VM using the
 *  binding's value as the component ID.
 */
module.exports = {

    bind: function () {

        // track position in DOM with a ref node
        var el       = this.raw = this.el,
            parent   = el.parentNode,
            ref      = this.ref = document.createComment('v-view')
        parent.insertBefore(ref, el)
        parent.removeChild(el)

        // cache original content
        /* jshint boss: true */
        var node,
            frag = this.inner = document.createElement('div')
        while (node = el.firstChild) {
            frag.appendChild(node)
        }

    },

    update: function(value) {

        this.unbind()

        var Ctor  = this.compiler.getOption('components', value)
        if (!Ctor) return

        this.childVM = new Ctor({
            el: this.raw.cloneNode(true),
            parent: this.vm,
            compilerOptions: {
                rawContent: this.inner.cloneNode(true)
            }
        })

        this.el = this.childVM.$el
        if (this.compiler.init) {
            this.ref.parentNode.insertBefore(this.el, this.ref)
        } else {
            this.childVM.$before(this.ref)
        }

    },

    unbind: function() {
        if (this.childVM) {
            this.childVM.$destroy()
        }
    }

}
},{}],142:[function(require,module,exports){
var utils = require('../utils')

/**
 *  Binding for inheriting data from parent VMs.
 */
module.exports = {

    bind: function () {

        var self      = this,
            childKey  = self.arg,
            parentKey = self.key,
            compiler  = self.compiler,
            owner     = self.binding.compiler

        if (compiler === owner) {
            this.alone = true
            return
        }

        if (childKey) {
            if (!compiler.bindings[childKey]) {
                compiler.createBinding(childKey)
            }
            // sync changes on child back to parent
            compiler.observer.on('change:' + childKey, function (val) {
                if (compiler.init) return
                if (!self.lock) {
                    self.lock = true
                    utils.nextTick(function () {
                        self.lock = false
                    })
                }
                owner.vm.$set(parentKey, val)
            })
        }
    },

    update: function (value) {
        // sync from parent
        if (!this.alone && !this.lock) {
            if (this.arg) {
                this.vm.$set(this.arg, value)
            } else if (this.vm.$data !== value) {
                this.vm.$data = value
            }
        }
    }

}
},{"../utils":152}],143:[function(require,module,exports){
var slice = [].slice

function Emitter (ctx) {
    this._ctx = ctx || this
}

var EmitterProto = Emitter.prototype

EmitterProto.on = function (event, fn) {
    this._cbs = this._cbs || {}
    ;(this._cbs[event] = this._cbs[event] || [])
        .push(fn)
    return this
}

EmitterProto.once = function (event, fn) {
    var self = this
    this._cbs = this._cbs || {}

    function on () {
        self.off(event, on)
        fn.apply(this, arguments)
    }

    on.fn = fn
    this.on(event, on)
    return this
}

EmitterProto.off = function (event, fn) {
    this._cbs = this._cbs || {}

    // all
    if (!arguments.length) {
        this._cbs = {}
        return this
    }

    // specific event
    var callbacks = this._cbs[event]
    if (!callbacks) return this

    // remove all handlers
    if (arguments.length === 1) {
        delete this._cbs[event]
        return this
    }

    // remove specific handler
    var cb
    for (var i = 0; i < callbacks.length; i++) {
        cb = callbacks[i]
        if (cb === fn || cb.fn === fn) {
            callbacks.splice(i, 1)
            break
        }
    }
    return this
}

/**
 *  The internal, faster emit with fixed amount of arguments
 *  using Function.call
 */
EmitterProto.emit = function (event, a, b, c) {
    this._cbs = this._cbs || {}
    var callbacks = this._cbs[event]

    if (callbacks) {
        callbacks = callbacks.slice(0)
        for (var i = 0, len = callbacks.length; i < len; i++) {
            callbacks[i].call(this._ctx, a, b, c)
        }
    }

    return this
}

/**
 *  The external emit using Function.apply
 */
EmitterProto.applyEmit = function (event) {
    this._cbs = this._cbs || {}
    var callbacks = this._cbs[event], args

    if (callbacks) {
        callbacks = callbacks.slice(0)
        args = slice.call(arguments, 1)
        for (var i = 0, len = callbacks.length; i < len; i++) {
            callbacks[i].apply(this._ctx, args)
        }
    }

    return this
}

module.exports = Emitter
},{}],144:[function(require,module,exports){
var utils           = require('./utils'),
    notevil         = require('notevil'),
    STR_SAVE_RE     = /"(?:[^"\\]|\\.)*"|'(?:[^'\\]|\\.)*'/g,
    STR_RESTORE_RE  = /"(\d+)"/g,
    NEWLINE_RE      = /\n/g,
    CTOR_RE         = new RegExp('constructor'.split('').join('[\'"+, ]*')),
    UNICODE_RE      = /\\u\d\d\d\d/

// Variable extraction scooped from https://github.com/RubyLouvre/avalon

var KEYWORDS =
        // keywords
        'break,case,catch,continue,debugger,default,delete,do,else,false' +
        ',finally,for,function,if,in,instanceof,new,null,return,switch,this' +
        ',throw,true,try,typeof,var,void,while,with,undefined' +
        // reserved
        ',abstract,boolean,byte,char,class,const,double,enum,export,extends' +
        ',final,float,goto,implements,import,int,interface,long,native' +
        ',package,private,protected,public,short,static,super,synchronized' +
        ',throws,transient,volatile' +
        // ECMA 5 - use strict
        ',arguments,let,yield' +
        // allow using Math in expressions
        ',Math',

    KEYWORDS_RE = new RegExp(["\\b" + KEYWORDS.replace(/,/g, '\\b|\\b') + "\\b"].join('|'), 'g'),
    REMOVE_RE   = /\/\*(?:.|\n)*?\*\/|\/\/[^\n]*\n|\/\/[^\n]*$|'[^']*'|"[^"]*"|[\s\t\n]*\.[\s\t\n]*[$\w\.]+|[\{,]\s*[\w\$_]+\s*:/g,
    SPLIT_RE    = /[^\w$]+/g,
    NUMBER_RE   = /\b\d[^,]*/g,
    BOUNDARY_RE = /^,+|,+$/g

/**
 *  Strip top level variable names from a snippet of JS expression
 */
function getVariables (code) {
    code = code
        .replace(REMOVE_RE, '')
        .replace(SPLIT_RE, ',')
        .replace(KEYWORDS_RE, '')
        .replace(NUMBER_RE, '')
        .replace(BOUNDARY_RE, '')
    return code
        ? code.split(/,+/)
        : []
}

/**
 *  A given path could potentially exist not on the
 *  current compiler, but up in the parent chain somewhere.
 *  This function generates an access relationship string
 *  that can be used in the getter function by walking up
 *  the parent chain to check for key existence.
 *
 *  It stops at top parent if no vm in the chain has the
 *  key. It then creates any missing bindings on the
 *  final resolved vm.
 */
function traceScope (path, compiler, data) {
    var rel  = '',
        dist = 0,
        self = compiler

    if (data && utils.get(data, path) !== undefined) {
        // hack: temporarily attached data
        return '$temp.'
    }

    while (compiler) {
        if (compiler.hasKey(path)) {
            break
        } else {
            compiler = compiler.parent
            dist++
        }
    }
    if (compiler) {
        while (dist--) {
            rel += '$parent.'
        }
        if (!compiler.bindings[path] && path.charAt(0) !== '$') {
            compiler.createBinding(path)
        }
    } else {
        self.createBinding(path)
    }
    return rel
}

/**
 *  Create a function from a string...
 *  this looks like evil magic but since all variables are limited
 *  to the VM's data it's actually properly sandboxed
 */
function makeGetter (exp, raw) {
    var fn
    try {
        fn = notevil.Function(exp)
    } catch (e) {
        utils.warn('Error parsing expression: ' + raw)
    }
    return fn
}

/**
 *  Escape a leading dollar sign for regex construction
 */
function escapeDollar (v) {
    return v.charAt(0) === '$'
        ? '\\' + v
        : v
}

/**
 *  Parse and return an anonymous computed property getter function
 *  from an arbitrary expression, together with a list of paths to be
 *  created as bindings.
 */
exports.parse = function (exp, compiler, data) {
    // unicode and 'constructor' are not allowed for XSS security.
    if (UNICODE_RE.test(exp) || CTOR_RE.test(exp)) {
        utils.warn('Unsafe expression: ' + exp)
        return
    }
    // extract variable names
    var vars = getVariables(exp)
    if (!vars.length) {
        return makeGetter('return ' + exp, exp)
    }
    vars = utils.unique(vars)

    var accessors = '',
        has       = utils.hash(),
        strings   = [],
        // construct a regex to extract all valid variable paths
        // ones that begin with "$" are particularly tricky
        // because we can't use \b for them
        pathRE = new RegExp(
            "[^$\\w\\.](" +
            vars.map(escapeDollar).join('|') +
            ")[$\\w\\.]*\\b", 'g'
        ),
        body = (' ' + exp)
            .replace(STR_SAVE_RE, saveStrings)
            .replace(pathRE, replacePath)
            .replace(STR_RESTORE_RE, restoreStrings)

    body = accessors + 'return ' + body

    function saveStrings (str) {
        var i = strings.length
        // escape newlines in strings so the expression
        // can be correctly evaluated
        strings[i] = str.replace(NEWLINE_RE, '\\n')
        return '"' + i + '"'
    }

    function replacePath (path) {
        // keep track of the first char
        var c = path.charAt(0)
        path = path.slice(1)
        var val = 'this.' + traceScope(path, compiler, data) + path
        if (!has[path]) {
            accessors += val + ';'
            has[path] = 1
        }
        // don't forget to put that first char back
        return c + val
    }

    function restoreStrings (str, i) {
        return strings[i]
    }

    return makeGetter(body, exp)
}

/**
 *  Evaluate an expression in the context of a compiler.
 *  Accepts additional data.
 */
exports.eval = function (exp, compiler, data) {
    var getter = exports.parse(exp, compiler, data), res
    if (getter) {
        // hack: temporarily attach the additional data so
        // it can be accessed in the getter
        compiler.vm.$temp = data
        res = getter.call(compiler.vm)
        delete compiler.vm.$temp
    }
    return res
}

},{"./utils":152,"notevil":122}],145:[function(require,module,exports){
var utils    = require('./utils'),
    get      = utils.get,
    slice    = [].slice,
    QUOTE_RE = /^'.*'$/,
    filters  = module.exports = utils.hash()

/**
 *  'abc' => 'Abc'
 */
filters.capitalize = function (value) {
    if (!value && value !== 0) return ''
    value = value.toString()
    return value.charAt(0).toUpperCase() + value.slice(1)
}

/**
 *  'abc' => 'ABC'
 */
filters.uppercase = function (value) {
    return (value || value === 0)
        ? value.toString().toUpperCase()
        : ''
}

/**
 *  'AbC' => 'abc'
 */
filters.lowercase = function (value) {
    return (value || value === 0)
        ? value.toString().toLowerCase()
        : ''
}

/**
 *  12345 => $12,345.00
 */
filters.currency = function (value, sign) {
    value = parseFloat(value)
    if (!value && value !== 0) return ''
    sign = sign || '$'
    var s = Math.floor(value).toString(),
        i = s.length % 3,
        h = i > 0 ? (s.slice(0, i) + (s.length > 3 ? ',' : '')) : '',
        f = '.' + value.toFixed(2).slice(-2)
    return sign + h + s.slice(i).replace(/(\d{3})(?=\d)/g, '$1,') + f
}

/**
 *  args: an array of strings corresponding to
 *  the single, double, triple ... forms of the word to
 *  be pluralized. When the number to be pluralized
 *  exceeds the length of the args, it will use the last
 *  entry in the array.
 *
 *  e.g. ['single', 'double', 'triple', 'multiple']
 */
filters.pluralize = function (value) {
    var args = slice.call(arguments, 1)
    return args.length > 1
        ? (args[value - 1] || args[args.length - 1])
        : (args[value - 1] || args[0] + 's')
}

/**
 *  A special filter that takes a handler function,
 *  wraps it so it only gets triggered on specific keypresses.
 *
 *  v-on only
 */

var keyCodes = {
    enter    : 13,
    tab      : 9,
    'delete' : 46,
    up       : 38,
    left     : 37,
    right    : 39,
    down     : 40,
    esc      : 27
}

filters.key = function (handler, key) {
    if (!handler) return
    var code = keyCodes[key]
    if (!code) {
        code = parseInt(key, 10)
    }
    return function (e) {
        if (e.keyCode === code) {
            return handler.call(this, e)
        }
    }
}

/**
 *  Filter filter for v-repeat
 */
filters.filterBy = function (arr, searchKey, delimiter, dataKey) {

    // allow optional `in` delimiter
    // because why not
    if (delimiter && delimiter !== 'in') {
        dataKey = delimiter
    }

    // get the search string
    var search = stripQuotes(searchKey) || this.$get(searchKey)
    if (!search) return arr
    search = search.toLowerCase()

    // get the optional dataKey
    dataKey = dataKey && (stripQuotes(dataKey) || this.$get(dataKey))

    // convert object to array
    if (!Array.isArray(arr)) {
        arr = utils.objectToArray(arr)
    }

    return arr.filter(function (item) {
        return dataKey
            ? contains(get(item, dataKey), search)
            : contains(item, search)
    })

}

filters.filterBy.computed = true

/**
 *  Sort fitler for v-repeat
 */
filters.orderBy = function (arr, sortKey, reverseKey) {

    var key = stripQuotes(sortKey) || this.$get(sortKey)
    if (!key) return arr

    // convert object to array
    if (!Array.isArray(arr)) {
        arr = utils.objectToArray(arr)
    }

    var order = 1
    if (reverseKey) {
        if (reverseKey === '-1') {
            order = -1
        } else if (reverseKey.charAt(0) === '!') {
            reverseKey = reverseKey.slice(1)
            order = this.$get(reverseKey) ? 1 : -1
        } else {
            order = this.$get(reverseKey) ? -1 : 1
        }
    }

    // sort on a copy to avoid mutating original array
    return arr.slice().sort(function (a, b) {
        a = get(a, key)
        b = get(b, key)
        return a === b ? 0 : a > b ? order : -order
    })

}

filters.orderBy.computed = true

// Array filter helpers -------------------------------------------------------

/**
 *  String contain helper
 */
function contains (val, search) {
    /* jshint eqeqeq: false */
    if (utils.isObject(val)) {
        for (var key in val) {
            if (contains(val[key], search)) {
                return true
            }
        }
    } else if (val != null) {
        return val.toString().toLowerCase().indexOf(search) > -1
    }
}

/**
 *  Test whether a string is in quotes,
 *  if yes return stripped string
 */
function stripQuotes (str) {
    if (QUOTE_RE.test(str)) {
        return str.slice(1, -1)
    }
}
},{"./utils":152}],146:[function(require,module,exports){
// string -> DOM conversion
// wrappers originally from jQuery, scooped from component/domify
var map = {
    legend   : [1, '<fieldset>', '</fieldset>'],
    tr       : [2, '<table><tbody>', '</tbody></table>'],
    col      : [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
    _default : [0, '', '']
}

map.td =
map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>']

map.option =
map.optgroup = [1, '<select multiple="multiple">', '</select>']

map.thead =
map.tbody =
map.colgroup =
map.caption =
map.tfoot = [1, '<table>', '</table>']

map.text =
map.circle =
map.ellipse =
map.line =
map.path =
map.polygon =
map.polyline =
map.rect = [1, '<svg xmlns="http://www.w3.org/2000/svg" version="1.1">','</svg>']

var TAG_RE = /<([\w:]+)/

module.exports = function (templateString) {
    var frag = document.createDocumentFragment(),
        m = TAG_RE.exec(templateString)
    // text only
    if (!m) {
        frag.appendChild(document.createTextNode(templateString))
        return frag
    }

    var tag = m[1],
        wrap = map[tag] || map._default,
        depth = wrap[0],
        prefix = wrap[1],
        suffix = wrap[2],
        node = document.createElement('div')

    node.innerHTML = prefix + templateString.trim() + suffix
    while (depth--) node = node.lastChild

    // one element
    if (node.firstChild === node.lastChild) {
        frag.appendChild(node.firstChild)
        return frag
    }

    // multiple nodes, return a fragment
    var child
    /* jshint boss: true */
    while (child = node.firstChild) {
        if (node.nodeType === 1) {
            frag.appendChild(child)
        }
    }
    return frag
}
},{}],147:[function(require,module,exports){
var config      = require('./config'),
    ViewModel   = require('./viewmodel'),
    utils       = require('./utils'),
    makeHash    = utils.hash,
    assetTypes  = ['directive', 'filter', 'partial', 'effect', 'component'],
    // Internal modules that are exposed for plugins
    pluginAPI   = {
        utils: utils,
        config: config,
        transition: require('./transition'),
        observer: require('./observer')
    }

ViewModel.options = config.globalAssets = {
    directives  : require('./directives'),
    filters     : require('./filters'),
    partials    : makeHash(),
    effects     : makeHash(),
    components  : makeHash()
}

/**
 *  Expose asset registration methods
 */
assetTypes.forEach(function (type) {
    ViewModel[type] = function (id, value) {
        var hash = this.options[type + 's']
        if (!hash) {
            hash = this.options[type + 's'] = makeHash()
        }
        if (!value) return hash[id]
        if (type === 'partial') {
            value = utils.parseTemplateOption(value)
        } else if (type === 'component') {
            value = utils.toConstructor(value)
        } else if (type === 'filter') {
            utils.checkFilter(value)
        }
        hash[id] = value
        return this
    }
})

/**
 *  Set config options
 */
ViewModel.config = function (opts, val) {
    if (typeof opts === 'string') {
        if (val === undefined) {
            return config[opts]
        } else {
            config[opts] = val
        }
    } else {
        utils.extend(config, opts)
    }
    return this
}

/**
 *  Expose an interface for plugins
 */
ViewModel.use = function (plugin) {
    if (typeof plugin === 'string') {
        try {
            plugin = require(plugin)
        } catch (e) {
            utils.warn('Cannot find plugin: ' + plugin)
            return
        }
    }

    // additional parameters
    var args = [].slice.call(arguments, 1)
    args.unshift(this)

    if (typeof plugin.install === 'function') {
        plugin.install.apply(plugin, args)
    } else {
        plugin.apply(null, args)
    }
    return this
}

/**
 *  Expose internal modules for plugins
 */
ViewModel.require = function (module) {
    return pluginAPI[module]
}

ViewModel.extend = extend
ViewModel.nextTick = utils.nextTick

/**
 *  Expose the main ViewModel class
 *  and add extend method
 */
function extend (options) {

    var ParentVM = this

    // extend data options need to be copied
    // on instantiation
    if (options.data) {
        options.defaultData = options.data
        delete options.data
    }

    // inherit options
    // but only when the super class is not the native Vue.
    if (ParentVM !== ViewModel) {
        options = inheritOptions(options, ParentVM.options, true)
    }
    utils.processOptions(options)

    var ExtendedVM = function (opts, asParent) {
        if (!asParent) {
            opts = inheritOptions(opts, options, true)
        }
        ParentVM.call(this, opts, true)
    }

    // inherit prototype props
    var proto = ExtendedVM.prototype = Object.create(ParentVM.prototype)
    utils.defProtected(proto, 'constructor', ExtendedVM)

    // allow extended VM to be further extended
    ExtendedVM.extend  = extend
    ExtendedVM.super   = ParentVM
    ExtendedVM.options = options

    // allow extended VM to add its own assets
    assetTypes.forEach(function (type) {
        ExtendedVM[type] = ViewModel[type]
    })

    // allow extended VM to use plugins
    ExtendedVM.use     = ViewModel.use
    ExtendedVM.require = ViewModel.require

    return ExtendedVM
}

/**
 *  Inherit options
 *
 *  For options such as `data`, `vms`, `directives`, 'partials',
 *  they should be further extended. However extending should only
 *  be done at top level.
 *  
 *  `proto` is an exception because it's handled directly on the
 *  prototype.
 *
 *  `el` is an exception because it's not allowed as an
 *  extension option, but only as an instance option.
 */
function inheritOptions (child, parent, topLevel) {
    child = child || {}
    if (!parent) return child
    for (var key in parent) {
        if (key === 'el') continue
        var val = child[key],
            parentVal = parent[key]
        if (topLevel && typeof val === 'function' && parentVal) {
            // merge hook functions into an array
            child[key] = [val]
            if (Array.isArray(parentVal)) {
                child[key] = child[key].concat(parentVal)
            } else {
                child[key].push(parentVal)
            }
        } else if (
            topLevel &&
            (utils.isTrueObject(val) || utils.isTrueObject(parentVal))
            && !(parentVal instanceof ViewModel)
        ) {
            // merge toplevel object options
            child[key] = inheritOptions(val, parentVal)
        } else if (val === undefined) {
            // inherit if child doesn't override
            child[key] = parentVal
        }
    }
    return child
}

module.exports = ViewModel
},{"./config":130,"./directives":135,"./filters":145,"./observer":148,"./transition":151,"./utils":152,"./viewmodel":153}],148:[function(require,module,exports){
/* jshint proto:true */

var Emitter  = require('./emitter'),
    utils    = require('./utils'),
    // cache methods
    def      = utils.defProtected,
    isObject = utils.isObject,
    isArray  = Array.isArray,
    hasOwn   = ({}).hasOwnProperty,
    oDef     = Object.defineProperty,
    slice    = [].slice,
    // fix for IE + __proto__ problem
    // define methods as inenumerable if __proto__ is present,
    // otherwise enumerable so we can loop through and manually
    // attach to array instances
    hasProto = ({}).__proto__

// Array Mutation Handlers & Augmentations ------------------------------------

// The proxy prototype to replace the __proto__ of
// an observed array
var ArrayProxy = Object.create(Array.prototype)

// intercept mutation methods
;[
    'push',
    'pop',
    'shift',
    'unshift',
    'splice',
    'sort',
    'reverse'
].forEach(watchMutation)

// Augment the ArrayProxy with convenience methods
def(ArrayProxy, '$set', function (index, data) {
    return this.splice(index, 1, data)[0]
}, !hasProto)

def(ArrayProxy, '$remove', function (index) {
    if (typeof index !== 'number') {
        index = this.indexOf(index)
    }
    if (index > -1) {
        return this.splice(index, 1)[0]
    }
}, !hasProto)

/**
 *  Intercep a mutation event so we can emit the mutation info.
 *  we also analyze what elements are added/removed and link/unlink
 *  them with the parent Array.
 */
function watchMutation (method) {
    def(ArrayProxy, method, function () {

        var args = slice.call(arguments),
            result = Array.prototype[method].apply(this, args),
            inserted, removed

        // determine new / removed elements
        if (method === 'push' || method === 'unshift') {
            inserted = args
        } else if (method === 'pop' || method === 'shift') {
            removed = [result]
        } else if (method === 'splice') {
            inserted = args.slice(2)
            removed = result
        }
        
        // link & unlink
        linkArrayElements(this, inserted)
        unlinkArrayElements(this, removed)

        // emit the mutation event
        this.__emitter__.emit('mutate', '', this, {
            method   : method,
            args     : args,
            result   : result,
            inserted : inserted,
            removed  : removed
        })

        return result
        
    }, !hasProto)
}

/**
 *  Link new elements to an Array, so when they change
 *  and emit events, the owner Array can be notified.
 */
function linkArrayElements (arr, items) {
    if (items) {
        var i = items.length, item, owners
        while (i--) {
            item = items[i]
            if (isWatchable(item)) {
                // if object is not converted for observing
                // convert it...
                if (!item.__emitter__) {
                    convert(item)
                    watch(item)
                }
                owners = item.__emitter__.owners
                if (owners.indexOf(arr) < 0) {
                    owners.push(arr)
                }
            }
        }
    }
}

/**
 *  Unlink removed elements from the ex-owner Array.
 */
function unlinkArrayElements (arr, items) {
    if (items) {
        var i = items.length, item
        while (i--) {
            item = items[i]
            if (item && item.__emitter__) {
                var owners = item.__emitter__.owners
                if (owners) owners.splice(owners.indexOf(arr))
            }
        }
    }
}

// Object add/delete key augmentation -----------------------------------------

var ObjProxy = Object.create(Object.prototype)

def(ObjProxy, '$add', function (key, val) {
    if (hasOwn.call(this, key)) return
    this[key] = val
    convertKey(this, key, true)
}, !hasProto)

def(ObjProxy, '$delete', function (key) {
    if (!(hasOwn.call(this, key))) return
    // trigger set events
    this[key] = undefined
    delete this[key]
    this.__emitter__.emit('delete', key)
}, !hasProto)

// Watch Helpers --------------------------------------------------------------

/**
 *  Check if a value is watchable
 */
function isWatchable (obj) {
    return typeof obj === 'object' && obj && !obj.$compiler
}

/**
 *  Convert an Object/Array to give it a change emitter.
 */
function convert (obj) {
    if (obj.__emitter__) return true
    var emitter = new Emitter()
    def(obj, '__emitter__', emitter)
    emitter
        .on('set', function (key, val, propagate) {
            if (propagate) propagateChange(obj)
        })
        .on('mutate', function () {
            propagateChange(obj)
        })
    emitter.values = utils.hash()
    emitter.owners = []
    return false
}

/**
 *  Propagate an array element's change to its owner arrays
 */
function propagateChange (obj) {
    var owners = obj.__emitter__.owners,
        i = owners.length
    while (i--) {
        owners[i].__emitter__.emit('set', '', '', true)
    }
}

/**
 *  Watch target based on its type
 */
function watch (obj) {
    if (isArray(obj)) {
        watchArray(obj)
    } else {
        watchObject(obj)
    }
}

/**
 *  Augment target objects with modified
 *  methods
 */
function augment (target, src) {
    if (hasProto) {
        target.__proto__ = src
    } else {
        for (var key in src) {
            def(target, key, src[key])
        }
    }
}

/**
 *  Watch an Object, recursive.
 */
function watchObject (obj) {
    augment(obj, ObjProxy)
    for (var key in obj) {
        convertKey(obj, key)
    }
}

/**
 *  Watch an Array, overload mutation methods
 *  and add augmentations by intercepting the prototype chain
 */
function watchArray (arr) {
    augment(arr, ArrayProxy)
    linkArrayElements(arr, arr)
}

/**
 *  Define accessors for a property on an Object
 *  so it emits get/set events.
 *  Then watch the value itself.
 */
function convertKey (obj, key, propagate) {
    var keyPrefix = key.charAt(0)
    if (keyPrefix === '$' || keyPrefix === '_') {
        return
    }
    // emit set on bind
    // this means when an object is observed it will emit
    // a first batch of set events.
    var emitter = obj.__emitter__,
        values  = emitter.values

    init(obj[key], propagate)

    oDef(obj, key, {
        enumerable: true,
        configurable: true,
        get: function () {
            var value = values[key]
            // only emit get on tip values
            if (pub.shouldGet) {
                emitter.emit('get', key)
            }
            return value
        },
        set: function (newVal) {
            var oldVal = values[key]
            unobserve(oldVal, key, emitter)
            copyPaths(newVal, oldVal)
            // an immediate property should notify its parent
            // to emit set for itself too
            init(newVal, true)
        }
    })

    function init (val, propagate) {
        values[key] = val
        emitter.emit('set', key, val, propagate)
        if (isArray(val)) {
            emitter.emit('set', key + '.length', val.length, propagate)
        }
        observe(val, key, emitter)
    }
}

/**
 *  When a value that is already converted is
 *  observed again by another observer, we can skip
 *  the watch conversion and simply emit set event for
 *  all of its properties.
 */
function emitSet (obj) {
    var emitter = obj && obj.__emitter__
    if (!emitter) return
    if (isArray(obj)) {
        emitter.emit('set', 'length', obj.length)
    } else {
        var key, val
        for (key in obj) {
            val = obj[key]
            emitter.emit('set', key, val)
            emitSet(val)
        }
    }
}

/**
 *  Make sure all the paths in an old object exists
 *  in a new object.
 *  So when an object changes, all missing keys will
 *  emit a set event with undefined value.
 */
function copyPaths (newObj, oldObj) {
    if (!isObject(newObj) || !isObject(oldObj)) {
        return
    }
    var path, oldVal, newVal
    for (path in oldObj) {
        if (!(hasOwn.call(newObj, path))) {
            oldVal = oldObj[path]
            if (isArray(oldVal)) {
                newObj[path] = []
            } else if (isObject(oldVal)) {
                newVal = newObj[path] = {}
                copyPaths(newVal, oldVal)
            } else {
                newObj[path] = undefined
            }
        }
    }
}

/**
 *  walk along a path and make sure it can be accessed
 *  and enumerated in that object
 */
function ensurePath (obj, key) {
    var path = key.split('.'), sec
    for (var i = 0, d = path.length - 1; i < d; i++) {
        sec = path[i]
        if (!obj[sec]) {
            obj[sec] = {}
            if (obj.__emitter__) convertKey(obj, sec)
        }
        obj = obj[sec]
    }
    if (isObject(obj)) {
        sec = path[i]
        if (!(hasOwn.call(obj, sec))) {
            obj[sec] = undefined
            if (obj.__emitter__) convertKey(obj, sec)
        }
    }
}

// Main API Methods -----------------------------------------------------------

/**
 *  Observe an object with a given path,
 *  and proxy get/set/mutate events to the provided observer.
 */
function observe (obj, rawPath, observer) {

    if (!isWatchable(obj)) return

    var path = rawPath ? rawPath + '.' : '',
        alreadyConverted = convert(obj),
        emitter = obj.__emitter__

    // setup proxy listeners on the parent observer.
    // we need to keep reference to them so that they
    // can be removed when the object is un-observed.
    observer.proxies = observer.proxies || {}
    var proxies = observer.proxies[path] = {
        get: function (key) {
            observer.emit('get', path + key)
        },
        set: function (key, val, propagate) {
            if (key) observer.emit('set', path + key, val)
            // also notify observer that the object itself changed
            // but only do so when it's a immediate property. this
            // avoids duplicate event firing.
            if (rawPath && propagate) {
                observer.emit('set', rawPath, obj, true)
            }
        },
        mutate: function (key, val, mutation) {
            // if the Array is a root value
            // the key will be null
            var fixedPath = key ? path + key : rawPath
            observer.emit('mutate', fixedPath, val, mutation)
            // also emit set for Array's length when it mutates
            var m = mutation.method
            if (m !== 'sort' && m !== 'reverse') {
                observer.emit('set', fixedPath + '.length', val.length)
            }
        }
    }

    // attach the listeners to the child observer.
    // now all the events will propagate upwards.
    emitter
        .on('get', proxies.get)
        .on('set', proxies.set)
        .on('mutate', proxies.mutate)

    if (alreadyConverted) {
        // for objects that have already been converted,
        // emit set events for everything inside
        emitSet(obj)
    } else {
        watch(obj)
    }
}

/**
 *  Cancel observation, turn off the listeners.
 */
function unobserve (obj, path, observer) {

    if (!obj || !obj.__emitter__) return

    path = path ? path + '.' : ''
    var proxies = observer.proxies[path]
    if (!proxies) return

    // turn off listeners
    obj.__emitter__
        .off('get', proxies.get)
        .off('set', proxies.set)
        .off('mutate', proxies.mutate)

    // remove reference
    observer.proxies[path] = null
}

// Expose API -----------------------------------------------------------------

var pub = module.exports = {

    // whether to emit get events
    // only enabled during dependency parsing
    shouldGet   : false,

    observe     : observe,
    unobserve   : unobserve,
    ensurePath  : ensurePath,
    copyPaths   : copyPaths,
    watch       : watch,
    convert     : convert,
    convertKey  : convertKey
}
},{"./emitter":143,"./utils":152}],149:[function(require,module,exports){
var toFragment = require('./fragment');

/**
 * Parses a template string or node and normalizes it into a
 * a node that can be used as a partial of a template option
 *
 * Possible values include
 * id selector: '#some-template-id'
 * template string: '<div><span>my template</span></div>'
 * DocumentFragment object
 * Node object of type Template
 */
module.exports = function(template) {
    var templateNode;

    if (template instanceof window.DocumentFragment) {
        // if the template is already a document fragment -- do nothing
        return template
    }

    if (typeof template === 'string') {
        // template by ID
        if (template.charAt(0) === '#') {
            templateNode = document.getElementById(template.slice(1))
            if (!templateNode) return
        } else {
            return toFragment(template)
        }
    } else if (template.nodeType) {
        templateNode = template
    } else {
        return
    }

    // if its a template tag and the browser supports it,
    // its content is already a document fragment!
    if (templateNode.tagName === 'TEMPLATE' && templateNode.content) {
        return templateNode.content
    }

    if (templateNode.tagName === 'SCRIPT') {
        return toFragment(templateNode.innerHTML)
    }

    return toFragment(templateNode.outerHTML);
}

},{"./fragment":146}],150:[function(require,module,exports){
var openChar        = '{',
    endChar         = '}',
    ESCAPE_RE       = /[-.*+?^${}()|[\]\/\\]/g,
    // lazy require
    Directive

exports.Regex = buildInterpolationRegex()

function buildInterpolationRegex () {
    var open = escapeRegex(openChar),
        end  = escapeRegex(endChar)
    return new RegExp(open + open + open + '?(.+?)' + end + '?' + end + end)
}

function escapeRegex (str) {
    return str.replace(ESCAPE_RE, '\\$&')
}

function setDelimiters (delimiters) {
    openChar = delimiters[0]
    endChar = delimiters[1]
    exports.delimiters = delimiters
    exports.Regex = buildInterpolationRegex()
}

/** 
 *  Parse a piece of text, return an array of tokens
 *  token types:
 *  1. plain string
 *  2. object with key = binding key
 *  3. object with key & html = true
 */
function parse (text) {
    if (!exports.Regex.test(text)) return null
    var m, i, token, match, tokens = []
    /* jshint boss: true */
    while (m = text.match(exports.Regex)) {
        i = m.index
        if (i > 0) tokens.push(text.slice(0, i))
        token = { key: m[1].trim() }
        match = m[0]
        token.html =
            match.charAt(2) === openChar &&
            match.charAt(match.length - 3) === endChar
        tokens.push(token)
        text = text.slice(i + m[0].length)
    }
    if (text.length) tokens.push(text)
    return tokens
}

/**
 *  Parse an attribute value with possible interpolation tags
 *  return a Directive-friendly expression
 *
 *  e.g.  a {{b}} c  =>  "a " + b + " c"
 */
function parseAttr (attr) {
    Directive = Directive || require('./directive')
    var tokens = parse(attr)
    if (!tokens) return null
    if (tokens.length === 1) return tokens[0].key
    var res = [], token
    for (var i = 0, l = tokens.length; i < l; i++) {
        token = tokens[i]
        res.push(
            token.key
                ? inlineFilters(token.key)
                : ('"' + token + '"')
        )
    }
    return res.join('+')
}

/**
 *  Inlines any possible filters in a binding
 *  so that we can combine everything into a huge expression
 */
function inlineFilters (key) {
    if (key.indexOf('|') > -1) {
        var dirs = Directive.parse(key),
            dir = dirs && dirs[0]
        if (dir && dir.filters) {
            key = Directive.inlineFilters(
                dir.key,
                dir.filters
            )
        }
    }
    return '(' + key + ')'
}

exports.parse         = parse
exports.parseAttr     = parseAttr
exports.setDelimiters = setDelimiters
exports.delimiters    = [openChar, endChar]
},{"./directive":132}],151:[function(require,module,exports){
var endEvents  = sniffEndEvents(),
    config     = require('./config'),
    // batch enter animations so we only force the layout once
    Batcher    = require('./batcher'),
    batcher    = new Batcher(),
    // cache timer functions
    setTO      = window.setTimeout,
    clearTO    = window.clearTimeout,
    // exit codes for testing
    codes = {
        CSS_E     : 1,
        CSS_L     : 2,
        JS_E      : 3,
        JS_L      : 4,
        CSS_SKIP  : -1,
        JS_SKIP   : -2,
        JS_SKIP_E : -3,
        JS_SKIP_L : -4,
        INIT      : -5,
        SKIP      : -6
    }

// force layout before triggering transitions/animations
batcher._preFlush = function () {
    /* jshint unused: false */
    var f = document.body.offsetHeight
}

/**
 *  stage:
 *    1 = enter
 *    2 = leave
 */
var transition = module.exports = function (el, stage, cb, compiler) {

    var changeState = function () {
        cb()
        compiler.execHook(stage > 0 ? 'attached' : 'detached')
    }

    if (compiler.init) {
        changeState()
        return codes.INIT
    }

    var hasTransition = el.vue_trans === '',
        hasAnimation  = el.vue_anim === '',
        effectId      = el.vue_effect

    if (effectId) {
        return applyTransitionFunctions(
            el,
            stage,
            changeState,
            effectId,
            compiler
        )
    } else if (hasTransition || hasAnimation) {
        return applyTransitionClass(
            el,
            stage,
            changeState,
            hasAnimation
        )
    } else {
        changeState()
        return codes.SKIP
    }

}

/**
 *  Togggle a CSS class to trigger transition
 */
function applyTransitionClass (el, stage, changeState, hasAnimation) {

    if (!endEvents.trans) {
        changeState()
        return codes.CSS_SKIP
    }

    // if the browser supports transition,
    // it must have classList...
    var onEnd,
        classList        = el.classList,
        existingCallback = el.vue_trans_cb,
        enterClass       = config.enterClass,
        leaveClass       = config.leaveClass,
        endEvent         = hasAnimation ? endEvents.anim : endEvents.trans

    // cancel unfinished callbacks and jobs
    if (existingCallback) {
        el.removeEventListener(endEvent, existingCallback)
        classList.remove(enterClass)
        classList.remove(leaveClass)
        el.vue_trans_cb = null
    }

    if (stage > 0) { // enter

        // set to enter state before appending
        classList.add(enterClass)
        // append
        changeState()
        // trigger transition
        if (!hasAnimation) {
            batcher.push({
                execute: function () {
                    classList.remove(enterClass)
                }
            })
        } else {
            onEnd = function (e) {
                if (e.target === el) {
                    el.removeEventListener(endEvent, onEnd)
                    el.vue_trans_cb = null
                    classList.remove(enterClass)
                }
            }
            el.addEventListener(endEvent, onEnd)
            el.vue_trans_cb = onEnd
        }
        return codes.CSS_E

    } else { // leave

        if (el.offsetWidth || el.offsetHeight) {
            // trigger hide transition
            classList.add(leaveClass)
            onEnd = function (e) {
                if (e.target === el) {
                    el.removeEventListener(endEvent, onEnd)
                    el.vue_trans_cb = null
                    // actually remove node here
                    changeState()
                    classList.remove(leaveClass)
                }
            }
            // attach transition end listener
            el.addEventListener(endEvent, onEnd)
            el.vue_trans_cb = onEnd
        } else {
            // directly remove invisible elements
            changeState()
        }
        return codes.CSS_L
        
    }

}

function applyTransitionFunctions (el, stage, changeState, effectId, compiler) {

    var funcs = compiler.getOption('effects', effectId)
    if (!funcs) {
        changeState()
        return codes.JS_SKIP
    }

    var enter = funcs.enter,
        leave = funcs.leave,
        timeouts = el.vue_timeouts

    // clear previous timeouts
    if (timeouts) {
        var i = timeouts.length
        while (i--) {
            clearTO(timeouts[i])
        }
    }

    timeouts = el.vue_timeouts = []
    function timeout (cb, delay) {
        var id = setTO(function () {
            cb()
            timeouts.splice(timeouts.indexOf(id), 1)
            if (!timeouts.length) {
                el.vue_timeouts = null
            }
        }, delay)
        timeouts.push(id)
    }

    if (stage > 0) { // enter
        if (typeof enter !== 'function') {
            changeState()
            return codes.JS_SKIP_E
        }
        enter(el, changeState, timeout)
        return codes.JS_E
    } else { // leave
        if (typeof leave !== 'function') {
            changeState()
            return codes.JS_SKIP_L
        }
        leave(el, changeState, timeout)
        return codes.JS_L
    }

}

/**
 *  Sniff proper transition end event name
 */
function sniffEndEvents () {
    var el = document.createElement('vue'),
        defaultEvent = 'transitionend',
        events = {
            'webkitTransition' : 'webkitTransitionEnd',
            'transition'       : defaultEvent,
            'mozTransition'    : defaultEvent
        },
        ret = {}
    for (var name in events) {
        if (el.style[name] !== undefined) {
            ret.trans = events[name]
            break
        }
    }
    ret.anim = el.style.animation === ''
        ? 'animationend'
        : 'webkitAnimationEnd'
    return ret
}

// Expose some stuff for testing purposes
transition.codes = codes
transition.sniff = sniffEndEvents
},{"./batcher":127,"./config":130}],152:[function(require,module,exports){
var config       = require('./config'),
    toString     = ({}).toString,
    win          = window,
    console      = win.console,
    def          = Object.defineProperty,
    OBJECT       = 'object',
    THIS_RE      = /[^\w]this[^\w]/,
    BRACKET_RE_S = /\['([^']+)'\]/g,
    BRACKET_RE_D = /\["([^"]+)"\]/g,
    hasClassList = 'classList' in document.documentElement,
    ViewModel // late def

var defer =
    win.requestAnimationFrame ||
    win.webkitRequestAnimationFrame ||
    win.setTimeout

/**
 *  Normalize keypath with possible brackets into dot notations
 */
function normalizeKeypath (key) {
    return key.indexOf('[') < 0
        ? key
        : key.replace(BRACKET_RE_S, '.$1')
             .replace(BRACKET_RE_D, '.$1')
}

var utils = module.exports = {

    /**
     *  Convert a string template to a dom fragment
     */
    toFragment: require('./fragment'),

    /**
     *  Parse the various types of template options
     */
    parseTemplateOption: require('./template-parser.js'),

    /**
     *  get a value from an object keypath
     */
    get: function (obj, key) {
        /* jshint eqeqeq: false */
        key = normalizeKeypath(key)
        if (key.indexOf('.') < 0) {
            return obj[key]
        }
        var path = key.split('.'),
            d = -1, l = path.length
        while (++d < l && obj != null) {
            obj = obj[path[d]]
        }
        return obj
    },

    /**
     *  set a value to an object keypath
     */
    set: function (obj, key, val) {
        /* jshint eqeqeq: false */
        key = normalizeKeypath(key)
        if (key.indexOf('.') < 0) {
            obj[key] = val
            return
        }
        var path = key.split('.'),
            d = -1, l = path.length - 1
        while (++d < l) {
            if (obj[path[d]] == null) {
                obj[path[d]] = {}
            }
            obj = obj[path[d]]
        }
        obj[path[d]] = val
    },

    /**
     *  return the base segment of a keypath
     */
    baseKey: function (key) {
        return key.indexOf('.') > 0
            ? key.split('.')[0]
            : key
    },

    /**
     *  Create a prototype-less object
     *  which is a better hash/map
     */
    hash: function () {
        return Object.create(null)
    },

    /**
     *  get an attribute and remove it.
     */
    attr: function (el, type) {
        var attr = config.prefix + '-' + type,
            val = el.getAttribute(attr)
        if (val !== null) {
            el.removeAttribute(attr)
        }
        return val
    },

    /**
     *  Define an ienumerable property
     *  This avoids it being included in JSON.stringify
     *  or for...in loops.
     */
    defProtected: function (obj, key, val, enumerable, writable) {
        def(obj, key, {
            value        : val,
            enumerable   : enumerable,
            writable     : writable,
            configurable : true
        })
    },

    /**
     *  A less bullet-proof but more efficient type check
     *  than Object.prototype.toString
     */
    isObject: function (obj) {
        return typeof obj === OBJECT && obj && !Array.isArray(obj)
    },

    /**
     *  A more accurate but less efficient type check
     */
    isTrueObject: function (obj) {
        return toString.call(obj) === '[object Object]'
    },

    /**
     *  Most simple bind
     *  enough for the usecase and fast than native bind()
     */
    bind: function (fn, ctx) {
        return function (arg) {
            return fn.call(ctx, arg)
        }
    },

    /**
     *  Make sure null and undefined output empty string
     */
    guard: function (value) {
        /* jshint eqeqeq: false, eqnull: true */
        return value == null
            ? ''
            : (typeof value == 'object')
                ? JSON.stringify(value)
                : value
    },

    /**
     *  When setting value on the VM, parse possible numbers
     */
    checkNumber: function (value) {
        return (isNaN(value) || value === null || typeof value === 'boolean')
            ? value
            : Number(value)
    },

    /**
     *  simple extend
     */
    extend: function (obj, ext) {
        for (var key in ext) {
            if (obj[key] !== ext[key]) {
                obj[key] = ext[key]
            }
        }
        return obj
    },

    /**
     *  filter an array with duplicates into uniques
     */
    unique: function (arr) {
        var hash = utils.hash(),
            i = arr.length,
            key, res = []
        while (i--) {
            key = arr[i]
            if (hash[key]) continue
            hash[key] = 1
            res.push(key)
        }
        return res
    },

    /**
     *  Convert the object to a ViewModel constructor
     *  if it is not already one
     */
    toConstructor: function (obj) {
        ViewModel = ViewModel || require('./viewmodel')
        return utils.isObject(obj)
            ? ViewModel.extend(obj)
            : typeof obj === 'function'
                ? obj
                : null
    },

    /**
     *  Check if a filter function contains references to `this`
     *  If yes, mark it as a computed filter.
     */
    checkFilter: function (filter) {
        if (THIS_RE.test(filter.toString())) {
            filter.computed = true
        }
    },

    /**
     *  convert certain option values to the desired format.
     */
    processOptions: function (options) {
        var components = options.components,
            partials   = options.partials,
            template   = options.template,
            filters    = options.filters,
            key
        if (components) {
            for (key in components) {
                components[key] = utils.toConstructor(components[key])
            }
        }
        if (partials) {
            for (key in partials) {
                partials[key] = utils.parseTemplateOption(partials[key])
            }
        }
        if (filters) {
            for (key in filters) {
                utils.checkFilter(filters[key])
            }
        }
        if (template) {
            options.template = utils.parseTemplateOption(template)
        }
    },

    /**
     *  used to defer batch updates
     */
    nextTick: function (cb) {
        defer(cb, 0)
    },

    /**
     *  add class for IE9
     *  uses classList if available
     */
    addClass: function (el, cls) {
        if (hasClassList) {
            el.classList.add(cls)
        } else {
            var cur = ' ' + el.className + ' '
            if (cur.indexOf(' ' + cls + ' ') < 0) {
                el.className = (cur + cls).trim()
            }
        }
    },

    /**
     *  remove class for IE9
     */
    removeClass: function (el, cls) {
        if (hasClassList) {
            el.classList.remove(cls)
        } else {
            var cur = ' ' + el.className + ' ',
                tar = ' ' + cls + ' '
            while (cur.indexOf(tar) >= 0) {
                cur = cur.replace(tar, ' ')
            }
            el.className = cur.trim()
        }
    },

    /**
     *  Convert an object to Array
     *  used in v-repeat and array filters
     */
    objectToArray: function (obj) {
        var res = [], val, data
        for (var key in obj) {
            val = obj[key]
            data = utils.isObject(val)
                ? val
                : { $value: val }
            data.$key = key
            res.push(data)
        }
        return res
    }
}

enableDebug()
function enableDebug () {
    /**
     *  log for debugging
     */
    utils.log = function (msg) {
        if (config.debug && console) {
            console.log(msg)
        }
    }
    
    /**
     *  warnings, traces by default
     *  can be suppressed by `silent` option.
     */
    utils.warn = function (msg) {
        if (!config.silent && console) {
            console.warn(msg)
            if (config.debug && console.trace) {
                console.trace()
            }
        }
    }
}
},{"./config":130,"./fragment":146,"./template-parser.js":149,"./viewmodel":153}],153:[function(require,module,exports){
var Compiler   = require('./compiler'),
    utils      = require('./utils'),
    transition = require('./transition'),
    Batcher    = require('./batcher'),
    slice      = [].slice,
    def        = utils.defProtected,
    nextTick   = utils.nextTick,

    // batch $watch callbacks
    watcherBatcher = new Batcher(),
    watcherId      = 1

/**
 *  ViewModel exposed to the user that holds data,
 *  computed properties, event handlers
 *  and a few reserved methods
 */
function ViewModel (options) {
    // compile if options passed, if false return. options are passed directly to compiler
    if (options === false) return
    new Compiler(this, options)
}

// All VM prototype methods are inenumerable
// so it can be stringified/looped through as raw data
var VMProto = ViewModel.prototype

/**
 *  init allows config compilation after instantiation:
 *    var a = new Vue(false)
 *    a.init(config)
 */
def(VMProto, '$init', function (options) {
    new Compiler(this, options)
})

/**
 *  Convenience function to get a value from
 *  a keypath
 */
def(VMProto, '$get', function (key) {
    var val = utils.get(this, key)
    return val === undefined && this.$parent
        ? this.$parent.$get(key)
        : val
})

/**
 *  Convenience function to set an actual nested value
 *  from a flat key string. Used in directives.
 */
def(VMProto, '$set', function (key, value) {
    utils.set(this, key, value)
})

/**
 *  watch a key on the viewmodel for changes
 *  fire callback with new value
 */
def(VMProto, '$watch', function (key, callback) {
    // save a unique id for each watcher
    var id = watcherId++,
        self = this
    function on () {
        var args = slice.call(arguments)
        watcherBatcher.push({
            id: id,
            override: true,
            execute: function () {
                callback.apply(self, args)
            }
        })
    }
    callback._fn = on
    self.$compiler.observer.on('change:' + key, on)
})

/**
 *  unwatch a key
 */
def(VMProto, '$unwatch', function (key, callback) {
    // workaround here
    // since the emitter module checks callback existence
    // by checking the length of arguments
    var args = ['change:' + key],
        ob = this.$compiler.observer
    if (callback) args.push(callback._fn)
    ob.off.apply(ob, args)
})

/**
 *  unbind everything, remove everything
 */
def(VMProto, '$destroy', function (noRemove) {
    this.$compiler.destroy(noRemove)
})

/**
 *  broadcast an event to all child VMs recursively.
 */
def(VMProto, '$broadcast', function () {
    var children = this.$compiler.children,
        i = children.length,
        child
    while (i--) {
        child = children[i]
        child.emitter.applyEmit.apply(child.emitter, arguments)
        child.vm.$broadcast.apply(child.vm, arguments)
    }
})

/**
 *  emit an event that propagates all the way up to parent VMs.
 */
def(VMProto, '$dispatch', function () {
    var compiler = this.$compiler,
        emitter = compiler.emitter,
        parent = compiler.parent
    emitter.applyEmit.apply(emitter, arguments)
    if (parent) {
        parent.vm.$dispatch.apply(parent.vm, arguments)
    }
})

/**
 *  delegate on/off/once to the compiler's emitter
 */
;['emit', 'on', 'off', 'once'].forEach(function (method) {
    // internal emit has fixed number of arguments.
    // exposed emit uses the external version
    // with fn.apply.
    var realMethod = method === 'emit'
        ? 'applyEmit'
        : method
    def(VMProto, '$' + method, function () {
        var emitter = this.$compiler.emitter
        emitter[realMethod].apply(emitter, arguments)
    })
})

// DOM convenience methods

def(VMProto, '$appendTo', function (target, cb) {
    target = query(target)
    var el = this.$el
    transition(el, 1, function () {
        target.appendChild(el)
        if (cb) nextTick(cb)
    }, this.$compiler)
})

def(VMProto, '$remove', function (cb) {
    var el = this.$el
    transition(el, -1, function () {
        if (el.parentNode) {
            el.parentNode.removeChild(el)
        }
        if (cb) nextTick(cb)
    }, this.$compiler)
})

def(VMProto, '$before', function (target, cb) {
    target = query(target)
    var el = this.$el
    transition(el, 1, function () {
        target.parentNode.insertBefore(el, target)
        if (cb) nextTick(cb)
    }, this.$compiler)
})

def(VMProto, '$after', function (target, cb) {
    target = query(target)
    var el = this.$el
    transition(el, 1, function () {
        if (target.nextSibling) {
            target.parentNode.insertBefore(el, target.nextSibling)
        } else {
            target.parentNode.appendChild(el)
        }
        if (cb) nextTick(cb)
    }, this.$compiler)
})

function query (el) {
    return typeof el === 'string'
        ? document.querySelector(el)
        : el
}

module.exports = ViewModel

},{"./batcher":127,"./compiler":129,"./transition":151,"./utils":152}],154:[function(require,module,exports){
/**
 * DEVELOPED BY
 * GIL LOPES BUENO
 * gilbueno.mail@gmail.com
 *
 * WORKS WITH:
 * IE 9+, FF 4+, SF 5+, WebKit, CH 7+, OP 12+, BESEN, Rhino 1.7+
 *
 * FORK:
 * https://github.com/melanke/Watch.JS
 */

"use strict";
(function (factory) {
    if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(factory);
    } else {
        // Browser globals
        window.WatchJS = factory();
        window.watch = window.WatchJS.watch;
        window.unwatch = window.WatchJS.unwatch;
        window.callWatchers = window.WatchJS.callWatchers;
    }
}(function () {

    var WatchJS = {
        noMore: false
    },
    defineWatcher,
    unwatchOne,
    callWatchers;

    var isFunction = function (functionToCheck) {
            var getType = {};
            return functionToCheck && getType.toString.call(functionToCheck) == '[object Function]';
    };

    var isInt = function (x) {
        return x % 1 === 0;
    };

    var isArray = function(obj) {
        return Object.prototype.toString.call(obj) === '[object Array]';
    };

    var isModernBrowser = function () {
        return Object.defineProperty || Object.prototype.__defineGetter__;
    };

    var defineGetAndSet = function (obj, propName, getter, setter) {
        try {
                Object.defineProperty(obj, propName, {
                        get: getter,
                        set: setter,
                        enumerable: true,
                        configurable: true
                });
        } catch(error) {
            try{
                Object.prototype.__defineGetter__.call(obj, propName, getter);
                Object.prototype.__defineSetter__.call(obj, propName, setter);
            }catch(error2){
                throw "watchJS error: browser not supported :/"
            }
        }
    };

    var defineProp = function (obj, propName, value) {
        try {
            Object.defineProperty(obj, propName, {
                enumerable: false,
                configurable: true,
                writable: false,
                value: value
            });
        } catch(error) {
            obj[propName] = value;
        }
    };

    var watch = function () {

        if (isFunction(arguments[1])) {
            watchAll.apply(this, arguments);
        } else if (isArray(arguments[1])) {
            watchMany.apply(this, arguments);
        } else {
            watchOne.apply(this, arguments);
        }

    };


    var watchAll = function (obj, watcher, level) {

        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)
            return;
        }

        var props = [];


        if(isArray(obj)) {
            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array
                props.push(prop); //put in the props
            }
        } else {
            for (var prop2 in obj) { //for each attribute if obj is an object
                props.push(prop2); //put in the props
            }
        }

        watchMany(obj, props, watcher, level); //watch all itens of the props
    };


    var watchMany = function (obj, props, watcher, level) {

        for (var prop in props) { //watch each attribute of "props" if is an object
            watchOne(obj, props[prop], watcher, level);
        }

    };

    var watchOne = function (obj, prop, watcher, level) {

        if(isFunction(obj[prop])) { //dont watch if it is a function
            return;
        }

        if(obj[prop] != null && (level === undefined || level > 0)){
            if(level !== undefined){
                level--;
            }
            watchAll(obj[prop], watcher, level); //recursively watch all attributes of this
        }

        defineWatcher(obj, prop, watcher);

    };

    var unwatch = function () {

        if (isFunction(arguments[1])) {
            unwatchAll.apply(this, arguments);
        } else if (isArray(arguments[1])) {
            unwatchMany.apply(this, arguments);
        } else {
            unwatchOne.apply(this, arguments);
        }

    };

    var unwatchAll = function (obj, watcher) {

        if (obj instanceof String || (!(obj instanceof Object) && !isArray(obj))) { //accepts only objects and array (not string)
            return;
        }

        var props = [];


        if (isArray(obj)) {
            for (var prop = 0; prop < obj.length; prop++) { //for each item if obj is an array
                props.push(prop); //put in the props
            }
        } else {
            for (var prop2 in obj) { //for each attribute if obj is an object
                props.push(prop2); //put in the props
            }
        }

        unwatchMany(obj, props, watcher); //watch all itens of the props
    };


    var unwatchMany = function (obj, props, watcher) {

        for (var prop2 in props) { //watch each attribute of "props" if is an object
            unwatchOne(obj, props[prop2], watcher);
        }
    };

    if(isModernBrowser()){

        defineWatcher = function (obj, prop, watcher) {

            var val = obj[prop];

            watchFunctions(obj, prop);

            if (!obj.watchers) {
                defineProp(obj, "watchers", {});
            }

            if (!obj.watchers[prop]) {
                obj.watchers[prop] = [];
            }


            obj.watchers[prop].push(watcher); //add the new watcher in the watchers array


            var getter = function () {
                return val;
            };


            var setter = function (newval) {
                var oldval = val;
                val = newval;

                if (obj[prop]){
                    watchAll(obj[prop], watcher);
                }

                watchFunctions(obj, prop);

                if (!WatchJS.noMore){
                    if (JSON.stringify(oldval) !== JSON.stringify(newval)) {
                        callWatchers(obj, prop, "set", newval, oldval);
                        WatchJS.noMore = false;
                    }
                }
            };

            defineGetAndSet(obj, prop, getter, setter);

        };

        callWatchers = function (obj, prop, action, newval, oldval) {

            for (var wr in obj.watchers[prop]) {
                if (isInt(wr)){
                    obj.watchers[prop][wr].call(obj, prop, action, newval, oldval);
                }
            }
        };

        // @todo code related to "watchFunctions" is certainly buggy
        var methodNames = ['pop', 'push', 'reverse', 'shift', 'sort', 'slice', 'unshift'];
        var defineArrayMethodWatcher = function (obj, prop, original, methodName) {
            defineProp(obj[prop], methodName, function () {
                var response = original.apply(obj[prop], arguments);
                watchOne(obj, obj[prop]);
                if (methodName !== 'slice') {
                    callWatchers(obj, prop, methodName,arguments);
                }
                return response;
            });
        };

        var watchFunctions = function(obj, prop) {

            if ((!obj[prop]) || (obj[prop] instanceof String) || (!isArray(obj[prop]))) {
                return;
            }

            for (var i = methodNames.length, methodName; i--;) {
                methodName = methodNames[i];
                defineArrayMethodWatcher(obj, prop, obj[prop][methodName], methodName);
            }

        };

        unwatchOne = function (obj, prop, watcher) {
            for(var i in obj.watchers[prop]){
                var w = obj.watchers[prop][i];

                if(w == watcher) {
                    obj.watchers[prop].splice(i, 1);
                }
            }
        };

    } else {
        //this implementation dont work because it cant handle the gap between "settings".
        //I mean, if you use a setter for an attribute after another setter of the same attribute it will only fire the second
        //but I think we could think something to fix it

        var subjects = [];

        defineWatcher = function(obj, prop, watcher){

            subjects.push({
                obj: obj,
                prop: prop,
                serialized: JSON.stringify(obj[prop]),
                watcher: watcher
            });

        };

        unwatchOne = function (obj, prop, watcher) {

            for (var i in subjects) {
                var subj = subjects[i];

                if (subj.obj == obj && subj.prop == prop && subj.watcher == watcher) {
                    subjects.splice(i, 1);
                }

            }

        };

        callWatchers = function (obj, prop, action, value) {

            for (var i in subjects) {
                var subj = subjects[i];

                if (subj.obj == obj && subj.prop == prop) {
                    subj.watcher.call(obj, prop, action, value);
                }

            }

        };

        var loop = function(){

            for(var i in subjects){

                var subj = subjects[i];
                var newSer = JSON.stringify(subj.obj[subj.prop]);
                if(newSer != subj.serialized){
                    subj.watcher.call(subj.obj, subj.prop, subj.obj[subj.prop], JSON.parse(subj.serialized));
                    subj.serialized = newSer;
                }

            }

        };

        setInterval(loop, 50);

    }

    WatchJS.watch = watch;
    WatchJS.unwatch = unwatch;
    WatchJS.callWatchers = callWatchers;

    return WatchJS;

}));

},{}],155:[function(require,module,exports){
var window = require("global/window")
var once = require("once")
var parseHeaders = require('parse-headers')

var messages = {
    "0": "Internal XMLHttpRequest Error",
    "4": "4xx Client Error",
    "5": "5xx Server Error"
}

var XHR = window.XMLHttpRequest || noop
var XDR = "withCredentials" in (new XHR()) ? XHR : window.XDomainRequest

module.exports = createXHR

function createXHR(options, callback) {
    if (typeof options === "string") {
        options = { uri: options }
    }

    options = options || {}
    callback = once(callback)

    var xhr = options.xhr || null

    if (!xhr) {
        if (options.cors || options.useXDR) {
            xhr = new XDR()
        }else{
            xhr = new XHR()
        }
    }

    var uri = xhr.url = options.uri || options.url
    var method = xhr.method = options.method || "GET"
    var body = options.body || options.data
    var headers = xhr.headers = options.headers || {}
    var sync = !!options.sync
    var isJson = false
    var key
    var load = options.response ? loadResponse : loadXhr

    if ("json" in options) {
        isJson = true
        headers["Accept"] = "application/json"
        if (method !== "GET" && method !== "HEAD") {
            headers["Content-Type"] = "application/json"
            body = JSON.stringify(options.json)
        }
    }

    xhr.onreadystatechange = readystatechange
    xhr.onload = load
    xhr.onerror = error
    // IE9 must have onprogress be set to a unique function.
    xhr.onprogress = function () {
        // IE must die
    }
    // hate IE
    xhr.ontimeout = noop
    xhr.open(method, uri, !sync)
                                    //backward compatibility
    if (options.withCredentials || (options.cors && options.withCredentials !== false)) {
        xhr.withCredentials = true
    }

    // Cannot set timeout with sync request
    if (!sync) {
        xhr.timeout = "timeout" in options ? options.timeout : 5000
    }

    if (xhr.setRequestHeader) {
        for(key in headers){
            if(headers.hasOwnProperty(key)){
                xhr.setRequestHeader(key, headers[key])
            }
        }
    } else if (options.headers) {
        throw new Error("Headers cannot be set on an XDomainRequest object")
    }

    if ("responseType" in options) {
        xhr.responseType = options.responseType
    }
    
    if ("beforeSend" in options && 
        typeof options.beforeSend === "function"
    ) {
        options.beforeSend(xhr)
    }

    xhr.send(body)

    return xhr

    function readystatechange() {
        if (xhr.readyState === 4) {
            load()
        }
    }

    function getBody() {
        // Chrome with requestType=blob throws errors arround when even testing access to responseText
        var body = null

        if (xhr.response) {
            body = xhr.response
        } else if (xhr.responseType === 'text' || !xhr.responseType) {
            body = xhr.responseText || xhr.responseXML
        }

        if (isJson) {
            try {
                body = JSON.parse(body)
            } catch (e) {}
        }

        return body
    }

    function getStatusCode() {
        return xhr.status === 1223 ? 204 : xhr.status
    }

    // if we're getting a none-ok statusCode, build & return an error
    function errorFromStatusCode(status) {
        var error = null
        if (status === 0 || (status >= 400 && status < 600)) {
            var message = (typeof body === "string" ? body : false) ||
                messages[String(status).charAt(0)]
            error = new Error(message)
            error.statusCode = status
        }

        return error
    }

    // will load the data & process the response in a special response object
    function loadResponse() {
        var status = getStatusCode()
        var error = errorFromStatusCode(status)
        var response = {
            body: getBody(),
            statusCode: status,
            statusText: xhr.statusText,
            raw: xhr
        }
        if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE
            response.headers = parseHeaders(xhr.getAllResponseHeaders())
        } else {
            response.headers = {}
        }

        callback(error, response, response.body)
    }

    // will load the data and add some response properties to the source xhr
    // and then respond with that
    function loadXhr() {
        var status = getStatusCode()
        var error = errorFromStatusCode(status)

        xhr.status = xhr.statusCode = status
        xhr.body = getBody()
        xhr.headers = parseHeaders(xhr.getAllResponseHeaders())

        callback(error, xhr, xhr.body)
    }

    function error(evt) {
        callback(evt, xhr)
    }
}


function noop() {}

},{"global/window":156,"once":157,"parse-headers":161}],156:[function(require,module,exports){
(function (global){
if (typeof window !== "undefined") {
    module.exports = window;
} else if (typeof global !== "undefined") {
    module.exports = global;
} else if (typeof self !== "undefined"){
    module.exports = self;
} else {
    module.exports = {};
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],157:[function(require,module,exports){
module.exports = once

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })
})

function once (fn) {
  var called = false
  return function () {
    if (called) return
    called = true
    return fn.apply(this, arguments)
  }
}

},{}],158:[function(require,module,exports){
var isFunction = require('is-function')

module.exports = forEach

var toString = Object.prototype.toString
var hasOwnProperty = Object.prototype.hasOwnProperty

function forEach(list, iterator, context) {
    if (!isFunction(iterator)) {
        throw new TypeError('iterator must be a function')
    }

    if (arguments.length < 3) {
        context = this
    }
    
    if (toString.call(list) === '[object Array]')
        forEachArray(list, iterator, context)
    else if (typeof list === 'string')
        forEachString(list, iterator, context)
    else
        forEachObject(list, iterator, context)
}

function forEachArray(array, iterator, context) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            iterator.call(context, array[i], i, array)
        }
    }
}

function forEachString(string, iterator, context) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        iterator.call(context, string.charAt(i), i, string)
    }
}

function forEachObject(object, iterator, context) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            iterator.call(context, object[k], k, object)
        }
    }
}

},{"is-function":159}],159:[function(require,module,exports){
module.exports = isFunction

var toString = Object.prototype.toString

function isFunction (fn) {
  var string = toString.call(fn)
  return string === '[object Function]' ||
    (typeof fn === 'function' && string !== '[object RegExp]') ||
    (typeof window !== 'undefined' &&
     // IE8 and below
     (fn === window.setTimeout ||
      fn === window.alert ||
      fn === window.confirm ||
      fn === window.prompt))
};

},{}],160:[function(require,module,exports){

exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};

},{}],161:[function(require,module,exports){
var trim = require('trim')
  , forEach = require('for-each')
  , isArray = function(arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    }

module.exports = function (headers) {
  if (!headers)
    return {}

  var result = {}

  forEach(
      trim(headers).split('\n')
    , function (row) {
        var index = row.indexOf(':')
          , key = trim(row.slice(0, index)).toLowerCase()
          , value = trim(row.slice(index + 1))

        if (typeof(result[key]) === 'undefined') {
          result[key] = value
        } else if (isArray(result[key])) {
          result[key].push(value)
        } else {
          result[key] = [ result[key], value ]
        }
      }
  )

  return result
}
},{"for-each":158,"trim":160}],162:[function(require,module,exports){
module.exports={
  "name": "webmaker",
  "version": "0.1.8",
  "repository": {
    "type": "git",
    "url": "https://github.com/mozilla/webmaker-app"
  },
  "scripts": {
    "test": "gulp test",
    "start": "gulp dev"
  },
  "main": "export.js",
  "dependencies": {
    "clone": "0.1.18",
    "event-emitter": "0.3.1",
    "fastclick": "1.0.3",
    "firebase": "2.0.4",
    "langmap": "0.0.9",
    "localforage": "1.1.1",
    "lodash.throttle": "2.4.1",
    "moment": "2.9.0",
    "page": "1.5.0",
    "sortable": "git://github.com/k88hudson/Sortable#webmaker-app",
    "vue": "git://github.com/k88hudson/vue#csp-10.6",
    "watchjs": "0.0.0",
    "webmaker-app-icons": "git://github.com/k88hudson/ionicons#webmaker-app",
    "xhr": "1.16.1"
  },
  "devDependencies": {
    "browserify": "6.3.2",
    "bulk-require": "0.2.1",
    "bulkify": "1.0.2",
    "esprima": "^1.2.2",
    "exorcist": "^0.1.6",
    "fs-extra": "0.11.1",
    "glob": "4.0.5",
    "gulp": "^3.8.8",
    "gulp-autoprefixer": "^2.0.0",
    "gulp-exit": "0.0.2",
    "gulp-jsbeautifier": "0.0.4",
    "gulp-jscs": "1.3.1",
    "gulp-jshint": "1.8.4",
    "gulp-less": "3.0.1",
    "gulp-minify-css": "0.3.11",
    "gulp-mocha": "1.0.0",
    "gulp-plumber": "0.6.6",
    "gulp-run": "^1.6.4",
    "gulp-sourcemaps": "1.2.4",
    "gulp-svgmin": "1.1.1",
    "gulp-template": "1.1.1",
    "gulp-util": "3.0.1",
    "gulp-webserver": "0.8.0",
    "habitat": "3.0.0",
    "merge-stream": "0.1.6",
    "mockrequire": "0.0.3",
    "mofo-style": "^1.0.1",
    "node-appcache-generator": "k88hudson/node-appcache-generator",
    "node-static": "0.7.4",
    "partialify": "3.1.1",
    "run-sequence": "^1.0.2",
    "tv4": "^1.1.4",
    "watchify": "^2.3.0",
    "webmaker-download-locales": "0.2.5"
  }
}

},{}],163:[function(require,module,exports){
module.exports = '<div v-component="navigationBar" class="nav-alt"></div>\n<div class="list-wrapper">\n    <div class="spacer"></div>\n    <div class="wrapper" v-class="addFlex: noBlock">\n        <ul>\n            <li v-repeat="block: blocks">\n                <a data-block="{{block.type}}" class="brick" href="/make/{{app.type}}/edit">\n                    <img src="{{block.icon}}" alt="{{block.name}}" />\n                    <p>{{ block.name | i18n }}</p>\n                </a>\n            </li>\n        </ul>\n        <ul>\n            <li v-repeat="block: inputBlocks">\n                <a data-block="{{block.type}}" class="brick" href="/make/{{app.type}}/edit">\n                    <img src="{{block.icon}}" alt="{{block.name}}" />\n                    <p>{{ block.name | i18n }}</p>\n                </a>\n            </li>\n        </ul>\n        <div v-show="!noBlock" class="toucanWrapper">\n            <div class="toucan">\n                <img src="images/toucan2.svg"/>\n            </div>\n            <div class="toucanspeak">\n                {{ \'toucanspeak\' | i18n }}\n            </div>\n        </div>\n\n    </div>\n\n</div>\n';
},{}],164:[function(require,module,exports){
(function (global){
var view = require('../../lib/view');
var Blocks = require('../../lib/blocks');
var blocks = new Blocks();
var analytics = require('../../lib/analytics');

var id = null;
var app = null;

module.exports = view.extend({
  id: 'add',
  template: require('./index.html'),
  computed: {
    noBlock: function () {
      return this.$data.app.blocks ? this.$data.app.blocks.length : 0;
    }
  },
  data: {
    // Provide a specific sort order
    title: 'Add Content',
    back: true,
    app: {},
    blocks: [
      blocks.text,
      blocks.image,
      blocks.sms,
      blocks.phone,
      blocks.link,
      blocks.separator
    ],
    inputBlocks: [],
    goBack: function (e) {
      e.preventDefault();
      this.page(this.$data.back);
    }
  },
  ready: function () {
    var self = this;

    // Fetch app
    id = self.$root.$data.params.id;
    app = self.$root.storage.getApp(id);

    self.$data.back = '/make/' + id;

    // Bind app
    if (app.data) {
      self.$root.isReady = true;
      self.$data.app = app.data;
    }
    self.$on(id, function (val) {
      self.$root.isReady = true;
      self.$data.app = val;
    });
    self.$data.onDone = '/make/' + id + '/share?publish=true';

    // Click handler
    function clickHandler(e) {
      e.preventDefault();

      // Attributes
      var blockId = e.currentTarget.getAttribute('data-block');

      // Add block to make
      app.insert(blockId);
      analytics.event({
        category: 'Blocks',
        action: 'Add',
        label: blockId
      });

      // Add to model & redirect to block edit page.
      // Newly added block always in index 0.
      if (blockId === 'image') {
        global.history.back();
      } else {
        self.page('/make/' + id + '/block/0');
      }
    }

    // Apply click handler to each cell
    var targets = self.$el.querySelectorAll('.brick');
    for (var i = 0; i < targets.length; i++) {
      targets[i].addEventListener('click', clickHandler);
    }

    // Apply click handler to parent element
    self.$el.addEventListener('click', function (e) {
      if (e.target.id === 'add-container') {
        e.preventDefault();
        self.page('/make/' + id);
      }
    });
  }
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../lib/analytics":69,"../../lib/blocks":72,"../../lib/view":88,"./index.html":163}],165:[function(require,module,exports){
module.exports = '<nav id="navigationBar" class="nav-default">\n    <div class="left">\n      <a v-on="click: onCancel" class="nav-btn">{{ \'Cancel\' | i18n}}</a>\n    </div>\n    <h1>{{title | i18n}}</h1>\n    <div class="right">\n        <a class="save-btn" v-class="disabled: saveDisabled" v-on="click: onSave"><span class="ion ion-checkmark-round"></span></a>\n    </div>\n    <div v-component="publishingStatus"></div>\n</nav>\n<main class="main-container">\n    <form>\n        <div class="form-group" v-repeat="block.attributes" v-component="{{ getEditor(type) }}" v-on="click: enableSave"></div>\n    </form>\n</main>\n';
},{}],166:[function(require,module,exports){
(function (global){
var view = require('../../lib/view');

var editorModels = ({"color":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/color/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/color/index.js");return f;})(),"data":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/data/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/data/index.js");return f;})(),"dropdownChoice":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/dropdownChoice/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/dropdownChoice/index.js");return f;})(),"font-size":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/font-size/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/font-size/index.js");return f;})(),"input":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/input/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/input/index.js");return f;})(),"number":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/number/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/number/index.js");return f;})(),"string":(function () {var f = require("/home/travis/build/mozilla/webmaker-app/components/block-editors/string/index.js");f["index"]=require("/home/travis/build/mozilla/webmaker-app/components/block-editors/string/index.js");return f;})()});
var clone = require('clone');
var app = null;
var index = null;
var id = null;

// Rename editor components
Object.keys(editorModels).forEach(function (id) {
  editorModels[id + '-editor'] = editorModels[id];
  delete editorModels[id];
});

module.exports = view.extend({
  id: 'block',
  template: require('./index.html'),
  components: editorModels,
  data: {
    title: 'Edit',
    // The following code has been commented off due to
    // https://github.com/mozilla/webmaker-app/issues/1046
    //
    // saveDisabled: true
    saveDisabled: false
  },
  methods: {
    remove: function (e) {
      e.preventDefault();
      app.remove(index);
      this.page(this.$data.back);
    },
    getEditor: function (type) {
      var editorKey = type + '-editor';
      var legalComponents = this.$compiler.options.components;
      if (legalComponents[editorKey]) {
        return editorKey;
      }
      var defaultEditor = 'string-editor';
      return defaultEditor;
    },
    disableSave: function (e) {
      // The following code has been commented off due to
      // https://github.com/mozilla/webmaker-app/issues/1046
      //
      // this.$data.saveDisabled = true;
      this.$data.saveDisabled = false;
    },
    enableSave: function (e) {
      this.$data.saveDisabled = false;
    },
    onSave: function (e) {
      e.preventDefault();
      app.updateBlock(index, {
        attributes: this.$data.block.attributes
      });
      this.$data.saveDisabled = true;

      // Go back an extra step after adding a new block
      if (window.urlHistory[window.urlHistory.length - 2].match(/\/add$/)) {
        global.history.go(-2);
      } else {
        global.history.go(-1);
      }

      global.history.replaceState({}, '', this.$data.back);
    },
    onCancel: function (e) {
      e.preventDefault();
      if (this.$data.mode === 'edit') {
        global.history.back();
        global.history.replaceState({}, '', this.$data.back);
        return;
      }
      app.remove(index);
      id = this.$root.$data.params.id;
      global.history.back();
    }
  },
  created: function () {
    var self = this;
    var mode = self.$root.$data.params.mode;
    id = self.$root.$data.params.id;
    index = self.$root.$data.params.index;

    // Navigation
    self.$data.back = '/make/' + id;

    // Fetch app
    app = self.$root.storage.getApp(id);
    if (app.data && app.data.blocks) {
      self.$root.isReady = true;
      self.$data.block = clone(app.data.blocks[index]);
    } else {
      self.$once(id, function (val) {
        self.$root.isReady = true;
        if (!val || !val.blocks) {
          return;
        }
        self.$data.block = val.blocks[index];
      });
    }
    self.$data.mode = mode;
    self.$data.index = index;
  }
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../lib/view":88,"./index.html":165,"/home/travis/build/mozilla/webmaker-app/components/block-editors/color/index.js":28,"/home/travis/build/mozilla/webmaker-app/components/block-editors/data/index.js":30,"/home/travis/build/mozilla/webmaker-app/components/block-editors/dropdownChoice/index.js":32,"/home/travis/build/mozilla/webmaker-app/components/block-editors/font-size/index.js":34,"/home/travis/build/mozilla/webmaker-app/components/block-editors/input/index.js":36,"/home/travis/build/mozilla/webmaker-app/components/block-editors/number/index.js":38,"/home/travis/build/mozilla/webmaker-app/components/block-editors/string/index.js":40,"clone":99}],167:[function(require,module,exports){
module.exports = '<nav v-component="navigationBar" class="nav-default" v-with="title: app.name"></nav>\n<div v-if="!app.id" v-component="alert" type="error" message="errorAppNotFound"></div>\n<div v-if="app.id">\n    <header style="background-color: {{app.iconColor}}">\n        <div class="app-icon">\n            <div class="app-icon-image" style="background-image: url(\'{{app.iconImage}}\')"></div>\n        </div>\n    </header>\n\n    <div v-show="subView === \'myApp\'">\n        <ul v-show="isAdmin" class="list-cell show-in-discover">\n           <li>\n                <div\n                    v-component="toggle"\n                    v-with="checked: app.isDiscoverable, disabled: disableDiscovery"\n                    toggle-id="showInGallery">\n                </div>\n                <span>{{\'Show this app in the Discover Gallery\' | i18n}}</span>\n            </li>\n        </ul>\n\n        <article class="app-details">\n            <div v-show="isAdmin" class="two-buttons">\n                <a class="btn action" href="/make/{{id}}/">{{\'Open my app\' | i18n}}</a>\n                <a class="btn btn-delete" v-on="click: deleteClick"></span>{{\'Delete\' | i18n}}</a>\n            </div>\n            <div v-show="!isAdmin" class="preview-buttons">\n                <a class="btn action" v-on="click: onRemix">{{\'Remix App\' | i18n}}</a>\n                <a class="btn action" href="/play/{{id}}">{{\'Open App\' | i18n}}</a>\n            </div>\n\n            <div class="app-preview">\n                <ul class="blocks">\n                    <li class="preview-overlay" v-on="click: disableBlocks"></li>\n                    <li v-component="{{type}}" v-repeat="app.blocks"></li>\n                </ul>\n            </div>\n        </article>\n    </div>\n    <div v-show="subView === \'appData\'">\n        <div v-component="dataRepresentation" v-with="dataSet : currentDataSets, initialDataLoaded : initialDataLoaded"></div>\n    </div>\n\n</div>\n';
},{}],168:[function(require,module,exports){
var view = require('../../lib/view');
var Data = require('../../lib/data');
var analytics = require('../../lib/analytics');

var app;

module.exports = view.extend({
  id: 'detail',
  template: require('./index.html'),
  data: {
    back: true,
    title: 'App',
    subView: 'myApp'
  },
  methods: {
    onRemix: function (e) {
      var self = this;
      e.preventDefault();
      self.$root.storage.remix(this.$data.id, function (data) {
        self.page('/make/' + data.id);
      });
    },
    deleteClick: function () {
      this.$dispatch('showShim');
      this.$dispatch('openModalPrompt', {
        type: 'delete'
      });
    },
    removeApp: function () {
      app.removeApp();
      this.page('/profile');
    }
  },
  created: function () {
    var self = this;
    var id = self.$root.params.id;

    self.$data.id = id;

    self.$data.isAdmin = self.$root.params.role === 'admin';

    // Fetch app
    app = self.$root.storage.getApp(id);

    if (app.data) {
      self.$root.isReady = true;
      self.$data.app = app.data;
    }

    self.$on(id, function (val) {
      self.$root.isReady = true;
      self.$data.app = val;
    });

    var data = new Data(id);

    self.currentDataSets = [];
    data.fetch(function (err, currentDataSets) {
      self.$data.initialDataLoaded = true;
      self.currentDataSets = currentDataSets;
    });
  },
  ready: function () {
    var self = this;

    self.$on('switchValueChanged', function (event) {
      if (event === 'My App') {
        self.subView = 'myApp';
        analytics.event({
          category: 'My App',
          action: 'Switch',
          label: 'My App'
        });
      } else if (event === 'App Data') {
        self.subView = 'appData';
        analytics.event({
          category: 'My App',
          action: 'Switch',
          label: 'App Data'
        });
      }
    });

    self.$on('toggleChange', function (event) {
      if (event.source === 'showInGallery') {
        app.update({
          isDiscoverable: event.value
        });
        analytics.event({
          category: 'Discover Gallery',
          action: 'Set Discover Gallery Status',
          label: event.value
        });
      }
    });

    self.$on('onConfirmClick', function (event) {
      console.warn('Deleting app!');
      self.removeApp();
    });
  }
});

},{"../../lib/analytics":69,"../../lib/data":73,"../../lib/view":88,"./index.html":167}],169:[function(require,module,exports){
module.exports = '<nav v-component="navigationBar" class="nav-default"></nav>\n\n<div v-show="isOnline">\n    <div>\n        <div v-component="switch" v-with="options: [\'Featured\',\'Newest\']"></div>\n    </div>\n\n    <ul class="list-cell" v-show="mode === \'Featured\'">\n        <li v-component="appCell" v-repeat="app: apps.featured" appId="{{app.$key}}"  type="discover"></li>\n    </ul>\n\n    <ul class="list-cell" v-show="mode === \'Newest\'">\n        <li v-component="appCell" v-repeat="app: apps.newest" appId="{{app.$key}}" type="discover"></li>\n    </ul>\n</div>\n\n<div v-show="!isOnline" style="height: 100%">\n    <div class="missing">\n        <div class="top">\n            <img src="images/no-internet.svg">\n\n            <p>{{\'The Internet fell asleep!\' | i18n}}</p>\n\n            <p class="sub">\n                {{\'An active connection is needed to display the Discover Gallery\' | i18n}}\n            </p>\n        </div>\n\n        <div class="bottom">\n            <p class="sub" v-bind-i18n-html="\'Head over to Make to start creating your very own app.\'"></p>\n            <img src="images/arrow-fade-down.svg">\n        </div>\n\n    </div>\n</div>\n\n<div v-component="tabBar"></div>\n';
},{}],170:[function(require,module,exports){
var view = require('../../lib/view');
var network = require('../../lib/network.js');
var analytics = require('../../lib/analytics');

var maxAppsToShow = 10;

module.exports = view.extend({
  id: 'discover',
  template: require('./index.html'),
  ready: function () {
    this.$on('switchValueChanged', function (event) {
      if (event === 'Newest') {
        this.showNewest();
        analytics.event({
          category: 'Discover',
          action: 'Switch',
          label: 'Newest'
        });
      } else if (event === 'Featured') {
        this.showFeatured();
        analytics.event({
          category: 'Discover',
          action: 'Switch',
          label: 'Featured'
        });
      }
    });

    this.showFeatured();

    this.isOnline = network.isOnline;
    console.log('[Network] ' + this.isOnline);
  },
  methods: {
    showNewest: function () {
      var self = this;

      self.mode = 'Newest';

      self.$root.storage._firebase
        .orderByChild('isDiscoverable')
        .equalTo(true)
        .limitToLast(maxAppsToShow)
        .on('value', function (snapshot) {
          self.apps.newest = snapshot.val();
        });
    },
    showFeatured: function () {
      var self = this;

      self.mode = 'Featured';

      self.$root.storage._firebase
        .orderByChild('isFeatured')
        .equalTo(true)
        .limitToLast(maxAppsToShow)
        .on('value', function (snapshot) {
          self.apps.featured = snapshot.val();
        });
    }
  },
  data: {
    title: 'Discover',
    apps: {
      featured: [],
      newest: []
    }
  }
});

},{"../../lib/analytics":69,"../../lib/network.js":77,"../../lib/view":88,"./index.html":169}],171:[function(require,module,exports){
module.exports = '<div v-component="alert" type="error" message="{{message}}"></div>\n<div v-component="tabBar"></div>\n';
},{}],172:[function(require,module,exports){
(function (global){
var view = require('../../lib/view');
var analytics = require('../../lib/analytics');

module.exports = view.extend({
  id: 'error',
  template: require('./index.html'),
  computed: {
    message: function () {
      var code = +this.$root.params.code;
      var message;
      switch (code) {
        case 404: {
          message = 'error404';
          break;
        }
        default: {
          message = 'defaultError';
        }
      }
      analytics.error({
        description: message
      });
      return message;
    }
  },
  created: function () {
    this.$root.isReady = true;
    console.error('Error ' +
      this.$root.params.code +
      ': ' +
      global.location.pathname);
  }
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../lib/analytics":69,"../../lib/view":88,"./index.html":171}],173:[function(require,module,exports){
module.exports = '<div v-component="navigationBar" class="nav-default"></div>\n\n<dl>\n    <dt>Version</dt>\n    <dd>{{package.version}}</dd>\n</dl>\n<dl v-repeat="config">\n    <dt>{{$key}}</dt>\n    <dd>{{$value}}</dd>\n</dl>\n<dl>\n  <dt>CURRENT_LANG</dt>\n  <dd>\n    <select class="dropdownChoiceSelect" v-model="currentLang" v-on="change: selectedLang">\n      <option value="use-default">Use device default</option>\n      <option v-repeat="options" value="{{$value}}" class="option-{{$index}}">{{ langmap($value) }}</option>\n    </select>\n  </dd>\n</dl>\n<dl>\n    <dt>DELETE ALL YOUR APPS</dt>\n    <dd>\n      <button href="#" class="btn" v-on="click: clean">DELETE NOW</button>\n    </dd>\n</dl>\n';
},{}],174:[function(require,module,exports){
var view = require('../../lib/view');
var clone = require('clone');
var _config = require('../../config');
var config = clone(_config);
var packageJSON = clone(config.package);
var i18n = require('../../lib/i18n.js');
var langmap = require('langmap');
delete config.package;

module.exports = view.extend({
  id: 'healthcheck',
  template: require('./index.html'),
  data: {
    title: 'Developer Health Check',
    back: '/profile',
    config: config,
    package: packageJSON
  },
  computed: {
    options: function () {
      return i18n.supportedLangs();
    }
  },
  methods: {
    langmap: function (locale) {
      return langmap[locale].nativeName;
    },
    clean: function (e) {
      var self = this;
      var storage = self.$root.storage;
      self.$data.myApps = storage.getApps();
      var sure = window.confirm('Are you sure you want to delete all of your apps? There is no going back :)');
      if (sure) {
        self.$data.myApps.forEach(function (app) {
          self.$root.storage.getApp(app.id).removeApp();
        });
        self.$data.myApps = [];
        self.page(this.$data.back);
      }
    },
    selectedLang: function (e) {
      if (e.target.value === 'use-default') {
        this.model.data.session.locale = navigator.language;
        i18n.setLocale(this.model.data.session.locale, true);
      } else {
        i18n.setLocale(e.target.value, true);
      }
      this.page(this.$data.back);
    }
  },
  ready: function () {
    this.$data.currentLang = this.model.data.session.locale;
  }
});

},{"../../config":68,"../../lib/i18n.js":74,"../../lib/view":88,"./index.html":173,"clone":99,"langmap":102}],175:[function(require,module,exports){
module.exports = '<div v-show="!app.id" v-component="alert" type="error" message="errorAppNotFound"></div>\n<div v-show="app.id" class="makeContainer">\n\n\n    <div id="navigationBar" class="nav-default nav-flex">{{ >navigation }}</div>\n    <div class="toucan" v-show="!noBlock && mode === \'edit\'">\n        <img src="images/toucan1.svg"/>\n    </div>\n\n    <main v-class="edit-container: mode === \'edit\', settings-container: mode === \'settings\', no-block: noBlock === 0 && mode !== \'settings\'">\n        <div v-show="mode === \'settings\'">{{ >settings }}</div>\n\n        <div v-show="[\'edit\'].indexOf(mode) > -1">\n            <div v-component="blockList" id="blocks" class="blocks" v-class="offline: !isOnline" v-with="appid: app.id">\n                <div\n                    mode="{{ mode }}"\n                    app="{{ app }}"\n                    index="{{ $index }}"\n                    v-component="inlineEditor"\n                    v-repeat="block : app.blocks">\n\n                    <div\n                        v-with="block"\n                        v-component="{{ block.type }}"></div>\n                </div>\n            </div>\n        </div>\n    </main>\n</div>\n';
},{}],176:[function(require,module,exports){
(function (global){
var view = require('../../lib/view');
var Data = require('../../lib/data');
var utils = require('../../lib/utils');
var throttle = require('lodash.throttle');
var Sortable = require('sortable');
var publish = require('../../lib/publish');
var i18n = require('../../lib/i18n');
var ua = require('../../lib/ua');
var analytics = require('../../lib/analytics');
var network = require('../../lib/network');

var sort;
var app;
var iconColors = utils.baseColors;

var iconImages = [
  'activist.svg',
  'blogger.svg',
  'howto.svg',
  'journalist.svg',
  'puppy.svg',
  'safety.svg',
  'scientist.svg',
  'music.svg',
  'teacher.svg',
  'vendor.svg',
  'family.svg'
].map(function (icon) {
  return 'images/icons/' + icon;
});

module.exports = view.extend({
  id: 'make',
  data: {
    isOnline: network.isOnline,
    faded: false
  },
  template: require('./index.html'),
  partials: {
    navigation: require('./navigation.html'),
    settings: require('./settings.html')
  },
  computed: {
    noBlock: function () {
      return this.$data.app.blocks ? this.$data.app.blocks.length : 0;
    }
  },
  methods: {
    showMenu: function () {
      this.$parent.$broadcast('openSideMenu');
      this.$parent.$broadcast('openShim');
    },
    goBack: function (e, isCancel) {
      e.preventDefault();
      if (this.$data.mode === 'settings') {
        // Restore original data for a cancellation
        if (isCancel) {
          app.update({
            iconImage: this.$data.originalIconImage,
            iconColor: this.$data.originalIconColor,
            name: this.$data.originalName,
            isDiscoverable: this.$data.originalIsDiscoverable
          });
        } else {
          this.$data.originalIconImage = app.data.iconImage;
          this.$data.originalIconColor = app.data.iconColor;
          this.$data.originalName = app.data.name;
          this.$data.originalIsDiscoverable = app.data.isDiscoverable;
        }

        this.$data.changeMode('edit');
      } else {
        this.page('/profile');
      }
    },
    goPreviousView: function (e) {
      global.history.back();
    },
    enableSave: function () {
      this.$data.saveDisabled = false;
    },
    hideSpeech: function () {
      this.$data.faded = true;
    },
    onSave: function (e) {
      this.goBack(e, false);
      this.updateName(this.$data.app.name);
      this.hideSpeech();
    },
    onCancel: function (e) {
      this.goBack(e, true);
    },
    updateName: throttle(function (newVal) {
      this.enableSave();
      app.update({
        name: newVal
      });
      analytics.event({
        category: 'App Name & Icon',
        action: 'Name (autosaves)',
        label: newVal
      });
    }, 3000),
    previousIconImage: function () {
      this.selectIconImage('previous');
    },
    nextIconImage: function () {
      this.selectIconImage('next');
    },
    selectIconImage: function (direction) {
      var data = this.$data;
      var index = data.iconImages.indexOf(data.app.iconImage) || 0;
      var maxIndex = data.iconImages.length - 1;

      direction === 'next' ? index++ : index--;
      if (index < 0) {
        index = maxIndex;
      }
      if (index > maxIndex) {
        index = 0;
      }
      this.enableSave();
      app.update({
        iconImage: data.iconImages[index]
      });
    },
    onSelectIconColor: function (color) {
      this.enableSave();
      app.update({
        iconColor: color
      });
      analytics.event({
        category: 'App Name & Icon',
        action: 'Color',
        label: color
      });
    },
    saveAppSettings: function () {
      if (this.$data.mode === 'settings') {
        this.$data.changeMode('edit');
      }
    },
    removeApp: function () {
      app.removeApp();
      this.page('/profile');
    },
    trashClick: function () {
      this.$dispatch('showShim');
      this.$dispatch('openModalPrompt', {
        type: 'delete'
      });
    },
    publish: function () {
      var self = this;
      var id = self.$root.$data.params.id;
      var user = this.model.data.session.user;
      var root = self.$root;

      // Publish
      if (!self.$data.isOnline) {
        root.$broadcast('publishOffline');
        return;
      }
      root.$broadcast('publishingStarted');
      publish(id, user, function (err, data) {
        if (err) {
          root.$broadcast('publishingError', err);
          return;
        }

        root.$broadcast('publishingDone');
        console.log('[Publish]', data.url);

        // callback funciton for social share success
        function shareSuccess() {
          analytics.event({
            category: 'Social',
            action: 'Share Success',
            label: 'Android'
          });
        }

        // Native Sharing (Android / iOS) or dispatch SMS (FirefoxOS)
        var msg = i18n.get('share_message');
        var url = data.url;

        if (typeof window.plugins === 'undefined') {
          return;
        }

        if (typeof window.plugins.socialsharing === 'undefined') {
          return;
        }

        if (ua.isFirefoxOS) {
          analytics.screenView({
            screenName: 'Social Share View FirefoxOS (sms)'
          });
          window.location.href = 'sms:?body=' + msg + ' ' + url;
        } else {
          analytics.screenView({
            screenName: 'Social Share View Android'
          });
          window.plugins.socialsharing.share(msg, null, null, url, shareSuccess);
        }
      });
    },
    fadeOut: function (element) {
      this.hideSpeech();

      var op = 1; // initial opacity
      var timer = setInterval(function () {
        if (op <= 0.1) {
          clearInterval(timer);
          element.style.display = 'none';
        }
        element.style.opacity = op;
        element.style.filter = 'alpha(opacity=' + op * 100 + ')';
        op -= op * 0.1;
      }, 50);
    }
  },
  ready: function () {
    var self = this;
    var element = self.$el.querySelector('.fadeAway');

    if (element) {
      setTimeout(function () {
        self.fadeOut(element);
      }, 3000);
    }

    self.$on('onConfirmClick', function (event) {
      console.warn('Deleting app!');
      self.removeApp();
    });

    // Broadcast individual editor starts to all inline editors
    // This is so that they know to hide if another one opens
    self.$on('inlineEditorStarted', function (event) {
      self.$broadcast('inlineEditorStarted', event);
    });

    self.$on('toggleChange', function (event) {
      if (event.source === 'showInGallerySetting') {
        app.update({
          isDiscoverable: event.value
        });

        analytics.event({
          category: 'Discover Gallery',
          action: 'Set Discover Gallery Status',
          label: event.value
        });

        this.enableSave();
      }
    });
  },
  created: function () {
    var self = this;
    var id = self.$root.$data.params.id;
    var storage = self.$root.storage;
    var isDragging = false;

    app = storage.getApp(id);

    self.$data.saveDisabled = true;
    self.$data.iconColors = iconColors;
    self.$data.iconImages = iconImages;

    var list = self.$el.querySelector('.blocks');

    function getIndex(nodeList, el) {
      for (var i = 0; i < nodeList.length; i++) {
        if (nodeList[i] === el) {
          return i;
        }
      }
    }

    function onValue(val) {
      self.$root.isReady = true;

      if (isDragging) {
        return;
      }

      if (!val) {
        return;
      }
      self.$data.app = val;

      var blocks = val.blocks;

      try {
        if (sort) {
          sort.destroy();
        }
      } catch (e) {
        console.log('sort error', e);
      }

      sort = new Sortable(list, {
        handle: '.draggable-handle',
        scroll: self.$root.$el,
        onStart: function () {
          isDragging = true;
        },
        onEnd: function (e) {
          isDragging = false;

          var el = e.target;
          var lis = list.querySelectorAll('li');
          var start = el.getAttribute('index');
          var end = getIndex(lis, el);

          isDragging = false;

          blocks.splice(end, 0, blocks.splice(start, 1)[0]);
          // update
          app.update({
            blocks: blocks
          });
        }
      });
    }

    if (app.data) {
      onValue(app.data);
      self.$data.originalIconImage = self.$data.app.iconImage;
      self.$data.originalIconColor = self.$data.app.iconColor;
      self.$data.originalName = self.$data.app.name;
      self.$data.originalIsDiscoverable = self.$data.app.isDiscoverable;
    }

    self.$on(id, onValue);

    // Modes
    // ---------------------------------------------------------------------
    self.$data.changeMode = function (mode) {
      var modes = ['edit', 'settings'];
      if (modes.indexOf(mode) === -1) {
        console.log('warning: ' + mode + ' is not a valid mode');
        mode = 'edit';
      }
      if (mode === 'settings' && self.$data.mode === 'settings') {
        mode = 'edit';
      }
      self.$data.saveDisabled = true;
      self.$data.mode = mode;
      self.$root.isEditing = self.$data.mode === 'edit';
      // update toggle
      if (self.$data.app) {
        self.$broadcast('updateToggle', self.$data.app.isDiscoverable);
      }
    };

    var regex = new RegExp('[\\?&]mode=([^&#]*)');
    var results = regex.exec(window.location.search);

    var mode = results ? results[1] : 'edit';
    self.$data.changeMode(mode);

    self.$data.goTo = function (href, $event) {
      if (self.$data.mode !== 'edit') {
        return;
      }
      self.page(href);
    };

    // Handle save events
    // ---------------------------------------------------------------------
    var data = new Data(id);
    self.$on('dataSave', function () {
      if (!self.$data.isOnline) {
        self.$broadcast('publishOffline');
        return;
      }
      data.collect(this.$el, function onDataSave(err) {
        if (err) {
          analytics.error({
            description: 'Firebase Save Error'
          });
          return console.log('[Firebase] ' + err);
        }
        self.$broadcast('dataSaveSuccess');
      });
    });
  }
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../lib/analytics":69,"../../lib/data":73,"../../lib/i18n":74,"../../lib/network":77,"../../lib/publish":78,"../../lib/ua":85,"../../lib/utils":86,"../../lib/view":88,"./index.html":175,"./navigation.html":177,"./settings.html":178,"lodash.throttle":110,"sortable":121}],177:[function(require,module,exports){
module.exports = '<div v-class="\n  flex-grow-0 : mode == \'settings\',\n  flex-grow-1 : mode != \'settings\'\n">\n    <div class="button-group" v-if="mode !== \'settings\'">\n        <button\n            v-on="click: goPreviousView">\n            <span class="icon ion-android-arrow-back"></span>\n        </button>\n\n        <button\n            v-on="click: changeMode(\'settings\'), click: hideSpeech()">\n            <span class="ion ion-android-settings"></span>\n        </button>\n\n        <button\n            v-on="click: trashClick">\n            <span class="ion ion-trash-a"></span>\n        </button>\n\n        <button\n            v-on="click: publish">\n            <span class="ion ion-android-share-alt"></span>\n        </button>\n    </div>\n\n    <a\n        class="nav-btn"\n        v-on="click: onCancel"\n        v-if="mode == \'settings\'">\n        {{ \'Cancel\' | i18n}}\n    </a>\n\n    <a\n        class="save-btn"\n        v-class="disabled: saveDisabled"\n        v-on="click: onSave"\n        v-if="mode == \'settings\'">\n        <span class="ion ion-checkmark-round"></span>\n    </a>\n</div>\n\n<div class="flex-grow-0">\n    <a v-on="click: hideSpeech()" href="/make/{{app.id}}/add" class="add-btn" v-if="mode === \'edit\'">\n        <img src="content/icons/nav-add.svg">\n    </a>\n</div>\n\n<div v-show="mode !== \'settings\' && noBlock == 0" class="toucanWrapper">\n    <div class="toucanspeak">\n        {{ \'Tap the plus sign to begin adding content.\' | i18n }}\n    </div>\n</div>\n\n<div v-show="mode !== \'settings\' && !faded && noBlock == 1" class="toucanWrapper fadeAway">\n    <div class="toucanspeak">\n        {{ \'Tap the plus sign to add more content.\' | i18n }}\n    </div>\n</div>\n\n<div v-component="publishingStatus"></div>\n';
},{}],178:[function(require,module,exports){
module.exports = '<div class="form-group">\n    <label for="name">{{ \'App Name\'| i18n }}</label>\n    <input id="name" type="text" v-model="app.name" v-on="keydown: updateName(app.name)">\n</div>\n\n<div>\n    <ul class="list-cell show-in-discover">\n       <li>\n            <div\n                v-component="toggle"\n                v-with="checked: app.isDiscoverable, disabled: disableDiscovery"\n                toggle-id="showInGallerySetting">\n            </div>\n            <span>{{\'Show this app in the Discover Gallery\' | i18n}}</span>\n        </li>\n    </ul>\n</div>\n\n<div class="icon-chooser">\n    <div class="button" v-on="click: previousIconImage()">\n        <span class="ion ion-chevron-left"></span>\n    </div>\n    <div class="icon-container">\n        <div style="background: {{app.iconColor}}" class="app-icon">\n          <div class="icon-image" style="background-image:url(\'{{app.iconImage}}\')"></div>\n        </div>\n    </div>\n    <div class="button" v-on="click: nextIconImage()">\n        <span class="ion ion-chevron-right"></span>\n    </div>\n</div>\n\n<ul class="swatches">\n    <li v-repeat="color: iconColors" style="background-color: {{color}};"\n        v-on="click: onSelectIconColor(color)"></li>\n</ul>\n\n<div class="form-group" v-if="app.url">\n    <label for="url">URL</label>\n    <p id="url" class="url">{{app.url}}</p>\n</div>\n';
},{}],179:[function(require,module,exports){
module.exports = '\n<div v-show="!app.id" v-component="alert" type="error" message="errorAppNotFound"></div>\n<div v-show="app.id">\n    <div v-component="navigationBar" v-with="title: app.name" class="nav-default"></div>\n    <main>\n        <ul class="blocks">\n            <li v-component="{{type}}" v-repeat="app.blocks"></li>\n        </ul>\n    </main>\n</div>\n';
},{}],180:[function(require,module,exports){
var view = require('../../lib/view');
var Data = require('../../lib/data');

module.exports = view.extend({
  id: 'play',
  template: require('./index.html'),
  data: {
    back: true,
    app: {}
  },
  ready: function () {
    var self = this;
    var id = self.$root.params.id;

    // Fetch app
    var ref = self.$root.storage._firebase.child(id);

    ref.once('value', function (snapshot) {
      self.$root.isReady = true;
      self.$data.app = snapshot.val();
      self.$data.app.id = snapshot.key();
    });

    // Handle save events
    // ---------------------------------------------------------------------
    var data = new Data(id);
    self.$on('dataSave', function () {
      data.collect(this.$el, function onDataSave(err) {
        if (err) {
          return console.log('[Firebase] ' + err);
        }
        self.$broadcast('dataSaveSuccess');
      });
    });
  }
});

},{"../../lib/data":73,"../../lib/view":88,"./index.html":179}],181:[function(require,module,exports){
module.exports = '<nav v-component="navigationBar" class="nav-default"></nav>\n\n<div class="profile-details">\n    <ul class="list-cell">\n        <li v-component="appCell" v-repeat="app: myApps" appId="{{app.id}}" type="profile"></li>\n    </ul>\n\n    <div class="missing" v-show="myApps.length == 0">\n        <div class="top">\n            <p>{{"You haven\'t created any apps yet." | i18n}}</p>\n        </div>\n\n        <div class="bottom">\n            <p class="sub" v-bind-i18n-html="\'Head over to Make to start creating your very own app.\'"></p>\n            <img src="images/arrow-fade-down.svg">\n        </div>\n\n    </div>\n\n    <ul class="privacy-legal">\n        <li>\n            <a href="https://webmaker.org/en-US/terms" v-on="click: openInBrowser">\n                {{ "Legal" | i18n }}\n            </a>\n        </li>\n        <li>\n            <a href="https://webmaker.org/en-US/privacy" v-on="click: openInBrowser">\n                {{ "Privacy Policy" | i18n }}\n            </a>\n        </li>\n    </ul>\n    <p class="text-center">\n        <a href="/healthcheck" class="invisible-text">open developer menu</a>\n    </p>\n</div>\n\n<div v-component="tabBar"></div>\n';
},{}],182:[function(require,module,exports){
var utils = require('../../lib/utils');
var view = require('../../lib/view');

module.exports = view.extend({
  id: 'profile',
  template: require('./index.html'),
  data: {
    title: 'My Apps',
    myApps: [],
    openInBrowser: utils.openInBrowser
  },
  computed: {
    user: function () {
      return this.model.data.session.user;
    }
  },
  ready: function () {
    var self = this;
    var storage = self.$root.storage;

    self.$data.myApps = storage.getApps();
    self.$root.isReady = true;

    function onAdded(val) {
      self.$data.myApps.push(val);
    }

    function onChanged(val) {
      console.log(val);
      self.$data.myApps.forEach(function (app, i) {
        if (app.id === val.id) {
          self.$data.myApps.splice(i, 1);
          self.$data.myApps.unshift(val);
        }
      });
    }

    function onRemoved(id) {
      var index = false;
      self.$data.myApps.forEach(function (app, i) {
        if (app.id === id) {
          index = i;
        }
      });
      if (index !== false) {
        self.$data.myApps.splice(index, 1);
      }
    }

    self.$on('query_changed', function () {
      self.$data.myApps = storage.getApps();
    });

    self.$on('app_added', onAdded);
    self.$on('app_removed', onRemoved);
    self.$on('app_changed', onChanged);
  }
});

},{"../../lib/utils":86,"../../lib/view":88,"./index.html":181}],183:[function(require,module,exports){
module.exports = '<div class="top">\n    <h1><span v-bind-i18n-html="\'Make and share the web\'"></span></h1>\n\n</div>\n\n<div class="bottom">\n    <a href="/templates" class="btn btn-next">{{ \'Get Started\' | i18n }}</a>\n</div>\n\n';
},{}],184:[function(require,module,exports){
var view = require('../../lib/view');

module.exports = view.extend({
  id: 'sign-in',
  template: require('./index.html')
});

},{"../../lib/view":88,"./index.html":183}],185:[function(require,module,exports){
module.exports = '<div v-if="!app.id" v-component="alert" type="error" message="errorAppNotFound"></div>\n<main v-if="app.id" v-show="app.id !== \'blank\'">\n    <nav v-component="navigationBar" class="nav-default"></nav>\n    <div class="start-building">\n        <button class="btn" v-on="click: create">{{ \'Start Building\' | i18n }}</button>\n    </div>\n    <div class="app-preview">\n        <ul class="blocks">\n            <li class="preview-overlay" v-on="click: disableBlocks"></li>\n            <li v-component="{{type}}" v-repeat="app.blocks"></li>\n        </ul>\n    </div>\n</main>\n';
},{}],186:[function(require,module,exports){
var view = require('../../lib/view');
var templates = require('../../lib/templates');
var clone = require('clone');

module.exports = view.extend({
  id: 'template-preview',
  template: require('./index.html'),
  data: {
    back: '/templates'
  },
  methods: {
    create: function (e) {
      e.preventDefault();
      this.createAppFromTemplate(this.$root.params.id);
    }
  },
  created: function () {
    var self = this;
    var id = self.$root.params.id;

    self.$data.id = id;
    templates.forEach(function (template) {
      var data;
      if (template.id === id) {
        data = clone(template);
        data.id = id;
        self.$data.app = data;
        self.$data.title = data.templateTitle;
      }
      self.$root.isReady = true;
    });
  }
});

},{"../../lib/templates":83,"../../lib/view":88,"./index.html":185,"clone":99}],187:[function(require,module,exports){
module.exports = '<ul class="list-cell template-cell">\n    <li v-repeat="templates" style="background-color: {{iconColor}}">\n        <a href="/template/{{id}}/detail" v-on="click: createBlank($event, id)" class="cell" template="true">\n            <div class="left">\n                <div class="app-icon">\n                  <div class="app-icon-image" style="background-image:url({{iconImage}});"></div>\n                </div>\n            </div>\n            <div class="middle">\n                <span class="title">{{(templateTitle || name) | i18n}}</span>\n            </div>\n            <div class="right">\n                <span class="ion ion-chevron-right"></span>\n            </div>\n        </a>\n    </li>\n</ul>\n\n<div v-component="tabBar"></div>\n';
},{}],188:[function(require,module,exports){
var templates = require('../../lib/templates.json');
var view = require('../../lib/view');

module.exports = view.extend({
  id: 'templates',
  template: require('./index.html'),
  data: {
    title: 'Make Your Own App',
    templates: templates
  },
  methods: {
    createBlank: function (e, id) {
      if (id === 'blank') {
        e.preventDefault();
        this.createAppFromTemplate(id);
      }
    }
  }
});

},{"../../lib/templates.json":83,"../../lib/view":88,"./index.html":187}]},{},[75]);
